ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvGetDisinheritPriorityAfterTimeout, %function
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB25:
  26              		.file 1 "FreeRTOS\\src\\queue.c"
   1:FreeRTOS\src/queue.c **** /*
   2:FreeRTOS\src/queue.c ****  * FreeRTOS Kernel V10.1.1
   3:FreeRTOS\src/queue.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS\src/queue.c ****  *
   5:FreeRTOS\src/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS\src/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS\src/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS\src/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS\src/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS\src/queue.c ****  * subject to the following conditions:
  11:FreeRTOS\src/queue.c ****  *
  12:FreeRTOS\src/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS\src/queue.c ****  * copies or substantial portions of the Software.
  14:FreeRTOS\src/queue.c ****  *
  15:FreeRTOS\src/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS\src/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS\src/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS\src/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS\src/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS\src/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS\src/queue.c ****  *
  22:FreeRTOS\src/queue.c ****  * http://www.FreeRTOS.org
  23:FreeRTOS\src/queue.c ****  * http://aws.amazon.com/freertos
  24:FreeRTOS\src/queue.c ****  *
  25:FreeRTOS\src/queue.c ****  * 1 tab == 4 spaces!
  26:FreeRTOS\src/queue.c ****  */
  27:FreeRTOS\src/queue.c **** 
  28:FreeRTOS\src/queue.c **** #include <stdlib.h>
  29:FreeRTOS\src/queue.c **** #include <string.h>
  30:FreeRTOS\src/queue.c **** 
  31:FreeRTOS\src/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 2


  32:FreeRTOS\src/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:FreeRTOS\src/queue.c **** task.h is included from an application file. */
  34:FreeRTOS\src/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:FreeRTOS\src/queue.c **** 
  36:FreeRTOS\src/queue.c **** #include "FreeRTOS.h"
  37:FreeRTOS\src/queue.c **** #include "task.h"
  38:FreeRTOS\src/queue.c **** #include "queue.h"
  39:FreeRTOS\src/queue.c **** 
  40:FreeRTOS\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:FreeRTOS\src/queue.c **** 	#include "croutine.h"
  42:FreeRTOS\src/queue.c **** #endif
  43:FreeRTOS\src/queue.c **** 
  44:FreeRTOS\src/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:FreeRTOS\src/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:FreeRTOS\src/queue.c **** for the header files above, but not in this file, in order to generate the
  47:FreeRTOS\src/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:FreeRTOS\src/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:FreeRTOS\src/queue.c **** 
  50:FreeRTOS\src/queue.c **** 
  51:FreeRTOS\src/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:FreeRTOS\src/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:FreeRTOS\src/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:FreeRTOS\src/queue.c **** 
  55:FreeRTOS\src/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:FreeRTOS\src/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:FreeRTOS\src/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:FreeRTOS\src/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:FreeRTOS\src/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:FreeRTOS\src/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:FreeRTOS\src/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:FreeRTOS\src/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:FreeRTOS\src/queue.c **** being used for. */
  64:FreeRTOS\src/queue.c **** #define uxQueueType						pcHead
  65:FreeRTOS\src/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:FreeRTOS\src/queue.c **** 
  67:FreeRTOS\src/queue.c **** typedef struct QueuePointers
  68:FreeRTOS\src/queue.c **** {
  69:FreeRTOS\src/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:FreeRTOS\src/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:FreeRTOS\src/queue.c **** } QueuePointers_t;
  72:FreeRTOS\src/queue.c **** 
  73:FreeRTOS\src/queue.c **** typedef struct SemaphoreData
  74:FreeRTOS\src/queue.c **** {
  75:FreeRTOS\src/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:FreeRTOS\src/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:FreeRTOS\src/queue.c **** } SemaphoreData_t;
  78:FreeRTOS\src/queue.c **** 
  79:FreeRTOS\src/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:FreeRTOS\src/queue.c **** zero. */
  81:FreeRTOS\src/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:FreeRTOS\src/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:FreeRTOS\src/queue.c **** 
  84:FreeRTOS\src/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:FreeRTOS\src/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:FreeRTOS\src/queue.c **** 	performed just because a higher priority task has been woken. */
  87:FreeRTOS\src/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:FreeRTOS\src/queue.c **** #else
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 3


  89:FreeRTOS\src/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:FreeRTOS\src/queue.c **** #endif
  91:FreeRTOS\src/queue.c **** 
  92:FreeRTOS\src/queue.c **** /*
  93:FreeRTOS\src/queue.c ****  * Definition of the queue used by the scheduler.
  94:FreeRTOS\src/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:FreeRTOS\src/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:FreeRTOS\src/queue.c ****  */
  97:FreeRTOS\src/queue.c **** typedef struct QueueDefinition /* The old naming convention is used to prevent breaking kernel awar
  98:FreeRTOS\src/queue.c **** {
  99:FreeRTOS\src/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:FreeRTOS\src/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:FreeRTOS\src/queue.c **** 
 102:FreeRTOS\src/queue.c **** 	union
 103:FreeRTOS\src/queue.c **** 	{
 104:FreeRTOS\src/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:FreeRTOS\src/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:FreeRTOS\src/queue.c **** 	} u;
 107:FreeRTOS\src/queue.c **** 
 108:FreeRTOS\src/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:FreeRTOS\src/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:FreeRTOS\src/queue.c **** 
 111:FreeRTOS\src/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:FreeRTOS\src/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:FreeRTOS\src/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:FreeRTOS\src/queue.c **** 
 115:FreeRTOS\src/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:FreeRTOS\src/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:FreeRTOS\src/queue.c **** 
 118:FreeRTOS\src/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:FreeRTOS\src/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:FreeRTOS\src/queue.c **** 	#endif
 121:FreeRTOS\src/queue.c **** 
 122:FreeRTOS\src/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:FreeRTOS\src/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:FreeRTOS\src/queue.c **** 	#endif
 125:FreeRTOS\src/queue.c **** 
 126:FreeRTOS\src/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:FreeRTOS\src/queue.c **** 		UBaseType_t uxQueueNumber;
 128:FreeRTOS\src/queue.c **** 		uint8_t ucQueueType;
 129:FreeRTOS\src/queue.c **** 	#endif
 130:FreeRTOS\src/queue.c **** 
 131:FreeRTOS\src/queue.c **** } xQUEUE;
 132:FreeRTOS\src/queue.c **** 
 133:FreeRTOS\src/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:FreeRTOS\src/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:FreeRTOS\src/queue.c **** typedef xQUEUE Queue_t;
 136:FreeRTOS\src/queue.c **** 
 137:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 138:FreeRTOS\src/queue.c **** 
 139:FreeRTOS\src/queue.c **** /*
 140:FreeRTOS\src/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:FreeRTOS\src/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:FreeRTOS\src/queue.c ****  */
 143:FreeRTOS\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:FreeRTOS\src/queue.c **** 
 145:FreeRTOS\src/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 4


 146:FreeRTOS\src/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:FreeRTOS\src/queue.c **** 	more user friendly. */
 148:FreeRTOS\src/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:FreeRTOS\src/queue.c **** 	{
 150:FreeRTOS\src/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:FreeRTOS\src/queue.c **** 		QueueHandle_t xHandle;
 152:FreeRTOS\src/queue.c **** 	} xQueueRegistryItem;
 153:FreeRTOS\src/queue.c **** 
 154:FreeRTOS\src/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:FreeRTOS\src/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:FreeRTOS\src/queue.c **** 	debuggers. */
 157:FreeRTOS\src/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:FreeRTOS\src/queue.c **** 
 159:FreeRTOS\src/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:FreeRTOS\src/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:FreeRTOS\src/queue.c **** 	array position being vacant. */
 162:FreeRTOS\src/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:FreeRTOS\src/queue.c **** 
 164:FreeRTOS\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:FreeRTOS\src/queue.c **** 
 166:FreeRTOS\src/queue.c **** /*
 167:FreeRTOS\src/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:FreeRTOS\src/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:FreeRTOS\src/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:FreeRTOS\src/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:FreeRTOS\src/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:FreeRTOS\src/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:FreeRTOS\src/queue.c ****  */
 174:FreeRTOS\src/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:FreeRTOS\src/queue.c **** 
 176:FreeRTOS\src/queue.c **** /*
 177:FreeRTOS\src/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:FreeRTOS\src/queue.c ****  *
 179:FreeRTOS\src/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:FreeRTOS\src/queue.c ****  */
 181:FreeRTOS\src/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:FreeRTOS\src/queue.c **** 
 183:FreeRTOS\src/queue.c **** /*
 184:FreeRTOS\src/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:FreeRTOS\src/queue.c ****  *
 186:FreeRTOS\src/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:FreeRTOS\src/queue.c ****  */
 188:FreeRTOS\src/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:FreeRTOS\src/queue.c **** 
 190:FreeRTOS\src/queue.c **** /*
 191:FreeRTOS\src/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:FreeRTOS\src/queue.c ****  * back of the queue.
 193:FreeRTOS\src/queue.c ****  */
 194:FreeRTOS\src/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:FreeRTOS\src/queue.c **** 
 196:FreeRTOS\src/queue.c **** /*
 197:FreeRTOS\src/queue.c ****  * Copies an item out of a queue.
 198:FreeRTOS\src/queue.c ****  */
 199:FreeRTOS\src/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:FreeRTOS\src/queue.c **** 
 201:FreeRTOS\src/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:FreeRTOS\src/queue.c **** 	/*
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 5


 203:FreeRTOS\src/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:FreeRTOS\src/queue.c **** 	 * the queue set that the queue contains data.
 205:FreeRTOS\src/queue.c **** 	 */
 206:FreeRTOS\src/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 207:FreeRTOS\src/queue.c **** #endif
 208:FreeRTOS\src/queue.c **** 
 209:FreeRTOS\src/queue.c **** /*
 210:FreeRTOS\src/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:FreeRTOS\src/queue.c ****  * dynamically to fill in the structure's members.
 212:FreeRTOS\src/queue.c ****  */
 213:FreeRTOS\src/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:FreeRTOS\src/queue.c **** 
 215:FreeRTOS\src/queue.c **** /*
 216:FreeRTOS\src/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:FreeRTOS\src/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:FreeRTOS\src/queue.c ****  * as a mutex.
 219:FreeRTOS\src/queue.c ****  */
 220:FreeRTOS\src/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:FreeRTOS\src/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:FreeRTOS\src/queue.c **** #endif
 223:FreeRTOS\src/queue.c **** 
 224:FreeRTOS\src/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:FreeRTOS\src/queue.c **** 	/*
 226:FreeRTOS\src/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:FreeRTOS\src/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:FreeRTOS\src/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:FreeRTOS\src/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:FreeRTOS\src/queue.c **** 	 * that priority.
 231:FreeRTOS\src/queue.c **** 	 */
 232:FreeRTOS\src/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:FreeRTOS\src/queue.c **** #endif
 234:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 235:FreeRTOS\src/queue.c **** 
 236:FreeRTOS\src/queue.c **** /*
 237:FreeRTOS\src/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:FreeRTOS\src/queue.c ****  * accessing the queue event lists.
 239:FreeRTOS\src/queue.c ****  */
 240:FreeRTOS\src/queue.c **** #define prvLockQueue( pxQueue )								\
 241:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();									\
 242:FreeRTOS\src/queue.c **** 	{														\
 243:FreeRTOS\src/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:FreeRTOS\src/queue.c **** 		{													\
 245:FreeRTOS\src/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:FreeRTOS\src/queue.c **** 		}													\
 247:FreeRTOS\src/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:FreeRTOS\src/queue.c **** 		{													\
 249:FreeRTOS\src/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:FreeRTOS\src/queue.c **** 		}													\
 251:FreeRTOS\src/queue.c **** 	}														\
 252:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL()
 253:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 254:FreeRTOS\src/queue.c **** 
 255:FreeRTOS\src/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:FreeRTOS\src/queue.c **** {
 257:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
 258:FreeRTOS\src/queue.c **** 
 259:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 6


 260:FreeRTOS\src/queue.c **** 
 261:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
 262:FreeRTOS\src/queue.c **** 	{
 263:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:FreeRTOS\src/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:FreeRTOS\src/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:FreeRTOS\src/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:FreeRTOS\src/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:FreeRTOS\src/queue.c **** 
 270:FreeRTOS\src/queue.c **** 		if( xNewQueue == pdFALSE )
 271:FreeRTOS\src/queue.c **** 		{
 272:FreeRTOS\src/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:FreeRTOS\src/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:FreeRTOS\src/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:FreeRTOS\src/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:FreeRTOS\src/queue.c **** 			it will be possible to write to it. */
 277:FreeRTOS\src/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:FreeRTOS\src/queue.c **** 			{
 279:FreeRTOS\src/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:FreeRTOS\src/queue.c **** 				{
 281:FreeRTOS\src/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:FreeRTOS\src/queue.c **** 				}
 283:FreeRTOS\src/queue.c **** 				else
 284:FreeRTOS\src/queue.c **** 				{
 285:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:FreeRTOS\src/queue.c **** 				}
 287:FreeRTOS\src/queue.c **** 			}
 288:FreeRTOS\src/queue.c **** 			else
 289:FreeRTOS\src/queue.c **** 			{
 290:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:FreeRTOS\src/queue.c **** 			}
 292:FreeRTOS\src/queue.c **** 		}
 293:FreeRTOS\src/queue.c **** 		else
 294:FreeRTOS\src/queue.c **** 		{
 295:FreeRTOS\src/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:FreeRTOS\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:FreeRTOS\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:FreeRTOS\src/queue.c **** 		}
 299:FreeRTOS\src/queue.c **** 	}
 300:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
 301:FreeRTOS\src/queue.c **** 
 302:FreeRTOS\src/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:FreeRTOS\src/queue.c **** 	versions. */
 304:FreeRTOS\src/queue.c **** 	return pdPASS;
 305:FreeRTOS\src/queue.c **** }
 306:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 307:FreeRTOS\src/queue.c **** 
 308:FreeRTOS\src/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:FreeRTOS\src/queue.c **** 
 310:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:FreeRTOS\src/queue.c **** 	{
 312:FreeRTOS\src/queue.c **** 	Queue_t *pxNewQueue;
 313:FreeRTOS\src/queue.c **** 
 314:FreeRTOS\src/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:FreeRTOS\src/queue.c **** 
 316:FreeRTOS\src/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 7


 317:FreeRTOS\src/queue.c **** 		supplied. */
 318:FreeRTOS\src/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:FreeRTOS\src/queue.c **** 
 320:FreeRTOS\src/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:FreeRTOS\src/queue.c **** 		should not be provided if the item size is 0. */
 322:FreeRTOS\src/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:FreeRTOS\src/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:FreeRTOS\src/queue.c **** 
 325:FreeRTOS\src/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:FreeRTOS\src/queue.c **** 		{
 327:FreeRTOS\src/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:FreeRTOS\src/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:FreeRTOS\src/queue.c **** 			the real queue and semaphore structures. */
 330:FreeRTOS\src/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:FreeRTOS\src/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:FreeRTOS\src/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:FreeRTOS\src/queue.c **** 		}
 334:FreeRTOS\src/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:FreeRTOS\src/queue.c **** 
 336:FreeRTOS\src/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:FreeRTOS\src/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:FreeRTOS\src/queue.c **** 		but is already set. */
 339:FreeRTOS\src/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:FreeRTOS\src/queue.c **** 
 341:FreeRTOS\src/queue.c **** 		if( pxNewQueue != NULL )
 342:FreeRTOS\src/queue.c **** 		{
 343:FreeRTOS\src/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:FreeRTOS\src/queue.c **** 			{
 345:FreeRTOS\src/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:FreeRTOS\src/queue.c **** 				note this queue was allocated statically in case the queue is
 347:FreeRTOS\src/queue.c **** 				later deleted. */
 348:FreeRTOS\src/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:FreeRTOS\src/queue.c **** 			}
 350:FreeRTOS\src/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:FreeRTOS\src/queue.c **** 
 352:FreeRTOS\src/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:FreeRTOS\src/queue.c **** 		}
 354:FreeRTOS\src/queue.c **** 		else
 355:FreeRTOS\src/queue.c **** 		{
 356:FreeRTOS\src/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:FreeRTOS\src/queue.c **** 		}
 359:FreeRTOS\src/queue.c **** 
 360:FreeRTOS\src/queue.c **** 		return pxNewQueue;
 361:FreeRTOS\src/queue.c **** 	}
 362:FreeRTOS\src/queue.c **** 
 363:FreeRTOS\src/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 365:FreeRTOS\src/queue.c **** 
 366:FreeRTOS\src/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:FreeRTOS\src/queue.c **** 
 368:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:FreeRTOS\src/queue.c **** 	{
 370:FreeRTOS\src/queue.c **** 	Queue_t *pxNewQueue;
 371:FreeRTOS\src/queue.c **** 	size_t xQueueSizeInBytes;
 372:FreeRTOS\src/queue.c **** 	uint8_t *pucQueueStorage;
 373:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 8


 374:FreeRTOS\src/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 375:FreeRTOS\src/queue.c **** 
 376:FreeRTOS\src/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 377:FreeRTOS\src/queue.c **** 		{
 378:FreeRTOS\src/queue.c **** 			/* There is not going to be a queue storage area. */
 379:FreeRTOS\src/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 380:FreeRTOS\src/queue.c **** 		}
 381:FreeRTOS\src/queue.c **** 		else
 382:FreeRTOS\src/queue.c **** 		{
 383:FreeRTOS\src/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 384:FreeRTOS\src/queue.c **** 			can be in the queue at any time. */
 385:FreeRTOS\src/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 386:FreeRTOS\src/queue.c **** 		}
 387:FreeRTOS\src/queue.c **** 
 388:FreeRTOS\src/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 389:FreeRTOS\src/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 390:FreeRTOS\src/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 391:FreeRTOS\src/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 392:FreeRTOS\src/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 393:FreeRTOS\src/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 394:FreeRTOS\src/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 395:FreeRTOS\src/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 396:FreeRTOS\src/queue.c **** 		two bytes). */
 397:FreeRTOS\src/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 398:FreeRTOS\src/queue.c **** 
 399:FreeRTOS\src/queue.c **** 		if( pxNewQueue != NULL )
 400:FreeRTOS\src/queue.c **** 		{
 401:FreeRTOS\src/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 402:FreeRTOS\src/queue.c **** 			storage area. */
 403:FreeRTOS\src/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 404:FreeRTOS\src/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 405:FreeRTOS\src/queue.c **** 
 406:FreeRTOS\src/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 407:FreeRTOS\src/queue.c **** 			{
 408:FreeRTOS\src/queue.c **** 				/* Queues can be created either statically or dynamically, so
 409:FreeRTOS\src/queue.c **** 				note this task was created dynamically in case it is later
 410:FreeRTOS\src/queue.c **** 				deleted. */
 411:FreeRTOS\src/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 412:FreeRTOS\src/queue.c **** 			}
 413:FreeRTOS\src/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 414:FreeRTOS\src/queue.c **** 
 415:FreeRTOS\src/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 416:FreeRTOS\src/queue.c **** 		}
 417:FreeRTOS\src/queue.c **** 		else
 418:FreeRTOS\src/queue.c **** 		{
 419:FreeRTOS\src/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 420:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 421:FreeRTOS\src/queue.c **** 		}
 422:FreeRTOS\src/queue.c **** 
 423:FreeRTOS\src/queue.c **** 		return pxNewQueue;
 424:FreeRTOS\src/queue.c **** 	}
 425:FreeRTOS\src/queue.c **** 
 426:FreeRTOS\src/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 427:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 428:FreeRTOS\src/queue.c **** 
 429:FreeRTOS\src/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 430:FreeRTOS\src/queue.c **** {
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 9


 431:FreeRTOS\src/queue.c **** 	/* Remove compiler warnings about unused parameters should
 432:FreeRTOS\src/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 433:FreeRTOS\src/queue.c **** 	( void ) ucQueueType;
 434:FreeRTOS\src/queue.c **** 
 435:FreeRTOS\src/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 436:FreeRTOS\src/queue.c **** 	{
 437:FreeRTOS\src/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 438:FreeRTOS\src/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 439:FreeRTOS\src/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 440:FreeRTOS\src/queue.c **** 		value that is known to be within the memory map. */
 441:FreeRTOS\src/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 442:FreeRTOS\src/queue.c **** 	}
 443:FreeRTOS\src/queue.c **** 	else
 444:FreeRTOS\src/queue.c **** 	{
 445:FreeRTOS\src/queue.c **** 		/* Set the head to the start of the queue storage area. */
 446:FreeRTOS\src/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 447:FreeRTOS\src/queue.c **** 	}
 448:FreeRTOS\src/queue.c **** 
 449:FreeRTOS\src/queue.c **** 	/* Initialise the queue members as described where the queue type is
 450:FreeRTOS\src/queue.c **** 	defined. */
 451:FreeRTOS\src/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 452:FreeRTOS\src/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 453:FreeRTOS\src/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 454:FreeRTOS\src/queue.c **** 
 455:FreeRTOS\src/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 456:FreeRTOS\src/queue.c **** 	{
 457:FreeRTOS\src/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 458:FreeRTOS\src/queue.c **** 	}
 459:FreeRTOS\src/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 460:FreeRTOS\src/queue.c **** 
 461:FreeRTOS\src/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 462:FreeRTOS\src/queue.c **** 	{
 463:FreeRTOS\src/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 464:FreeRTOS\src/queue.c **** 	}
 465:FreeRTOS\src/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 466:FreeRTOS\src/queue.c **** 
 467:FreeRTOS\src/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 468:FreeRTOS\src/queue.c **** }
 469:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 470:FreeRTOS\src/queue.c **** 
 471:FreeRTOS\src/queue.c **** #if( configUSE_MUTEXES == 1 )
 472:FreeRTOS\src/queue.c **** 
 473:FreeRTOS\src/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 474:FreeRTOS\src/queue.c **** 	{
 475:FreeRTOS\src/queue.c **** 		if( pxNewQueue != NULL )
 476:FreeRTOS\src/queue.c **** 		{
 477:FreeRTOS\src/queue.c **** 			/* The queue create function will set all the queue structure members
 478:FreeRTOS\src/queue.c **** 			correctly for a generic queue, but this function is creating a
 479:FreeRTOS\src/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 480:FreeRTOS\src/queue.c **** 			in particular the information required for priority inheritance. */
 481:FreeRTOS\src/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 482:FreeRTOS\src/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 483:FreeRTOS\src/queue.c **** 
 484:FreeRTOS\src/queue.c **** 			/* In case this is a recursive mutex. */
 485:FreeRTOS\src/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 486:FreeRTOS\src/queue.c **** 
 487:FreeRTOS\src/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 10


 488:FreeRTOS\src/queue.c **** 
 489:FreeRTOS\src/queue.c **** 			/* Start with the semaphore in the expected state. */
 490:FreeRTOS\src/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 491:FreeRTOS\src/queue.c **** 		}
 492:FreeRTOS\src/queue.c **** 		else
 493:FreeRTOS\src/queue.c **** 		{
 494:FreeRTOS\src/queue.c **** 			traceCREATE_MUTEX_FAILED();
 495:FreeRTOS\src/queue.c **** 		}
 496:FreeRTOS\src/queue.c **** 	}
 497:FreeRTOS\src/queue.c **** 
 498:FreeRTOS\src/queue.c **** #endif /* configUSE_MUTEXES */
 499:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 500:FreeRTOS\src/queue.c **** 
 501:FreeRTOS\src/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 502:FreeRTOS\src/queue.c **** 
 503:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 504:FreeRTOS\src/queue.c **** 	{
 505:FreeRTOS\src/queue.c **** 	QueueHandle_t xNewQueue;
 506:FreeRTOS\src/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 507:FreeRTOS\src/queue.c **** 
 508:FreeRTOS\src/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 509:FreeRTOS\src/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 510:FreeRTOS\src/queue.c **** 
 511:FreeRTOS\src/queue.c **** 		return xNewQueue;
 512:FreeRTOS\src/queue.c **** 	}
 513:FreeRTOS\src/queue.c **** 
 514:FreeRTOS\src/queue.c **** #endif /* configUSE_MUTEXES */
 515:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 516:FreeRTOS\src/queue.c **** 
 517:FreeRTOS\src/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 518:FreeRTOS\src/queue.c **** 
 519:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 520:FreeRTOS\src/queue.c **** 	{
 521:FreeRTOS\src/queue.c **** 	QueueHandle_t xNewQueue;
 522:FreeRTOS\src/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 523:FreeRTOS\src/queue.c **** 
 524:FreeRTOS\src/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 525:FreeRTOS\src/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 526:FreeRTOS\src/queue.c **** 		( void ) ucQueueType;
 527:FreeRTOS\src/queue.c **** 
 528:FreeRTOS\src/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 529:FreeRTOS\src/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 530:FreeRTOS\src/queue.c **** 
 531:FreeRTOS\src/queue.c **** 		return xNewQueue;
 532:FreeRTOS\src/queue.c **** 	}
 533:FreeRTOS\src/queue.c **** 
 534:FreeRTOS\src/queue.c **** #endif /* configUSE_MUTEXES */
 535:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 536:FreeRTOS\src/queue.c **** 
 537:FreeRTOS\src/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 538:FreeRTOS\src/queue.c **** 
 539:FreeRTOS\src/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 540:FreeRTOS\src/queue.c **** 	{
 541:FreeRTOS\src/queue.c **** 	TaskHandle_t pxReturn;
 542:FreeRTOS\src/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 543:FreeRTOS\src/queue.c **** 
 544:FreeRTOS\src/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 11


 545:FreeRTOS\src/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 546:FreeRTOS\src/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 547:FreeRTOS\src/queue.c **** 		identity of the mutex holder, as the holder may change between the
 548:FreeRTOS\src/queue.c **** 		following critical section exiting and the function returning. */
 549:FreeRTOS\src/queue.c **** 		taskENTER_CRITICAL();
 550:FreeRTOS\src/queue.c **** 		{
 551:FreeRTOS\src/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 552:FreeRTOS\src/queue.c **** 			{
 553:FreeRTOS\src/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 554:FreeRTOS\src/queue.c **** 			}
 555:FreeRTOS\src/queue.c **** 			else
 556:FreeRTOS\src/queue.c **** 			{
 557:FreeRTOS\src/queue.c **** 				pxReturn = NULL;
 558:FreeRTOS\src/queue.c **** 			}
 559:FreeRTOS\src/queue.c **** 		}
 560:FreeRTOS\src/queue.c **** 		taskEXIT_CRITICAL();
 561:FreeRTOS\src/queue.c **** 
 562:FreeRTOS\src/queue.c **** 		return pxReturn;
 563:FreeRTOS\src/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 564:FreeRTOS\src/queue.c **** 
 565:FreeRTOS\src/queue.c **** #endif
 566:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 567:FreeRTOS\src/queue.c **** 
 568:FreeRTOS\src/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 569:FreeRTOS\src/queue.c **** 
 570:FreeRTOS\src/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 571:FreeRTOS\src/queue.c **** 	{
 572:FreeRTOS\src/queue.c **** 	TaskHandle_t pxReturn;
 573:FreeRTOS\src/queue.c **** 
 574:FreeRTOS\src/queue.c **** 		configASSERT( xSemaphore );
 575:FreeRTOS\src/queue.c **** 
 576:FreeRTOS\src/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 577:FreeRTOS\src/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 578:FreeRTOS\src/queue.c **** 		not required here. */
 579:FreeRTOS\src/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 580:FreeRTOS\src/queue.c **** 		{
 581:FreeRTOS\src/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 582:FreeRTOS\src/queue.c **** 		}
 583:FreeRTOS\src/queue.c **** 		else
 584:FreeRTOS\src/queue.c **** 		{
 585:FreeRTOS\src/queue.c **** 			pxReturn = NULL;
 586:FreeRTOS\src/queue.c **** 		}
 587:FreeRTOS\src/queue.c **** 
 588:FreeRTOS\src/queue.c **** 		return pxReturn;
 589:FreeRTOS\src/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 590:FreeRTOS\src/queue.c **** 
 591:FreeRTOS\src/queue.c **** #endif
 592:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 593:FreeRTOS\src/queue.c **** 
 594:FreeRTOS\src/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 595:FreeRTOS\src/queue.c **** 
 596:FreeRTOS\src/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 597:FreeRTOS\src/queue.c **** 	{
 598:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
 599:FreeRTOS\src/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 600:FreeRTOS\src/queue.c **** 
 601:FreeRTOS\src/queue.c **** 		configASSERT( pxMutex );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 12


 602:FreeRTOS\src/queue.c **** 
 603:FreeRTOS\src/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 604:FreeRTOS\src/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 605:FreeRTOS\src/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 606:FreeRTOS\src/queue.c **** 		this is the only condition we are interested in it does not matter if
 607:FreeRTOS\src/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 608:FreeRTOS\src/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 609:FreeRTOS\src/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 610:FreeRTOS\src/queue.c **** 		{
 611:FreeRTOS\src/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 612:FreeRTOS\src/queue.c **** 
 613:FreeRTOS\src/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 614:FreeRTOS\src/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 615:FreeRTOS\src/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 616:FreeRTOS\src/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 617:FreeRTOS\src/queue.c **** 			uxRecursiveCallCount member. */
 618:FreeRTOS\src/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 619:FreeRTOS\src/queue.c **** 
 620:FreeRTOS\src/queue.c **** 			/* Has the recursive call count unwound to 0? */
 621:FreeRTOS\src/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 622:FreeRTOS\src/queue.c **** 			{
 623:FreeRTOS\src/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 624:FreeRTOS\src/queue.c **** 				task that might be waiting to access the mutex. */
 625:FreeRTOS\src/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 626:FreeRTOS\src/queue.c **** 			}
 627:FreeRTOS\src/queue.c **** 			else
 628:FreeRTOS\src/queue.c **** 			{
 629:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 630:FreeRTOS\src/queue.c **** 			}
 631:FreeRTOS\src/queue.c **** 
 632:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
 633:FreeRTOS\src/queue.c **** 		}
 634:FreeRTOS\src/queue.c **** 		else
 635:FreeRTOS\src/queue.c **** 		{
 636:FreeRTOS\src/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 637:FreeRTOS\src/queue.c **** 			holder. */
 638:FreeRTOS\src/queue.c **** 			xReturn = pdFAIL;
 639:FreeRTOS\src/queue.c **** 
 640:FreeRTOS\src/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 641:FreeRTOS\src/queue.c **** 		}
 642:FreeRTOS\src/queue.c **** 
 643:FreeRTOS\src/queue.c **** 		return xReturn;
 644:FreeRTOS\src/queue.c **** 	}
 645:FreeRTOS\src/queue.c **** 
 646:FreeRTOS\src/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 647:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 648:FreeRTOS\src/queue.c **** 
 649:FreeRTOS\src/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 650:FreeRTOS\src/queue.c **** 
 651:FreeRTOS\src/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 652:FreeRTOS\src/queue.c **** 	{
 653:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
 654:FreeRTOS\src/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 655:FreeRTOS\src/queue.c **** 
 656:FreeRTOS\src/queue.c **** 		configASSERT( pxMutex );
 657:FreeRTOS\src/queue.c **** 
 658:FreeRTOS\src/queue.c **** 		/* Comments regarding mutual exclusion as per those within
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 13


 659:FreeRTOS\src/queue.c **** 		xQueueGiveMutexRecursive(). */
 660:FreeRTOS\src/queue.c **** 
 661:FreeRTOS\src/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 662:FreeRTOS\src/queue.c **** 
 663:FreeRTOS\src/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 664:FreeRTOS\src/queue.c **** 		{
 665:FreeRTOS\src/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 666:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
 667:FreeRTOS\src/queue.c **** 		}
 668:FreeRTOS\src/queue.c **** 		else
 669:FreeRTOS\src/queue.c **** 		{
 670:FreeRTOS\src/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 671:FreeRTOS\src/queue.c **** 
 672:FreeRTOS\src/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 673:FreeRTOS\src/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 674:FreeRTOS\src/queue.c **** 			before reaching here. */
 675:FreeRTOS\src/queue.c **** 			if( xReturn != pdFAIL )
 676:FreeRTOS\src/queue.c **** 			{
 677:FreeRTOS\src/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 678:FreeRTOS\src/queue.c **** 			}
 679:FreeRTOS\src/queue.c **** 			else
 680:FreeRTOS\src/queue.c **** 			{
 681:FreeRTOS\src/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 682:FreeRTOS\src/queue.c **** 			}
 683:FreeRTOS\src/queue.c **** 		}
 684:FreeRTOS\src/queue.c **** 
 685:FreeRTOS\src/queue.c **** 		return xReturn;
 686:FreeRTOS\src/queue.c **** 	}
 687:FreeRTOS\src/queue.c **** 
 688:FreeRTOS\src/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 689:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 690:FreeRTOS\src/queue.c **** 
 691:FreeRTOS\src/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 692:FreeRTOS\src/queue.c **** 
 693:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 694:FreeRTOS\src/queue.c **** 	{
 695:FreeRTOS\src/queue.c **** 	QueueHandle_t xHandle;
 696:FreeRTOS\src/queue.c **** 
 697:FreeRTOS\src/queue.c **** 		configASSERT( uxMaxCount != 0 );
 698:FreeRTOS\src/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 699:FreeRTOS\src/queue.c **** 
 700:FreeRTOS\src/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 701:FreeRTOS\src/queue.c **** 
 702:FreeRTOS\src/queue.c **** 		if( xHandle != NULL )
 703:FreeRTOS\src/queue.c **** 		{
 704:FreeRTOS\src/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 705:FreeRTOS\src/queue.c **** 
 706:FreeRTOS\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 707:FreeRTOS\src/queue.c **** 		}
 708:FreeRTOS\src/queue.c **** 		else
 709:FreeRTOS\src/queue.c **** 		{
 710:FreeRTOS\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 711:FreeRTOS\src/queue.c **** 		}
 712:FreeRTOS\src/queue.c **** 
 713:FreeRTOS\src/queue.c **** 		return xHandle;
 714:FreeRTOS\src/queue.c **** 	}
 715:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 14


 716:FreeRTOS\src/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 717:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 718:FreeRTOS\src/queue.c **** 
 719:FreeRTOS\src/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 720:FreeRTOS\src/queue.c **** 
 721:FreeRTOS\src/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 722:FreeRTOS\src/queue.c **** 	{
 723:FreeRTOS\src/queue.c **** 	QueueHandle_t xHandle;
 724:FreeRTOS\src/queue.c **** 
 725:FreeRTOS\src/queue.c **** 		configASSERT( uxMaxCount != 0 );
 726:FreeRTOS\src/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 727:FreeRTOS\src/queue.c **** 
 728:FreeRTOS\src/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 729:FreeRTOS\src/queue.c **** 
 730:FreeRTOS\src/queue.c **** 		if( xHandle != NULL )
 731:FreeRTOS\src/queue.c **** 		{
 732:FreeRTOS\src/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 733:FreeRTOS\src/queue.c **** 
 734:FreeRTOS\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 735:FreeRTOS\src/queue.c **** 		}
 736:FreeRTOS\src/queue.c **** 		else
 737:FreeRTOS\src/queue.c **** 		{
 738:FreeRTOS\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 739:FreeRTOS\src/queue.c **** 		}
 740:FreeRTOS\src/queue.c **** 
 741:FreeRTOS\src/queue.c **** 		return xHandle;
 742:FreeRTOS\src/queue.c **** 	}
 743:FreeRTOS\src/queue.c **** 
 744:FreeRTOS\src/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 745:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 746:FreeRTOS\src/queue.c **** 
 747:FreeRTOS\src/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 748:FreeRTOS\src/queue.c **** {
 749:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 750:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
 751:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
 752:FreeRTOS\src/queue.c **** 
 753:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
 754:FreeRTOS\src/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 755:FreeRTOS\src/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 756:FreeRTOS\src/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 757:FreeRTOS\src/queue.c **** 	{
 758:FreeRTOS\src/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 759:FreeRTOS\src/queue.c **** 	}
 760:FreeRTOS\src/queue.c **** 	#endif
 761:FreeRTOS\src/queue.c **** 
 762:FreeRTOS\src/queue.c **** 
 763:FreeRTOS\src/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 764:FreeRTOS\src/queue.c **** 	allow return statements within the function itself.  This is done in the
 765:FreeRTOS\src/queue.c **** 	interest of execution time efficiency. */
 766:FreeRTOS\src/queue.c **** 	for( ;; )
 767:FreeRTOS\src/queue.c **** 	{
 768:FreeRTOS\src/queue.c **** 		taskENTER_CRITICAL();
 769:FreeRTOS\src/queue.c **** 		{
 770:FreeRTOS\src/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 771:FreeRTOS\src/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 772:FreeRTOS\src/queue.c **** 			in the queue is to be overwritten then it does not matter if the
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 15


 773:FreeRTOS\src/queue.c **** 			queue is full. */
 774:FreeRTOS\src/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 775:FreeRTOS\src/queue.c **** 			{
 776:FreeRTOS\src/queue.c **** 				traceQUEUE_SEND( pxQueue );
 777:FreeRTOS\src/queue.c **** 
 778:FreeRTOS\src/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 779:FreeRTOS\src/queue.c **** 				{
 780:FreeRTOS\src/queue.c **** 				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 781:FreeRTOS\src/queue.c **** 
 782:FreeRTOS\src/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 783:FreeRTOS\src/queue.c **** 
 784:FreeRTOS\src/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 785:FreeRTOS\src/queue.c **** 					{
 786:FreeRTOS\src/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 787:FreeRTOS\src/queue.c **** 						{
 788:FreeRTOS\src/queue.c **** 							/* Do not notify the queue set as an existing item
 789:FreeRTOS\src/queue.c **** 							was overwritten in the queue so the number of items
 790:FreeRTOS\src/queue.c **** 							in the queue has not changed. */
 791:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 792:FreeRTOS\src/queue.c **** 						}
 793:FreeRTOS\src/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 794:FreeRTOS\src/queue.c **** 						{
 795:FreeRTOS\src/queue.c **** 							/* The queue is a member of a queue set, and posting
 796:FreeRTOS\src/queue.c **** 							to the queue set caused a higher priority task to
 797:FreeRTOS\src/queue.c **** 							unblock. A context switch is required. */
 798:FreeRTOS\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:FreeRTOS\src/queue.c **** 						}
 800:FreeRTOS\src/queue.c **** 						else
 801:FreeRTOS\src/queue.c **** 						{
 802:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:FreeRTOS\src/queue.c **** 						}
 804:FreeRTOS\src/queue.c **** 					}
 805:FreeRTOS\src/queue.c **** 					else
 806:FreeRTOS\src/queue.c **** 					{
 807:FreeRTOS\src/queue.c **** 						/* If there was a task waiting for data to arrive on the
 808:FreeRTOS\src/queue.c **** 						queue then unblock it now. */
 809:FreeRTOS\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 810:FreeRTOS\src/queue.c **** 						{
 811:FreeRTOS\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 812:FreeRTOS\src/queue.c **** 							{
 813:FreeRTOS\src/queue.c **** 								/* The unblocked task has a priority higher than
 814:FreeRTOS\src/queue.c **** 								our own so yield immediately.  Yes it is ok to
 815:FreeRTOS\src/queue.c **** 								do this from within the critical section - the
 816:FreeRTOS\src/queue.c **** 								kernel takes care of that. */
 817:FreeRTOS\src/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 818:FreeRTOS\src/queue.c **** 							}
 819:FreeRTOS\src/queue.c **** 							else
 820:FreeRTOS\src/queue.c **** 							{
 821:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 822:FreeRTOS\src/queue.c **** 							}
 823:FreeRTOS\src/queue.c **** 						}
 824:FreeRTOS\src/queue.c **** 						else if( xYieldRequired != pdFALSE )
 825:FreeRTOS\src/queue.c **** 						{
 826:FreeRTOS\src/queue.c **** 							/* This path is a special case that will only get
 827:FreeRTOS\src/queue.c **** 							executed if the task was holding multiple mutexes
 828:FreeRTOS\src/queue.c **** 							and the mutexes were given back in an order that is
 829:FreeRTOS\src/queue.c **** 							different to that in which they were taken. */
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 16


 830:FreeRTOS\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 831:FreeRTOS\src/queue.c **** 						}
 832:FreeRTOS\src/queue.c **** 						else
 833:FreeRTOS\src/queue.c **** 						{
 834:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 835:FreeRTOS\src/queue.c **** 						}
 836:FreeRTOS\src/queue.c **** 					}
 837:FreeRTOS\src/queue.c **** 				}
 838:FreeRTOS\src/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 839:FreeRTOS\src/queue.c **** 				{
 840:FreeRTOS\src/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 841:FreeRTOS\src/queue.c **** 
 842:FreeRTOS\src/queue.c **** 					/* If there was a task waiting for data to arrive on the
 843:FreeRTOS\src/queue.c **** 					queue then unblock it now. */
 844:FreeRTOS\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 845:FreeRTOS\src/queue.c **** 					{
 846:FreeRTOS\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 847:FreeRTOS\src/queue.c **** 						{
 848:FreeRTOS\src/queue.c **** 							/* The unblocked task has a priority higher than
 849:FreeRTOS\src/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 850:FreeRTOS\src/queue.c **** 							this from within the critical section - the kernel
 851:FreeRTOS\src/queue.c **** 							takes care of that. */
 852:FreeRTOS\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 853:FreeRTOS\src/queue.c **** 						}
 854:FreeRTOS\src/queue.c **** 						else
 855:FreeRTOS\src/queue.c **** 						{
 856:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 857:FreeRTOS\src/queue.c **** 						}
 858:FreeRTOS\src/queue.c **** 					}
 859:FreeRTOS\src/queue.c **** 					else if( xYieldRequired != pdFALSE )
 860:FreeRTOS\src/queue.c **** 					{
 861:FreeRTOS\src/queue.c **** 						/* This path is a special case that will only get
 862:FreeRTOS\src/queue.c **** 						executed if the task was holding multiple mutexes and
 863:FreeRTOS\src/queue.c **** 						the mutexes were given back in an order that is
 864:FreeRTOS\src/queue.c **** 						different to that in which they were taken. */
 865:FreeRTOS\src/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 866:FreeRTOS\src/queue.c **** 					}
 867:FreeRTOS\src/queue.c **** 					else
 868:FreeRTOS\src/queue.c **** 					{
 869:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 870:FreeRTOS\src/queue.c **** 					}
 871:FreeRTOS\src/queue.c **** 				}
 872:FreeRTOS\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 873:FreeRTOS\src/queue.c **** 
 874:FreeRTOS\src/queue.c **** 				taskEXIT_CRITICAL();
 875:FreeRTOS\src/queue.c **** 				return pdPASS;
 876:FreeRTOS\src/queue.c **** 			}
 877:FreeRTOS\src/queue.c **** 			else
 878:FreeRTOS\src/queue.c **** 			{
 879:FreeRTOS\src/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 880:FreeRTOS\src/queue.c **** 				{
 881:FreeRTOS\src/queue.c **** 					/* The queue was full and no block time is specified (or
 882:FreeRTOS\src/queue.c **** 					the block time has expired) so leave now. */
 883:FreeRTOS\src/queue.c **** 					taskEXIT_CRITICAL();
 884:FreeRTOS\src/queue.c **** 
 885:FreeRTOS\src/queue.c **** 					/* Return to the original privilege level before exiting
 886:FreeRTOS\src/queue.c **** 					the function. */
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 17


 887:FreeRTOS\src/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 888:FreeRTOS\src/queue.c **** 					return errQUEUE_FULL;
 889:FreeRTOS\src/queue.c **** 				}
 890:FreeRTOS\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 891:FreeRTOS\src/queue.c **** 				{
 892:FreeRTOS\src/queue.c **** 					/* The queue was full and a block time was specified so
 893:FreeRTOS\src/queue.c **** 					configure the timeout structure. */
 894:FreeRTOS\src/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 895:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 896:FreeRTOS\src/queue.c **** 				}
 897:FreeRTOS\src/queue.c **** 				else
 898:FreeRTOS\src/queue.c **** 				{
 899:FreeRTOS\src/queue.c **** 					/* Entry time was already set. */
 900:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 901:FreeRTOS\src/queue.c **** 				}
 902:FreeRTOS\src/queue.c **** 			}
 903:FreeRTOS\src/queue.c **** 		}
 904:FreeRTOS\src/queue.c **** 		taskEXIT_CRITICAL();
 905:FreeRTOS\src/queue.c **** 
 906:FreeRTOS\src/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 907:FreeRTOS\src/queue.c **** 		now the critical section has been exited. */
 908:FreeRTOS\src/queue.c **** 
 909:FreeRTOS\src/queue.c **** 		vTaskSuspendAll();
 910:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
 911:FreeRTOS\src/queue.c **** 
 912:FreeRTOS\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 913:FreeRTOS\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 914:FreeRTOS\src/queue.c **** 		{
 915:FreeRTOS\src/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 916:FreeRTOS\src/queue.c **** 			{
 917:FreeRTOS\src/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 918:FreeRTOS\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 919:FreeRTOS\src/queue.c **** 
 920:FreeRTOS\src/queue.c **** 				/* Unlocking the queue means queue events can effect the
 921:FreeRTOS\src/queue.c **** 				event list.  It is possible that interrupts occurring now
 922:FreeRTOS\src/queue.c **** 				remove this task from the event list again - but as the
 923:FreeRTOS\src/queue.c **** 				scheduler is suspended the task will go onto the pending
 924:FreeRTOS\src/queue.c **** 				ready last instead of the actual ready list. */
 925:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
 926:FreeRTOS\src/queue.c **** 
 927:FreeRTOS\src/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 928:FreeRTOS\src/queue.c **** 				ready list into the ready list - so it is feasible that this
 929:FreeRTOS\src/queue.c **** 				task is already in a ready list before it yields - in which
 930:FreeRTOS\src/queue.c **** 				case the yield will not cause a context switch unless there
 931:FreeRTOS\src/queue.c **** 				is also a higher priority task in the pending ready list. */
 932:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 933:FreeRTOS\src/queue.c **** 				{
 934:FreeRTOS\src/queue.c **** 					portYIELD_WITHIN_API();
 935:FreeRTOS\src/queue.c **** 				}
 936:FreeRTOS\src/queue.c **** 			}
 937:FreeRTOS\src/queue.c **** 			else
 938:FreeRTOS\src/queue.c **** 			{
 939:FreeRTOS\src/queue.c **** 				/* Try again. */
 940:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
 941:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
 942:FreeRTOS\src/queue.c **** 			}
 943:FreeRTOS\src/queue.c **** 		}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 18


 944:FreeRTOS\src/queue.c **** 		else
 945:FreeRTOS\src/queue.c **** 		{
 946:FreeRTOS\src/queue.c **** 			/* The timeout has expired. */
 947:FreeRTOS\src/queue.c **** 			prvUnlockQueue( pxQueue );
 948:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
 949:FreeRTOS\src/queue.c **** 
 950:FreeRTOS\src/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 951:FreeRTOS\src/queue.c **** 			return errQUEUE_FULL;
 952:FreeRTOS\src/queue.c **** 		}
 953:FreeRTOS\src/queue.c **** 	} /*lint -restore */
 954:FreeRTOS\src/queue.c **** }
 955:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 956:FreeRTOS\src/queue.c **** 
 957:FreeRTOS\src/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 958:FreeRTOS\src/queue.c **** {
 959:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 960:FreeRTOS\src/queue.c **** UBaseType_t uxSavedInterruptStatus;
 961:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
 962:FreeRTOS\src/queue.c **** 
 963:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
 964:FreeRTOS\src/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 965:FreeRTOS\src/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 966:FreeRTOS\src/queue.c **** 
 967:FreeRTOS\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 968:FreeRTOS\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 969:FreeRTOS\src/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 970:FreeRTOS\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 971:FreeRTOS\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 972:FreeRTOS\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 973:FreeRTOS\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 974:FreeRTOS\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
 975:FreeRTOS\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 976:FreeRTOS\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 977:FreeRTOS\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 978:FreeRTOS\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 979:FreeRTOS\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 980:FreeRTOS\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 981:FreeRTOS\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 982:FreeRTOS\src/queue.c **** 
 983:FreeRTOS\src/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 984:FreeRTOS\src/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 985:FreeRTOS\src/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 986:FreeRTOS\src/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 987:FreeRTOS\src/queue.c **** 	post). */
 988:FreeRTOS\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 989:FreeRTOS\src/queue.c **** 	{
 990:FreeRTOS\src/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 991:FreeRTOS\src/queue.c **** 		{
 992:FreeRTOS\src/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 993:FreeRTOS\src/queue.c **** 
 994:FreeRTOS\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 995:FreeRTOS\src/queue.c **** 
 996:FreeRTOS\src/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 997:FreeRTOS\src/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 998:FreeRTOS\src/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 999:FreeRTOS\src/queue.c **** 			called here even though the disinherit function does not check if
1000:FreeRTOS\src/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 19


1001:FreeRTOS\src/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1002:FreeRTOS\src/queue.c **** 
1003:FreeRTOS\src/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1004:FreeRTOS\src/queue.c **** 			be done when the queue is unlocked later. */
1005:FreeRTOS\src/queue.c **** 			if( cTxLock == queueUNLOCKED )
1006:FreeRTOS\src/queue.c **** 			{
1007:FreeRTOS\src/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1008:FreeRTOS\src/queue.c **** 				{
1009:FreeRTOS\src/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1010:FreeRTOS\src/queue.c **** 					{
1011:FreeRTOS\src/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
1012:FreeRTOS\src/queue.c **** 						{
1013:FreeRTOS\src/queue.c **** 							/* The queue is a member of a queue set, and posting
1014:FreeRTOS\src/queue.c **** 							to the queue set caused a higher priority task to
1015:FreeRTOS\src/queue.c **** 							unblock.  A context switch is required. */
1016:FreeRTOS\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:FreeRTOS\src/queue.c **** 							{
1018:FreeRTOS\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:FreeRTOS\src/queue.c **** 							}
1020:FreeRTOS\src/queue.c **** 							else
1021:FreeRTOS\src/queue.c **** 							{
1022:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1023:FreeRTOS\src/queue.c **** 							}
1024:FreeRTOS\src/queue.c **** 						}
1025:FreeRTOS\src/queue.c **** 						else
1026:FreeRTOS\src/queue.c **** 						{
1027:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1028:FreeRTOS\src/queue.c **** 						}
1029:FreeRTOS\src/queue.c **** 					}
1030:FreeRTOS\src/queue.c **** 					else
1031:FreeRTOS\src/queue.c **** 					{
1032:FreeRTOS\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1033:FreeRTOS\src/queue.c **** 						{
1034:FreeRTOS\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1035:FreeRTOS\src/queue.c **** 							{
1036:FreeRTOS\src/queue.c **** 								/* The task waiting has a higher priority so
1037:FreeRTOS\src/queue.c **** 								record that a context switch is required. */
1038:FreeRTOS\src/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1039:FreeRTOS\src/queue.c **** 								{
1040:FreeRTOS\src/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1041:FreeRTOS\src/queue.c **** 								}
1042:FreeRTOS\src/queue.c **** 								else
1043:FreeRTOS\src/queue.c **** 								{
1044:FreeRTOS\src/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1045:FreeRTOS\src/queue.c **** 								}
1046:FreeRTOS\src/queue.c **** 							}
1047:FreeRTOS\src/queue.c **** 							else
1048:FreeRTOS\src/queue.c **** 							{
1049:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1050:FreeRTOS\src/queue.c **** 							}
1051:FreeRTOS\src/queue.c **** 						}
1052:FreeRTOS\src/queue.c **** 						else
1053:FreeRTOS\src/queue.c **** 						{
1054:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1055:FreeRTOS\src/queue.c **** 						}
1056:FreeRTOS\src/queue.c **** 					}
1057:FreeRTOS\src/queue.c **** 				}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 20


1058:FreeRTOS\src/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1059:FreeRTOS\src/queue.c **** 				{
1060:FreeRTOS\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1061:FreeRTOS\src/queue.c **** 					{
1062:FreeRTOS\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1063:FreeRTOS\src/queue.c **** 						{
1064:FreeRTOS\src/queue.c **** 							/* The task waiting has a higher priority so record that a
1065:FreeRTOS\src/queue.c **** 							context	switch is required. */
1066:FreeRTOS\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1067:FreeRTOS\src/queue.c **** 							{
1068:FreeRTOS\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1069:FreeRTOS\src/queue.c **** 							}
1070:FreeRTOS\src/queue.c **** 							else
1071:FreeRTOS\src/queue.c **** 							{
1072:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1073:FreeRTOS\src/queue.c **** 							}
1074:FreeRTOS\src/queue.c **** 						}
1075:FreeRTOS\src/queue.c **** 						else
1076:FreeRTOS\src/queue.c **** 						{
1077:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1078:FreeRTOS\src/queue.c **** 						}
1079:FreeRTOS\src/queue.c **** 					}
1080:FreeRTOS\src/queue.c **** 					else
1081:FreeRTOS\src/queue.c **** 					{
1082:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1083:FreeRTOS\src/queue.c **** 					}
1084:FreeRTOS\src/queue.c **** 				}
1085:FreeRTOS\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1086:FreeRTOS\src/queue.c **** 			}
1087:FreeRTOS\src/queue.c **** 			else
1088:FreeRTOS\src/queue.c **** 			{
1089:FreeRTOS\src/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1090:FreeRTOS\src/queue.c **** 				knows that data was posted while it was locked. */
1091:FreeRTOS\src/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1092:FreeRTOS\src/queue.c **** 			}
1093:FreeRTOS\src/queue.c **** 
1094:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
1095:FreeRTOS\src/queue.c **** 		}
1096:FreeRTOS\src/queue.c **** 		else
1097:FreeRTOS\src/queue.c **** 		{
1098:FreeRTOS\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1099:FreeRTOS\src/queue.c **** 			xReturn = errQUEUE_FULL;
1100:FreeRTOS\src/queue.c **** 		}
1101:FreeRTOS\src/queue.c **** 	}
1102:FreeRTOS\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1103:FreeRTOS\src/queue.c **** 
1104:FreeRTOS\src/queue.c **** 	return xReturn;
1105:FreeRTOS\src/queue.c **** }
1106:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1107:FreeRTOS\src/queue.c **** 
1108:FreeRTOS\src/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1109:FreeRTOS\src/queue.c **** {
1110:FreeRTOS\src/queue.c **** BaseType_t xReturn;
1111:FreeRTOS\src/queue.c **** UBaseType_t uxSavedInterruptStatus;
1112:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1113:FreeRTOS\src/queue.c **** 
1114:FreeRTOS\src/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 21


1115:FreeRTOS\src/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1116:FreeRTOS\src/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1117:FreeRTOS\src/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1118:FreeRTOS\src/queue.c **** 	post). */
1119:FreeRTOS\src/queue.c **** 
1120:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1121:FreeRTOS\src/queue.c **** 
1122:FreeRTOS\src/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1123:FreeRTOS\src/queue.c **** 	if the item size is not 0. */
1124:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1125:FreeRTOS\src/queue.c **** 
1126:FreeRTOS\src/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1127:FreeRTOS\src/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1128:FreeRTOS\src/queue.c **** 	interrupts, only tasks. */
1129:FreeRTOS\src/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1130:FreeRTOS\src/queue.c **** 
1131:FreeRTOS\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1132:FreeRTOS\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1133:FreeRTOS\src/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1134:FreeRTOS\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1135:FreeRTOS\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1136:FreeRTOS\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1137:FreeRTOS\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1138:FreeRTOS\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
1139:FreeRTOS\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1140:FreeRTOS\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1141:FreeRTOS\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1142:FreeRTOS\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1143:FreeRTOS\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1144:FreeRTOS\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1145:FreeRTOS\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1146:FreeRTOS\src/queue.c **** 
1147:FreeRTOS\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1148:FreeRTOS\src/queue.c **** 	{
1149:FreeRTOS\src/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1150:FreeRTOS\src/queue.c **** 
1151:FreeRTOS\src/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1152:FreeRTOS\src/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1153:FreeRTOS\src/queue.c **** 		space'. */
1154:FreeRTOS\src/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1155:FreeRTOS\src/queue.c **** 		{
1156:FreeRTOS\src/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1157:FreeRTOS\src/queue.c **** 
1158:FreeRTOS\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1159:FreeRTOS\src/queue.c **** 
1160:FreeRTOS\src/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1161:FreeRTOS\src/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1162:FreeRTOS\src/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1163:FreeRTOS\src/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1164:FreeRTOS\src/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1165:FreeRTOS\src/queue.c **** 			messages (semaphores) available. */
1166:FreeRTOS\src/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1167:FreeRTOS\src/queue.c **** 
1168:FreeRTOS\src/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1169:FreeRTOS\src/queue.c **** 			be done when the queue is unlocked later. */
1170:FreeRTOS\src/queue.c **** 			if( cTxLock == queueUNLOCKED )
1171:FreeRTOS\src/queue.c **** 			{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 22


1172:FreeRTOS\src/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1173:FreeRTOS\src/queue.c **** 				{
1174:FreeRTOS\src/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1175:FreeRTOS\src/queue.c **** 					{
1176:FreeRTOS\src/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1177:FreeRTOS\src/queue.c **** 						{
1178:FreeRTOS\src/queue.c **** 							/* The semaphore is a member of a queue set, and
1179:FreeRTOS\src/queue.c **** 							posting	to the queue set caused a higher priority
1180:FreeRTOS\src/queue.c **** 							task to	unblock.  A context switch is required. */
1181:FreeRTOS\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1182:FreeRTOS\src/queue.c **** 							{
1183:FreeRTOS\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1184:FreeRTOS\src/queue.c **** 							}
1185:FreeRTOS\src/queue.c **** 							else
1186:FreeRTOS\src/queue.c **** 							{
1187:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1188:FreeRTOS\src/queue.c **** 							}
1189:FreeRTOS\src/queue.c **** 						}
1190:FreeRTOS\src/queue.c **** 						else
1191:FreeRTOS\src/queue.c **** 						{
1192:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1193:FreeRTOS\src/queue.c **** 						}
1194:FreeRTOS\src/queue.c **** 					}
1195:FreeRTOS\src/queue.c **** 					else
1196:FreeRTOS\src/queue.c **** 					{
1197:FreeRTOS\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1198:FreeRTOS\src/queue.c **** 						{
1199:FreeRTOS\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1200:FreeRTOS\src/queue.c **** 							{
1201:FreeRTOS\src/queue.c **** 								/* The task waiting has a higher priority so
1202:FreeRTOS\src/queue.c **** 								record that a context switch is required. */
1203:FreeRTOS\src/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1204:FreeRTOS\src/queue.c **** 								{
1205:FreeRTOS\src/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1206:FreeRTOS\src/queue.c **** 								}
1207:FreeRTOS\src/queue.c **** 								else
1208:FreeRTOS\src/queue.c **** 								{
1209:FreeRTOS\src/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1210:FreeRTOS\src/queue.c **** 								}
1211:FreeRTOS\src/queue.c **** 							}
1212:FreeRTOS\src/queue.c **** 							else
1213:FreeRTOS\src/queue.c **** 							{
1214:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1215:FreeRTOS\src/queue.c **** 							}
1216:FreeRTOS\src/queue.c **** 						}
1217:FreeRTOS\src/queue.c **** 						else
1218:FreeRTOS\src/queue.c **** 						{
1219:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1220:FreeRTOS\src/queue.c **** 						}
1221:FreeRTOS\src/queue.c **** 					}
1222:FreeRTOS\src/queue.c **** 				}
1223:FreeRTOS\src/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1224:FreeRTOS\src/queue.c **** 				{
1225:FreeRTOS\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1226:FreeRTOS\src/queue.c **** 					{
1227:FreeRTOS\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1228:FreeRTOS\src/queue.c **** 						{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 23


1229:FreeRTOS\src/queue.c **** 							/* The task waiting has a higher priority so record that a
1230:FreeRTOS\src/queue.c **** 							context	switch is required. */
1231:FreeRTOS\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1232:FreeRTOS\src/queue.c **** 							{
1233:FreeRTOS\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1234:FreeRTOS\src/queue.c **** 							}
1235:FreeRTOS\src/queue.c **** 							else
1236:FreeRTOS\src/queue.c **** 							{
1237:FreeRTOS\src/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1238:FreeRTOS\src/queue.c **** 							}
1239:FreeRTOS\src/queue.c **** 						}
1240:FreeRTOS\src/queue.c **** 						else
1241:FreeRTOS\src/queue.c **** 						{
1242:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1243:FreeRTOS\src/queue.c **** 						}
1244:FreeRTOS\src/queue.c **** 					}
1245:FreeRTOS\src/queue.c **** 					else
1246:FreeRTOS\src/queue.c **** 					{
1247:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1248:FreeRTOS\src/queue.c **** 					}
1249:FreeRTOS\src/queue.c **** 				}
1250:FreeRTOS\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1251:FreeRTOS\src/queue.c **** 			}
1252:FreeRTOS\src/queue.c **** 			else
1253:FreeRTOS\src/queue.c **** 			{
1254:FreeRTOS\src/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1255:FreeRTOS\src/queue.c **** 				knows that data was posted while it was locked. */
1256:FreeRTOS\src/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1257:FreeRTOS\src/queue.c **** 			}
1258:FreeRTOS\src/queue.c **** 
1259:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
1260:FreeRTOS\src/queue.c **** 		}
1261:FreeRTOS\src/queue.c **** 		else
1262:FreeRTOS\src/queue.c **** 		{
1263:FreeRTOS\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1264:FreeRTOS\src/queue.c **** 			xReturn = errQUEUE_FULL;
1265:FreeRTOS\src/queue.c **** 		}
1266:FreeRTOS\src/queue.c **** 	}
1267:FreeRTOS\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1268:FreeRTOS\src/queue.c **** 
1269:FreeRTOS\src/queue.c **** 	return xReturn;
1270:FreeRTOS\src/queue.c **** }
1271:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1272:FreeRTOS\src/queue.c **** 
1273:FreeRTOS\src/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1274:FreeRTOS\src/queue.c **** {
1275:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1276:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
1277:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1278:FreeRTOS\src/queue.c **** 
1279:FreeRTOS\src/queue.c **** 	/* Check the pointer is not NULL. */
1280:FreeRTOS\src/queue.c **** 	configASSERT( ( pxQueue ) );
1281:FreeRTOS\src/queue.c **** 
1282:FreeRTOS\src/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1283:FreeRTOS\src/queue.c **** 	is zero (so no data is copied into the buffer. */
1284:FreeRTOS\src/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1285:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 24


1286:FreeRTOS\src/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1287:FreeRTOS\src/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1288:FreeRTOS\src/queue.c **** 	{
1289:FreeRTOS\src/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1290:FreeRTOS\src/queue.c **** 	}
1291:FreeRTOS\src/queue.c **** 	#endif
1292:FreeRTOS\src/queue.c **** 
1293:FreeRTOS\src/queue.c **** 
1294:FreeRTOS\src/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1295:FreeRTOS\src/queue.c **** 	allow return statements within the function itself.  This is done in the
1296:FreeRTOS\src/queue.c **** 	interest of execution time efficiency. */
1297:FreeRTOS\src/queue.c **** 	for( ;; )
1298:FreeRTOS\src/queue.c **** 	{
1299:FreeRTOS\src/queue.c **** 		taskENTER_CRITICAL();
1300:FreeRTOS\src/queue.c **** 		{
1301:FreeRTOS\src/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1302:FreeRTOS\src/queue.c **** 
1303:FreeRTOS\src/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1304:FreeRTOS\src/queue.c **** 			must be the highest priority task wanting to access the queue. */
1305:FreeRTOS\src/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1306:FreeRTOS\src/queue.c **** 			{
1307:FreeRTOS\src/queue.c **** 				/* Data available, remove one item. */
1308:FreeRTOS\src/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1309:FreeRTOS\src/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1310:FreeRTOS\src/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1311:FreeRTOS\src/queue.c **** 
1312:FreeRTOS\src/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1313:FreeRTOS\src/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1314:FreeRTOS\src/queue.c **** 				task. */
1315:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1316:FreeRTOS\src/queue.c **** 				{
1317:FreeRTOS\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1318:FreeRTOS\src/queue.c **** 					{
1319:FreeRTOS\src/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1320:FreeRTOS\src/queue.c **** 					}
1321:FreeRTOS\src/queue.c **** 					else
1322:FreeRTOS\src/queue.c **** 					{
1323:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1324:FreeRTOS\src/queue.c **** 					}
1325:FreeRTOS\src/queue.c **** 				}
1326:FreeRTOS\src/queue.c **** 				else
1327:FreeRTOS\src/queue.c **** 				{
1328:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1329:FreeRTOS\src/queue.c **** 				}
1330:FreeRTOS\src/queue.c **** 
1331:FreeRTOS\src/queue.c **** 				taskEXIT_CRITICAL();
1332:FreeRTOS\src/queue.c **** 				return pdPASS;
1333:FreeRTOS\src/queue.c **** 			}
1334:FreeRTOS\src/queue.c **** 			else
1335:FreeRTOS\src/queue.c **** 			{
1336:FreeRTOS\src/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1337:FreeRTOS\src/queue.c **** 				{
1338:FreeRTOS\src/queue.c **** 					/* The queue was empty and no block time is specified (or
1339:FreeRTOS\src/queue.c **** 					the block time has expired) so leave now. */
1340:FreeRTOS\src/queue.c **** 					taskEXIT_CRITICAL();
1341:FreeRTOS\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1342:FreeRTOS\src/queue.c **** 					return errQUEUE_EMPTY;
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 25


1343:FreeRTOS\src/queue.c **** 				}
1344:FreeRTOS\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1345:FreeRTOS\src/queue.c **** 				{
1346:FreeRTOS\src/queue.c **** 					/* The queue was empty and a block time was specified so
1347:FreeRTOS\src/queue.c **** 					configure the timeout structure. */
1348:FreeRTOS\src/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1349:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
1350:FreeRTOS\src/queue.c **** 				}
1351:FreeRTOS\src/queue.c **** 				else
1352:FreeRTOS\src/queue.c **** 				{
1353:FreeRTOS\src/queue.c **** 					/* Entry time was already set. */
1354:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1355:FreeRTOS\src/queue.c **** 				}
1356:FreeRTOS\src/queue.c **** 			}
1357:FreeRTOS\src/queue.c **** 		}
1358:FreeRTOS\src/queue.c **** 		taskEXIT_CRITICAL();
1359:FreeRTOS\src/queue.c **** 
1360:FreeRTOS\src/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1361:FreeRTOS\src/queue.c **** 		now the critical section has been exited. */
1362:FreeRTOS\src/queue.c **** 
1363:FreeRTOS\src/queue.c **** 		vTaskSuspendAll();
1364:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
1365:FreeRTOS\src/queue.c **** 
1366:FreeRTOS\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1367:FreeRTOS\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1368:FreeRTOS\src/queue.c **** 		{
1369:FreeRTOS\src/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1370:FreeRTOS\src/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1371:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1372:FreeRTOS\src/queue.c **** 			{
1373:FreeRTOS\src/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1374:FreeRTOS\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1375:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1376:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1377:FreeRTOS\src/queue.c **** 				{
1378:FreeRTOS\src/queue.c **** 					portYIELD_WITHIN_API();
1379:FreeRTOS\src/queue.c **** 				}
1380:FreeRTOS\src/queue.c **** 				else
1381:FreeRTOS\src/queue.c **** 				{
1382:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1383:FreeRTOS\src/queue.c **** 				}
1384:FreeRTOS\src/queue.c **** 			}
1385:FreeRTOS\src/queue.c **** 			else
1386:FreeRTOS\src/queue.c **** 			{
1387:FreeRTOS\src/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1388:FreeRTOS\src/queue.c **** 				data. */
1389:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1390:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
1391:FreeRTOS\src/queue.c **** 			}
1392:FreeRTOS\src/queue.c **** 		}
1393:FreeRTOS\src/queue.c **** 		else
1394:FreeRTOS\src/queue.c **** 		{
1395:FreeRTOS\src/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1396:FreeRTOS\src/queue.c **** 			back and attempt to read the data. */
1397:FreeRTOS\src/queue.c **** 			prvUnlockQueue( pxQueue );
1398:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
1399:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 26


1400:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1401:FreeRTOS\src/queue.c **** 			{
1402:FreeRTOS\src/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1403:FreeRTOS\src/queue.c **** 				return errQUEUE_EMPTY;
1404:FreeRTOS\src/queue.c **** 			}
1405:FreeRTOS\src/queue.c **** 			else
1406:FreeRTOS\src/queue.c **** 			{
1407:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1408:FreeRTOS\src/queue.c **** 			}
1409:FreeRTOS\src/queue.c **** 		}
1410:FreeRTOS\src/queue.c **** 	} /*lint -restore */
1411:FreeRTOS\src/queue.c **** }
1412:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1413:FreeRTOS\src/queue.c **** 
1414:FreeRTOS\src/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1415:FreeRTOS\src/queue.c **** {
1416:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1417:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
1418:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1419:FreeRTOS\src/queue.c **** 
1420:FreeRTOS\src/queue.c **** #if( configUSE_MUTEXES == 1 )
1421:FreeRTOS\src/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1422:FreeRTOS\src/queue.c **** #endif
1423:FreeRTOS\src/queue.c **** 
1424:FreeRTOS\src/queue.c **** 	/* Check the queue pointer is not NULL. */
1425:FreeRTOS\src/queue.c **** 	configASSERT( ( pxQueue ) );
1426:FreeRTOS\src/queue.c **** 
1427:FreeRTOS\src/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1428:FreeRTOS\src/queue.c **** 	0. */
1429:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1430:FreeRTOS\src/queue.c **** 
1431:FreeRTOS\src/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1432:FreeRTOS\src/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1433:FreeRTOS\src/queue.c **** 	{
1434:FreeRTOS\src/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1435:FreeRTOS\src/queue.c **** 	}
1436:FreeRTOS\src/queue.c **** 	#endif
1437:FreeRTOS\src/queue.c **** 
1438:FreeRTOS\src/queue.c **** 
1439:FreeRTOS\src/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1440:FreeRTOS\src/queue.c **** 	statements within the function itself.  This is done in the interest
1441:FreeRTOS\src/queue.c **** 	of execution time efficiency. */
1442:FreeRTOS\src/queue.c **** 	for( ;; )
1443:FreeRTOS\src/queue.c **** 	{
1444:FreeRTOS\src/queue.c **** 		taskENTER_CRITICAL();
1445:FreeRTOS\src/queue.c **** 		{
1446:FreeRTOS\src/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1447:FreeRTOS\src/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1448:FreeRTOS\src/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1449:FreeRTOS\src/queue.c **** 
1450:FreeRTOS\src/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1451:FreeRTOS\src/queue.c **** 			must be the highest priority task wanting to access the queue. */
1452:FreeRTOS\src/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1453:FreeRTOS\src/queue.c **** 			{
1454:FreeRTOS\src/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1455:FreeRTOS\src/queue.c **** 
1456:FreeRTOS\src/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 27


1457:FreeRTOS\src/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1458:FreeRTOS\src/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1459:FreeRTOS\src/queue.c **** 
1460:FreeRTOS\src/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1461:FreeRTOS\src/queue.c **** 				{
1462:FreeRTOS\src/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1463:FreeRTOS\src/queue.c **** 					{
1464:FreeRTOS\src/queue.c **** 						/* Record the information required to implement
1465:FreeRTOS\src/queue.c **** 						priority inheritance should it become necessary. */
1466:FreeRTOS\src/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1467:FreeRTOS\src/queue.c **** 					}
1468:FreeRTOS\src/queue.c **** 					else
1469:FreeRTOS\src/queue.c **** 					{
1470:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1471:FreeRTOS\src/queue.c **** 					}
1472:FreeRTOS\src/queue.c **** 				}
1473:FreeRTOS\src/queue.c **** 				#endif /* configUSE_MUTEXES */
1474:FreeRTOS\src/queue.c **** 
1475:FreeRTOS\src/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1476:FreeRTOS\src/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1477:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1478:FreeRTOS\src/queue.c **** 				{
1479:FreeRTOS\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1480:FreeRTOS\src/queue.c **** 					{
1481:FreeRTOS\src/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1482:FreeRTOS\src/queue.c **** 					}
1483:FreeRTOS\src/queue.c **** 					else
1484:FreeRTOS\src/queue.c **** 					{
1485:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1486:FreeRTOS\src/queue.c **** 					}
1487:FreeRTOS\src/queue.c **** 				}
1488:FreeRTOS\src/queue.c **** 				else
1489:FreeRTOS\src/queue.c **** 				{
1490:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1491:FreeRTOS\src/queue.c **** 				}
1492:FreeRTOS\src/queue.c **** 
1493:FreeRTOS\src/queue.c **** 				taskEXIT_CRITICAL();
1494:FreeRTOS\src/queue.c **** 				return pdPASS;
1495:FreeRTOS\src/queue.c **** 			}
1496:FreeRTOS\src/queue.c **** 			else
1497:FreeRTOS\src/queue.c **** 			{
1498:FreeRTOS\src/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1499:FreeRTOS\src/queue.c **** 				{
1500:FreeRTOS\src/queue.c **** 					/* For inheritance to have occurred there must have been an
1501:FreeRTOS\src/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1502:FreeRTOS\src/queue.c **** 					if it were 0 the function would have exited. */
1503:FreeRTOS\src/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1504:FreeRTOS\src/queue.c **** 					{
1505:FreeRTOS\src/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1506:FreeRTOS\src/queue.c **** 					}
1507:FreeRTOS\src/queue.c **** 					#endif /* configUSE_MUTEXES */
1508:FreeRTOS\src/queue.c **** 
1509:FreeRTOS\src/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1510:FreeRTOS\src/queue.c **** 					(or the block time has expired) so exit now. */
1511:FreeRTOS\src/queue.c **** 					taskEXIT_CRITICAL();
1512:FreeRTOS\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1513:FreeRTOS\src/queue.c **** 					return errQUEUE_EMPTY;
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 28


1514:FreeRTOS\src/queue.c **** 				}
1515:FreeRTOS\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1516:FreeRTOS\src/queue.c **** 				{
1517:FreeRTOS\src/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1518:FreeRTOS\src/queue.c **** 					so configure the timeout structure ready to block. */
1519:FreeRTOS\src/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1520:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
1521:FreeRTOS\src/queue.c **** 				}
1522:FreeRTOS\src/queue.c **** 				else
1523:FreeRTOS\src/queue.c **** 				{
1524:FreeRTOS\src/queue.c **** 					/* Entry time was already set. */
1525:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1526:FreeRTOS\src/queue.c **** 				}
1527:FreeRTOS\src/queue.c **** 			}
1528:FreeRTOS\src/queue.c **** 		}
1529:FreeRTOS\src/queue.c **** 		taskEXIT_CRITICAL();
1530:FreeRTOS\src/queue.c **** 
1531:FreeRTOS\src/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1532:FreeRTOS\src/queue.c **** 		now the critical section has been exited. */
1533:FreeRTOS\src/queue.c **** 
1534:FreeRTOS\src/queue.c **** 		vTaskSuspendAll();
1535:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
1536:FreeRTOS\src/queue.c **** 
1537:FreeRTOS\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1538:FreeRTOS\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1539:FreeRTOS\src/queue.c **** 		{
1540:FreeRTOS\src/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1541:FreeRTOS\src/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1542:FreeRTOS\src/queue.c **** 			become available.  As semaphores are implemented with queues the
1543:FreeRTOS\src/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1544:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1545:FreeRTOS\src/queue.c **** 			{
1546:FreeRTOS\src/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1547:FreeRTOS\src/queue.c **** 
1548:FreeRTOS\src/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:FreeRTOS\src/queue.c **** 				{
1550:FreeRTOS\src/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1551:FreeRTOS\src/queue.c **** 					{
1552:FreeRTOS\src/queue.c **** 						taskENTER_CRITICAL();
1553:FreeRTOS\src/queue.c **** 						{
1554:FreeRTOS\src/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1555:FreeRTOS\src/queue.c **** 						}
1556:FreeRTOS\src/queue.c **** 						taskEXIT_CRITICAL();
1557:FreeRTOS\src/queue.c **** 					}
1558:FreeRTOS\src/queue.c **** 					else
1559:FreeRTOS\src/queue.c **** 					{
1560:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1561:FreeRTOS\src/queue.c **** 					}
1562:FreeRTOS\src/queue.c **** 				}
1563:FreeRTOS\src/queue.c **** 				#endif
1564:FreeRTOS\src/queue.c **** 
1565:FreeRTOS\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1566:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1567:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1568:FreeRTOS\src/queue.c **** 				{
1569:FreeRTOS\src/queue.c **** 					portYIELD_WITHIN_API();
1570:FreeRTOS\src/queue.c **** 				}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 29


1571:FreeRTOS\src/queue.c **** 				else
1572:FreeRTOS\src/queue.c **** 				{
1573:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1574:FreeRTOS\src/queue.c **** 				}
1575:FreeRTOS\src/queue.c **** 			}
1576:FreeRTOS\src/queue.c **** 			else
1577:FreeRTOS\src/queue.c **** 			{
1578:FreeRTOS\src/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1579:FreeRTOS\src/queue.c **** 				attempt to take the semaphore again. */
1580:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1581:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
1582:FreeRTOS\src/queue.c **** 			}
1583:FreeRTOS\src/queue.c **** 		}
1584:FreeRTOS\src/queue.c **** 		else
1585:FreeRTOS\src/queue.c **** 		{
1586:FreeRTOS\src/queue.c **** 			/* Timed out. */
1587:FreeRTOS\src/queue.c **** 			prvUnlockQueue( pxQueue );
1588:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
1589:FreeRTOS\src/queue.c **** 
1590:FreeRTOS\src/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1591:FreeRTOS\src/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1592:FreeRTOS\src/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1593:FreeRTOS\src/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1594:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1595:FreeRTOS\src/queue.c **** 			{
1596:FreeRTOS\src/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1597:FreeRTOS\src/queue.c **** 				{
1598:FreeRTOS\src/queue.c **** 					/* xInheritanceOccurred could only have be set if
1599:FreeRTOS\src/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1600:FreeRTOS\src/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1601:FreeRTOS\src/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1602:FreeRTOS\src/queue.c **** 					{
1603:FreeRTOS\src/queue.c **** 						taskENTER_CRITICAL();
1604:FreeRTOS\src/queue.c **** 						{
1605:FreeRTOS\src/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1606:FreeRTOS\src/queue.c **** 
1607:FreeRTOS\src/queue.c **** 							/* This task blocking on the mutex caused another
1608:FreeRTOS\src/queue.c **** 							task to inherit this task's priority.  Now this task
1609:FreeRTOS\src/queue.c **** 							has timed out the priority should be disinherited
1610:FreeRTOS\src/queue.c **** 							again, but only as low as the next highest priority
1611:FreeRTOS\src/queue.c **** 							task that is waiting for the same mutex. */
1612:FreeRTOS\src/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1613:FreeRTOS\src/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1614:FreeRTOS\src/queue.c **** 						}
1615:FreeRTOS\src/queue.c **** 						taskEXIT_CRITICAL();
1616:FreeRTOS\src/queue.c **** 					}
1617:FreeRTOS\src/queue.c **** 				}
1618:FreeRTOS\src/queue.c **** 				#endif /* configUSE_MUTEXES */
1619:FreeRTOS\src/queue.c **** 
1620:FreeRTOS\src/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1621:FreeRTOS\src/queue.c **** 				return errQUEUE_EMPTY;
1622:FreeRTOS\src/queue.c **** 			}
1623:FreeRTOS\src/queue.c **** 			else
1624:FreeRTOS\src/queue.c **** 			{
1625:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1626:FreeRTOS\src/queue.c **** 			}
1627:FreeRTOS\src/queue.c **** 		}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 30


1628:FreeRTOS\src/queue.c **** 	} /*lint -restore */
1629:FreeRTOS\src/queue.c **** }
1630:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1631:FreeRTOS\src/queue.c **** 
1632:FreeRTOS\src/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1633:FreeRTOS\src/queue.c **** {
1634:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1635:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
1636:FreeRTOS\src/queue.c **** int8_t *pcOriginalReadPosition;
1637:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1638:FreeRTOS\src/queue.c **** 
1639:FreeRTOS\src/queue.c **** 	/* Check the pointer is not NULL. */
1640:FreeRTOS\src/queue.c **** 	configASSERT( ( pxQueue ) );
1641:FreeRTOS\src/queue.c **** 
1642:FreeRTOS\src/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1643:FreeRTOS\src/queue.c **** 	is zero (so no data is copied into the buffer. */
1644:FreeRTOS\src/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1645:FreeRTOS\src/queue.c **** 
1646:FreeRTOS\src/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1647:FreeRTOS\src/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1648:FreeRTOS\src/queue.c **** 	{
1649:FreeRTOS\src/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1650:FreeRTOS\src/queue.c **** 	}
1651:FreeRTOS\src/queue.c **** 	#endif
1652:FreeRTOS\src/queue.c **** 
1653:FreeRTOS\src/queue.c **** 
1654:FreeRTOS\src/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1655:FreeRTOS\src/queue.c **** 	allow return statements within the function itself.  This is done in the
1656:FreeRTOS\src/queue.c **** 	interest of execution time efficiency. */
1657:FreeRTOS\src/queue.c **** 	for( ;; )
1658:FreeRTOS\src/queue.c **** 	{
1659:FreeRTOS\src/queue.c **** 		taskENTER_CRITICAL();
1660:FreeRTOS\src/queue.c **** 		{
1661:FreeRTOS\src/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1662:FreeRTOS\src/queue.c **** 
1663:FreeRTOS\src/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1664:FreeRTOS\src/queue.c **** 			must be the highest priority task wanting to access the queue. */
1665:FreeRTOS\src/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1666:FreeRTOS\src/queue.c **** 			{
1667:FreeRTOS\src/queue.c **** 				/* Remember the read position so it can be reset after the data
1668:FreeRTOS\src/queue.c **** 				is read from the queue as this function is only peeking the
1669:FreeRTOS\src/queue.c **** 				data, not removing it. */
1670:FreeRTOS\src/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1671:FreeRTOS\src/queue.c **** 
1672:FreeRTOS\src/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1673:FreeRTOS\src/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1674:FreeRTOS\src/queue.c **** 
1675:FreeRTOS\src/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1676:FreeRTOS\src/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1677:FreeRTOS\src/queue.c **** 
1678:FreeRTOS\src/queue.c **** 				/* The data is being left in the queue, so see if there are
1679:FreeRTOS\src/queue.c **** 				any other tasks waiting for the data. */
1680:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1681:FreeRTOS\src/queue.c **** 				{
1682:FreeRTOS\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1683:FreeRTOS\src/queue.c **** 					{
1684:FreeRTOS\src/queue.c **** 						/* The task waiting has a higher priority than this task. */
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 31


1685:FreeRTOS\src/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1686:FreeRTOS\src/queue.c **** 					}
1687:FreeRTOS\src/queue.c **** 					else
1688:FreeRTOS\src/queue.c **** 					{
1689:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1690:FreeRTOS\src/queue.c **** 					}
1691:FreeRTOS\src/queue.c **** 				}
1692:FreeRTOS\src/queue.c **** 				else
1693:FreeRTOS\src/queue.c **** 				{
1694:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1695:FreeRTOS\src/queue.c **** 				}
1696:FreeRTOS\src/queue.c **** 
1697:FreeRTOS\src/queue.c **** 				taskEXIT_CRITICAL();
1698:FreeRTOS\src/queue.c **** 				return pdPASS;
1699:FreeRTOS\src/queue.c **** 			}
1700:FreeRTOS\src/queue.c **** 			else
1701:FreeRTOS\src/queue.c **** 			{
1702:FreeRTOS\src/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1703:FreeRTOS\src/queue.c **** 				{
1704:FreeRTOS\src/queue.c **** 					/* The queue was empty and no block time is specified (or
1705:FreeRTOS\src/queue.c **** 					the block time has expired) so leave now. */
1706:FreeRTOS\src/queue.c **** 					taskEXIT_CRITICAL();
1707:FreeRTOS\src/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1708:FreeRTOS\src/queue.c **** 					return errQUEUE_EMPTY;
1709:FreeRTOS\src/queue.c **** 				}
1710:FreeRTOS\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1711:FreeRTOS\src/queue.c **** 				{
1712:FreeRTOS\src/queue.c **** 					/* The queue was empty and a block time was specified so
1713:FreeRTOS\src/queue.c **** 					configure the timeout structure ready to enter the blocked
1714:FreeRTOS\src/queue.c **** 					state. */
1715:FreeRTOS\src/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1716:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
1717:FreeRTOS\src/queue.c **** 				}
1718:FreeRTOS\src/queue.c **** 				else
1719:FreeRTOS\src/queue.c **** 				{
1720:FreeRTOS\src/queue.c **** 					/* Entry time was already set. */
1721:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1722:FreeRTOS\src/queue.c **** 				}
1723:FreeRTOS\src/queue.c **** 			}
1724:FreeRTOS\src/queue.c **** 		}
1725:FreeRTOS\src/queue.c **** 		taskEXIT_CRITICAL();
1726:FreeRTOS\src/queue.c **** 
1727:FreeRTOS\src/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1728:FreeRTOS\src/queue.c **** 		now the critical section has been exited. */
1729:FreeRTOS\src/queue.c **** 
1730:FreeRTOS\src/queue.c **** 		vTaskSuspendAll();
1731:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
1732:FreeRTOS\src/queue.c **** 
1733:FreeRTOS\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1734:FreeRTOS\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1735:FreeRTOS\src/queue.c **** 		{
1736:FreeRTOS\src/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1737:FreeRTOS\src/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1738:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1739:FreeRTOS\src/queue.c **** 			{
1740:FreeRTOS\src/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1741:FreeRTOS\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 32


1742:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1743:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1744:FreeRTOS\src/queue.c **** 				{
1745:FreeRTOS\src/queue.c **** 					portYIELD_WITHIN_API();
1746:FreeRTOS\src/queue.c **** 				}
1747:FreeRTOS\src/queue.c **** 				else
1748:FreeRTOS\src/queue.c **** 				{
1749:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1750:FreeRTOS\src/queue.c **** 				}
1751:FreeRTOS\src/queue.c **** 			}
1752:FreeRTOS\src/queue.c **** 			else
1753:FreeRTOS\src/queue.c **** 			{
1754:FreeRTOS\src/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1755:FreeRTOS\src/queue.c **** 				state, instead return to try and obtain the data. */
1756:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
1757:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
1758:FreeRTOS\src/queue.c **** 			}
1759:FreeRTOS\src/queue.c **** 		}
1760:FreeRTOS\src/queue.c **** 		else
1761:FreeRTOS\src/queue.c **** 		{
1762:FreeRTOS\src/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1763:FreeRTOS\src/queue.c **** 			exit, otherwise go back and try to read the data again. */
1764:FreeRTOS\src/queue.c **** 			prvUnlockQueue( pxQueue );
1765:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
1766:FreeRTOS\src/queue.c **** 
1767:FreeRTOS\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1768:FreeRTOS\src/queue.c **** 			{
1769:FreeRTOS\src/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1770:FreeRTOS\src/queue.c **** 				return errQUEUE_EMPTY;
1771:FreeRTOS\src/queue.c **** 			}
1772:FreeRTOS\src/queue.c **** 			else
1773:FreeRTOS\src/queue.c **** 			{
1774:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1775:FreeRTOS\src/queue.c **** 			}
1776:FreeRTOS\src/queue.c **** 		}
1777:FreeRTOS\src/queue.c **** 	} /*lint -restore */
1778:FreeRTOS\src/queue.c **** }
1779:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1780:FreeRTOS\src/queue.c **** 
1781:FreeRTOS\src/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1782:FreeRTOS\src/queue.c **** {
1783:FreeRTOS\src/queue.c **** BaseType_t xReturn;
1784:FreeRTOS\src/queue.c **** UBaseType_t uxSavedInterruptStatus;
1785:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1786:FreeRTOS\src/queue.c **** 
1787:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1788:FreeRTOS\src/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1789:FreeRTOS\src/queue.c **** 
1790:FreeRTOS\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1791:FreeRTOS\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1792:FreeRTOS\src/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1793:FreeRTOS\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1794:FreeRTOS\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1795:FreeRTOS\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1796:FreeRTOS\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1797:FreeRTOS\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
1798:FreeRTOS\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 33


1799:FreeRTOS\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1800:FreeRTOS\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1801:FreeRTOS\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1802:FreeRTOS\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1803:FreeRTOS\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1804:FreeRTOS\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1805:FreeRTOS\src/queue.c **** 
1806:FreeRTOS\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1807:FreeRTOS\src/queue.c **** 	{
1808:FreeRTOS\src/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1809:FreeRTOS\src/queue.c **** 
1810:FreeRTOS\src/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1811:FreeRTOS\src/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1812:FreeRTOS\src/queue.c **** 		{
1813:FreeRTOS\src/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1814:FreeRTOS\src/queue.c **** 
1815:FreeRTOS\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1816:FreeRTOS\src/queue.c **** 
1817:FreeRTOS\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1818:FreeRTOS\src/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1819:FreeRTOS\src/queue.c **** 
1820:FreeRTOS\src/queue.c **** 			/* If the queue is locked the event list will not be modified.
1821:FreeRTOS\src/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1822:FreeRTOS\src/queue.c **** 			will know that an ISR has removed data while the queue was
1823:FreeRTOS\src/queue.c **** 			locked. */
1824:FreeRTOS\src/queue.c **** 			if( cRxLock == queueUNLOCKED )
1825:FreeRTOS\src/queue.c **** 			{
1826:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1827:FreeRTOS\src/queue.c **** 				{
1828:FreeRTOS\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1829:FreeRTOS\src/queue.c **** 					{
1830:FreeRTOS\src/queue.c **** 						/* The task waiting has a higher priority than us so
1831:FreeRTOS\src/queue.c **** 						force a context switch. */
1832:FreeRTOS\src/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1833:FreeRTOS\src/queue.c **** 						{
1834:FreeRTOS\src/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1835:FreeRTOS\src/queue.c **** 						}
1836:FreeRTOS\src/queue.c **** 						else
1837:FreeRTOS\src/queue.c **** 						{
1838:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1839:FreeRTOS\src/queue.c **** 						}
1840:FreeRTOS\src/queue.c **** 					}
1841:FreeRTOS\src/queue.c **** 					else
1842:FreeRTOS\src/queue.c **** 					{
1843:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1844:FreeRTOS\src/queue.c **** 					}
1845:FreeRTOS\src/queue.c **** 				}
1846:FreeRTOS\src/queue.c **** 				else
1847:FreeRTOS\src/queue.c **** 				{
1848:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1849:FreeRTOS\src/queue.c **** 				}
1850:FreeRTOS\src/queue.c **** 			}
1851:FreeRTOS\src/queue.c **** 			else
1852:FreeRTOS\src/queue.c **** 			{
1853:FreeRTOS\src/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1854:FreeRTOS\src/queue.c **** 				knows that data was removed while it was locked. */
1855:FreeRTOS\src/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 34


1856:FreeRTOS\src/queue.c **** 			}
1857:FreeRTOS\src/queue.c **** 
1858:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
1859:FreeRTOS\src/queue.c **** 		}
1860:FreeRTOS\src/queue.c **** 		else
1861:FreeRTOS\src/queue.c **** 		{
1862:FreeRTOS\src/queue.c **** 			xReturn = pdFAIL;
1863:FreeRTOS\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1864:FreeRTOS\src/queue.c **** 		}
1865:FreeRTOS\src/queue.c **** 	}
1866:FreeRTOS\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1867:FreeRTOS\src/queue.c **** 
1868:FreeRTOS\src/queue.c **** 	return xReturn;
1869:FreeRTOS\src/queue.c **** }
1870:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1871:FreeRTOS\src/queue.c **** 
1872:FreeRTOS\src/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1873:FreeRTOS\src/queue.c **** {
1874:FreeRTOS\src/queue.c **** BaseType_t xReturn;
1875:FreeRTOS\src/queue.c **** UBaseType_t uxSavedInterruptStatus;
1876:FreeRTOS\src/queue.c **** int8_t *pcOriginalReadPosition;
1877:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1878:FreeRTOS\src/queue.c **** 
1879:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1880:FreeRTOS\src/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1881:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1882:FreeRTOS\src/queue.c **** 
1883:FreeRTOS\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1884:FreeRTOS\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1885:FreeRTOS\src/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1886:FreeRTOS\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1887:FreeRTOS\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1888:FreeRTOS\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1889:FreeRTOS\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1890:FreeRTOS\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
1891:FreeRTOS\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1892:FreeRTOS\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1893:FreeRTOS\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1894:FreeRTOS\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1895:FreeRTOS\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1896:FreeRTOS\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1897:FreeRTOS\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1898:FreeRTOS\src/queue.c **** 
1899:FreeRTOS\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1900:FreeRTOS\src/queue.c **** 	{
1901:FreeRTOS\src/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1902:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1903:FreeRTOS\src/queue.c **** 		{
1904:FreeRTOS\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1905:FreeRTOS\src/queue.c **** 
1906:FreeRTOS\src/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1907:FreeRTOS\src/queue.c **** 			actually being removed from the queue. */
1908:FreeRTOS\src/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1909:FreeRTOS\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1910:FreeRTOS\src/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1911:FreeRTOS\src/queue.c **** 
1912:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 35


1913:FreeRTOS\src/queue.c **** 		}
1914:FreeRTOS\src/queue.c **** 		else
1915:FreeRTOS\src/queue.c **** 		{
1916:FreeRTOS\src/queue.c **** 			xReturn = pdFAIL;
1917:FreeRTOS\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1918:FreeRTOS\src/queue.c **** 		}
1919:FreeRTOS\src/queue.c **** 	}
1920:FreeRTOS\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1921:FreeRTOS\src/queue.c **** 
1922:FreeRTOS\src/queue.c **** 	return xReturn;
1923:FreeRTOS\src/queue.c **** }
1924:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1925:FreeRTOS\src/queue.c **** 
1926:FreeRTOS\src/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1927:FreeRTOS\src/queue.c **** {
1928:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
1929:FreeRTOS\src/queue.c **** 
1930:FreeRTOS\src/queue.c **** 	configASSERT( xQueue );
1931:FreeRTOS\src/queue.c **** 
1932:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
1933:FreeRTOS\src/queue.c **** 	{
1934:FreeRTOS\src/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:FreeRTOS\src/queue.c **** 	}
1936:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
1937:FreeRTOS\src/queue.c **** 
1938:FreeRTOS\src/queue.c **** 	return uxReturn;
1939:FreeRTOS\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1941:FreeRTOS\src/queue.c **** 
1942:FreeRTOS\src/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1943:FreeRTOS\src/queue.c **** {
1944:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
1945:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1946:FreeRTOS\src/queue.c **** 
1947:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1948:FreeRTOS\src/queue.c **** 
1949:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
1950:FreeRTOS\src/queue.c **** 	{
1951:FreeRTOS\src/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1952:FreeRTOS\src/queue.c **** 	}
1953:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
1954:FreeRTOS\src/queue.c **** 
1955:FreeRTOS\src/queue.c **** 	return uxReturn;
1956:FreeRTOS\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1957:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
1958:FreeRTOS\src/queue.c **** 
1959:FreeRTOS\src/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1960:FreeRTOS\src/queue.c **** {
1961:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
1962:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1963:FreeRTOS\src/queue.c **** 
1964:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1965:FreeRTOS\src/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1966:FreeRTOS\src/queue.c **** 
1967:FreeRTOS\src/queue.c **** 	return uxReturn;
1968:FreeRTOS\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1969:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 36


1970:FreeRTOS\src/queue.c **** 
1971:FreeRTOS\src/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1972:FreeRTOS\src/queue.c **** {
1973:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
1974:FreeRTOS\src/queue.c **** 
1975:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
1976:FreeRTOS\src/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1977:FreeRTOS\src/queue.c **** 
1978:FreeRTOS\src/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1979:FreeRTOS\src/queue.c **** 	{
1980:FreeRTOS\src/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1981:FreeRTOS\src/queue.c **** 	}
1982:FreeRTOS\src/queue.c **** 	#endif
1983:FreeRTOS\src/queue.c **** 
1984:FreeRTOS\src/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1985:FreeRTOS\src/queue.c **** 	{
1986:FreeRTOS\src/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1987:FreeRTOS\src/queue.c **** 		again. */
1988:FreeRTOS\src/queue.c **** 		vPortFree( pxQueue );
1989:FreeRTOS\src/queue.c **** 	}
1990:FreeRTOS\src/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1991:FreeRTOS\src/queue.c **** 	{
1992:FreeRTOS\src/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1993:FreeRTOS\src/queue.c **** 		check before attempting to free the memory. */
1994:FreeRTOS\src/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1995:FreeRTOS\src/queue.c **** 		{
1996:FreeRTOS\src/queue.c **** 			vPortFree( pxQueue );
1997:FreeRTOS\src/queue.c **** 		}
1998:FreeRTOS\src/queue.c **** 		else
1999:FreeRTOS\src/queue.c **** 		{
2000:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2001:FreeRTOS\src/queue.c **** 		}
2002:FreeRTOS\src/queue.c **** 	}
2003:FreeRTOS\src/queue.c **** 	#else
2004:FreeRTOS\src/queue.c **** 	{
2005:FreeRTOS\src/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2006:FreeRTOS\src/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2007:FreeRTOS\src/queue.c **** 		( void ) pxQueue;
2008:FreeRTOS\src/queue.c **** 	}
2009:FreeRTOS\src/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2010:FreeRTOS\src/queue.c **** }
2011:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2012:FreeRTOS\src/queue.c **** 
2013:FreeRTOS\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2014:FreeRTOS\src/queue.c **** 
2015:FreeRTOS\src/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2016:FreeRTOS\src/queue.c **** 	{
2017:FreeRTOS\src/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2018:FreeRTOS\src/queue.c **** 	}
2019:FreeRTOS\src/queue.c **** 
2020:FreeRTOS\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2021:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2022:FreeRTOS\src/queue.c **** 
2023:FreeRTOS\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2024:FreeRTOS\src/queue.c **** 
2025:FreeRTOS\src/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2026:FreeRTOS\src/queue.c **** 	{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 37


2027:FreeRTOS\src/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2028:FreeRTOS\src/queue.c **** 	}
2029:FreeRTOS\src/queue.c **** 
2030:FreeRTOS\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2031:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2032:FreeRTOS\src/queue.c **** 
2033:FreeRTOS\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2034:FreeRTOS\src/queue.c **** 
2035:FreeRTOS\src/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2036:FreeRTOS\src/queue.c **** 	{
2037:FreeRTOS\src/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2038:FreeRTOS\src/queue.c **** 	}
2039:FreeRTOS\src/queue.c **** 
2040:FreeRTOS\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2041:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2042:FreeRTOS\src/queue.c **** 
2043:FreeRTOS\src/queue.c **** #if( configUSE_MUTEXES == 1 )
2044:FreeRTOS\src/queue.c **** 
2045:FreeRTOS\src/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2046:FreeRTOS\src/queue.c **** 	{
  27              		.loc 1 2046 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2047:FreeRTOS\src/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2048:FreeRTOS\src/queue.c **** 
2049:FreeRTOS\src/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2050:FreeRTOS\src/queue.c **** 		priority, but the waiting task times out, then the holder should
2051:FreeRTOS\src/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2052:FreeRTOS\src/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2053:FreeRTOS\src/queue.c **** 		return the priority of the highest priority task that is waiting for the
2054:FreeRTOS\src/queue.c **** 		mutex. */
2055:FreeRTOS\src/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  33              		.loc 1 2055 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2056:FreeRTOS\src/queue.c **** 		{
2057:FreeRTOS\src/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  36              		.loc 1 2057 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F12000 		rsb	r0, r0, #32
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2058:FreeRTOS\src/queue.c **** 		}
2059:FreeRTOS\src/queue.c **** 		else
2060:FreeRTOS\src/queue.c **** 		{
2061:FreeRTOS\src/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2061 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2062:FreeRTOS\src/queue.c **** 		}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 38


2063:FreeRTOS\src/queue.c **** 
2064:FreeRTOS\src/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2065:FreeRTOS\src/queue.c **** 	}
  48              		.loc 1 2065 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE25:
  52              		.size	prvGetDisinheritPriorityAfterTimeout, .-prvGetDisinheritPriorityAfterTimeout
  53 0012 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	2
  55              		.thumb
  56              		.thumb_func
  57              		.type	prvIsQueueFull, %function
  58              	prvIsQueueFull:
  59              	.LFB31:
2066:FreeRTOS\src/queue.c **** 
2067:FreeRTOS\src/queue.c **** #endif /* configUSE_MUTEXES */
2068:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2069:FreeRTOS\src/queue.c **** 
2070:FreeRTOS\src/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2071:FreeRTOS\src/queue.c **** {
2072:FreeRTOS\src/queue.c **** BaseType_t xReturn = pdFALSE;
2073:FreeRTOS\src/queue.c **** UBaseType_t uxMessagesWaiting;
2074:FreeRTOS\src/queue.c **** 
2075:FreeRTOS\src/queue.c **** 	/* This function is called from a critical section. */
2076:FreeRTOS\src/queue.c **** 
2077:FreeRTOS\src/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2078:FreeRTOS\src/queue.c **** 
2079:FreeRTOS\src/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2080:FreeRTOS\src/queue.c **** 	{
2081:FreeRTOS\src/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2082:FreeRTOS\src/queue.c **** 		{
2083:FreeRTOS\src/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2084:FreeRTOS\src/queue.c **** 			{
2085:FreeRTOS\src/queue.c **** 				/* The mutex is no longer being held. */
2086:FreeRTOS\src/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2087:FreeRTOS\src/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2088:FreeRTOS\src/queue.c **** 			}
2089:FreeRTOS\src/queue.c **** 			else
2090:FreeRTOS\src/queue.c **** 			{
2091:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2092:FreeRTOS\src/queue.c **** 			}
2093:FreeRTOS\src/queue.c **** 		}
2094:FreeRTOS\src/queue.c **** 		#endif /* configUSE_MUTEXES */
2095:FreeRTOS\src/queue.c **** 	}
2096:FreeRTOS\src/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2097:FreeRTOS\src/queue.c **** 	{
2098:FreeRTOS\src/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2099:FreeRTOS\src/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2100:FreeRTOS\src/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2101:FreeRTOS\src/queue.c **** 		{
2102:FreeRTOS\src/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2103:FreeRTOS\src/queue.c **** 		}
2104:FreeRTOS\src/queue.c **** 		else
2105:FreeRTOS\src/queue.c **** 		{
2106:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2107:FreeRTOS\src/queue.c **** 		}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 39


2108:FreeRTOS\src/queue.c **** 	}
2109:FreeRTOS\src/queue.c **** 	else
2110:FreeRTOS\src/queue.c **** 	{
2111:FreeRTOS\src/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2112:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2113:FreeRTOS\src/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2114:FreeRTOS\src/queue.c **** 		{
2115:FreeRTOS\src/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2116:FreeRTOS\src/queue.c **** 		}
2117:FreeRTOS\src/queue.c **** 		else
2118:FreeRTOS\src/queue.c **** 		{
2119:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2120:FreeRTOS\src/queue.c **** 		}
2121:FreeRTOS\src/queue.c **** 
2122:FreeRTOS\src/queue.c **** 		if( xPosition == queueOVERWRITE )
2123:FreeRTOS\src/queue.c **** 		{
2124:FreeRTOS\src/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2125:FreeRTOS\src/queue.c **** 			{
2126:FreeRTOS\src/queue.c **** 				/* An item is not being added but overwritten, so subtract
2127:FreeRTOS\src/queue.c **** 				one from the recorded number of items in the queue so when
2128:FreeRTOS\src/queue.c **** 				one is added again below the number of recorded items remains
2129:FreeRTOS\src/queue.c **** 				correct. */
2130:FreeRTOS\src/queue.c **** 				--uxMessagesWaiting;
2131:FreeRTOS\src/queue.c **** 			}
2132:FreeRTOS\src/queue.c **** 			else
2133:FreeRTOS\src/queue.c **** 			{
2134:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2135:FreeRTOS\src/queue.c **** 			}
2136:FreeRTOS\src/queue.c **** 		}
2137:FreeRTOS\src/queue.c **** 		else
2138:FreeRTOS\src/queue.c **** 		{
2139:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2140:FreeRTOS\src/queue.c **** 		}
2141:FreeRTOS\src/queue.c **** 	}
2142:FreeRTOS\src/queue.c **** 
2143:FreeRTOS\src/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2144:FreeRTOS\src/queue.c **** 
2145:FreeRTOS\src/queue.c **** 	return xReturn;
2146:FreeRTOS\src/queue.c **** }
2147:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2148:FreeRTOS\src/queue.c **** 
2149:FreeRTOS\src/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2150:FreeRTOS\src/queue.c **** {
2151:FreeRTOS\src/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2152:FreeRTOS\src/queue.c **** 	{
2153:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2154:FreeRTOS\src/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2155:FreeRTOS\src/queue.c **** 		{
2156:FreeRTOS\src/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2157:FreeRTOS\src/queue.c **** 		}
2158:FreeRTOS\src/queue.c **** 		else
2159:FreeRTOS\src/queue.c **** 		{
2160:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2161:FreeRTOS\src/queue.c **** 		}
2162:FreeRTOS\src/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2163:FreeRTOS\src/queue.c **** 	}
2164:FreeRTOS\src/queue.c **** }
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 40


2165:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2166:FreeRTOS\src/queue.c **** 
2167:FreeRTOS\src/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2168:FreeRTOS\src/queue.c **** {
2169:FreeRTOS\src/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2170:FreeRTOS\src/queue.c **** 
2171:FreeRTOS\src/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2172:FreeRTOS\src/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2173:FreeRTOS\src/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2174:FreeRTOS\src/queue.c **** 	updated. */
2175:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
2176:FreeRTOS\src/queue.c **** 	{
2177:FreeRTOS\src/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2178:FreeRTOS\src/queue.c **** 
2179:FreeRTOS\src/queue.c **** 		/* See if data was added to the queue while it was locked. */
2180:FreeRTOS\src/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2181:FreeRTOS\src/queue.c **** 		{
2182:FreeRTOS\src/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2183:FreeRTOS\src/queue.c **** 			blocked waiting for data to become available? */
2184:FreeRTOS\src/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2185:FreeRTOS\src/queue.c **** 			{
2186:FreeRTOS\src/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2187:FreeRTOS\src/queue.c **** 				{
2188:FreeRTOS\src/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2189:FreeRTOS\src/queue.c **** 					{
2190:FreeRTOS\src/queue.c **** 						/* The queue is a member of a queue set, and posting to
2191:FreeRTOS\src/queue.c **** 						the queue set caused a higher priority task to unblock.
2192:FreeRTOS\src/queue.c **** 						A context switch is required. */
2193:FreeRTOS\src/queue.c **** 						vTaskMissedYield();
2194:FreeRTOS\src/queue.c **** 					}
2195:FreeRTOS\src/queue.c **** 					else
2196:FreeRTOS\src/queue.c **** 					{
2197:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2198:FreeRTOS\src/queue.c **** 					}
2199:FreeRTOS\src/queue.c **** 				}
2200:FreeRTOS\src/queue.c **** 				else
2201:FreeRTOS\src/queue.c **** 				{
2202:FreeRTOS\src/queue.c **** 					/* Tasks that are removed from the event list will get
2203:FreeRTOS\src/queue.c **** 					added to the pending ready list as the scheduler is still
2204:FreeRTOS\src/queue.c **** 					suspended. */
2205:FreeRTOS\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2206:FreeRTOS\src/queue.c **** 					{
2207:FreeRTOS\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2208:FreeRTOS\src/queue.c **** 						{
2209:FreeRTOS\src/queue.c **** 							/* The task waiting has a higher priority so record that a
2210:FreeRTOS\src/queue.c **** 							context	switch is required. */
2211:FreeRTOS\src/queue.c **** 							vTaskMissedYield();
2212:FreeRTOS\src/queue.c **** 						}
2213:FreeRTOS\src/queue.c **** 						else
2214:FreeRTOS\src/queue.c **** 						{
2215:FreeRTOS\src/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2216:FreeRTOS\src/queue.c **** 						}
2217:FreeRTOS\src/queue.c **** 					}
2218:FreeRTOS\src/queue.c **** 					else
2219:FreeRTOS\src/queue.c **** 					{
2220:FreeRTOS\src/queue.c **** 						break;
2221:FreeRTOS\src/queue.c **** 					}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 41


2222:FreeRTOS\src/queue.c **** 				}
2223:FreeRTOS\src/queue.c **** 			}
2224:FreeRTOS\src/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2225:FreeRTOS\src/queue.c **** 			{
2226:FreeRTOS\src/queue.c **** 				/* Tasks that are removed from the event list will get added to
2227:FreeRTOS\src/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2228:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2229:FreeRTOS\src/queue.c **** 				{
2230:FreeRTOS\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2231:FreeRTOS\src/queue.c **** 					{
2232:FreeRTOS\src/queue.c **** 						/* The task waiting has a higher priority so record that
2233:FreeRTOS\src/queue.c **** 						a context switch is required. */
2234:FreeRTOS\src/queue.c **** 						vTaskMissedYield();
2235:FreeRTOS\src/queue.c **** 					}
2236:FreeRTOS\src/queue.c **** 					else
2237:FreeRTOS\src/queue.c **** 					{
2238:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2239:FreeRTOS\src/queue.c **** 					}
2240:FreeRTOS\src/queue.c **** 				}
2241:FreeRTOS\src/queue.c **** 				else
2242:FreeRTOS\src/queue.c **** 				{
2243:FreeRTOS\src/queue.c **** 					break;
2244:FreeRTOS\src/queue.c **** 				}
2245:FreeRTOS\src/queue.c **** 			}
2246:FreeRTOS\src/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2247:FreeRTOS\src/queue.c **** 
2248:FreeRTOS\src/queue.c **** 			--cTxLock;
2249:FreeRTOS\src/queue.c **** 		}
2250:FreeRTOS\src/queue.c **** 
2251:FreeRTOS\src/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2252:FreeRTOS\src/queue.c **** 	}
2253:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
2254:FreeRTOS\src/queue.c **** 
2255:FreeRTOS\src/queue.c **** 	/* Do the same for the Rx lock. */
2256:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
2257:FreeRTOS\src/queue.c **** 	{
2258:FreeRTOS\src/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2259:FreeRTOS\src/queue.c **** 
2260:FreeRTOS\src/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2261:FreeRTOS\src/queue.c **** 		{
2262:FreeRTOS\src/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2263:FreeRTOS\src/queue.c **** 			{
2264:FreeRTOS\src/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2265:FreeRTOS\src/queue.c **** 				{
2266:FreeRTOS\src/queue.c **** 					vTaskMissedYield();
2267:FreeRTOS\src/queue.c **** 				}
2268:FreeRTOS\src/queue.c **** 				else
2269:FreeRTOS\src/queue.c **** 				{
2270:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2271:FreeRTOS\src/queue.c **** 				}
2272:FreeRTOS\src/queue.c **** 
2273:FreeRTOS\src/queue.c **** 				--cRxLock;
2274:FreeRTOS\src/queue.c **** 			}
2275:FreeRTOS\src/queue.c **** 			else
2276:FreeRTOS\src/queue.c **** 			{
2277:FreeRTOS\src/queue.c **** 				break;
2278:FreeRTOS\src/queue.c **** 			}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 42


2279:FreeRTOS\src/queue.c **** 		}
2280:FreeRTOS\src/queue.c **** 
2281:FreeRTOS\src/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2282:FreeRTOS\src/queue.c **** 	}
2283:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
2284:FreeRTOS\src/queue.c **** }
2285:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2286:FreeRTOS\src/queue.c **** 
2287:FreeRTOS\src/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2288:FreeRTOS\src/queue.c **** {
2289:FreeRTOS\src/queue.c **** BaseType_t xReturn;
2290:FreeRTOS\src/queue.c **** 
2291:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
2292:FreeRTOS\src/queue.c **** 	{
2293:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2294:FreeRTOS\src/queue.c **** 		{
2295:FreeRTOS\src/queue.c **** 			xReturn = pdTRUE;
2296:FreeRTOS\src/queue.c **** 		}
2297:FreeRTOS\src/queue.c **** 		else
2298:FreeRTOS\src/queue.c **** 		{
2299:FreeRTOS\src/queue.c **** 			xReturn = pdFALSE;
2300:FreeRTOS\src/queue.c **** 		}
2301:FreeRTOS\src/queue.c **** 	}
2302:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
2303:FreeRTOS\src/queue.c **** 
2304:FreeRTOS\src/queue.c **** 	return xReturn;
2305:FreeRTOS\src/queue.c **** }
2306:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2307:FreeRTOS\src/queue.c **** 
2308:FreeRTOS\src/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2309:FreeRTOS\src/queue.c **** {
2310:FreeRTOS\src/queue.c **** BaseType_t xReturn;
2311:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
2312:FreeRTOS\src/queue.c **** 
2313:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
2314:FreeRTOS\src/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2315:FreeRTOS\src/queue.c **** 	{
2316:FreeRTOS\src/queue.c **** 		xReturn = pdTRUE;
2317:FreeRTOS\src/queue.c **** 	}
2318:FreeRTOS\src/queue.c **** 	else
2319:FreeRTOS\src/queue.c **** 	{
2320:FreeRTOS\src/queue.c **** 		xReturn = pdFALSE;
2321:FreeRTOS\src/queue.c **** 	}
2322:FreeRTOS\src/queue.c **** 
2323:FreeRTOS\src/queue.c **** 	return xReturn;
2324:FreeRTOS\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2325:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2326:FreeRTOS\src/queue.c **** 
2327:FreeRTOS\src/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2328:FreeRTOS\src/queue.c **** {
  60              		.loc 1 2328 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL5:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 43


  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 0446     		mov	r4, r0
2329:FreeRTOS\src/queue.c **** BaseType_t xReturn;
2330:FreeRTOS\src/queue.c **** 
2331:FreeRTOS\src/queue.c **** 	taskENTER_CRITICAL();
  70              		.loc 1 2331 0
  71 0004 FFF7FEFF 		bl	vPortEnterCritical
  72              	.LVL6:
2332:FreeRTOS\src/queue.c **** 	{
2333:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  73              		.loc 1 2333 0
  74 0008 A26B     		ldr	r2, [r4, #56]
  75 000a E36B     		ldr	r3, [r4, #60]
  76 000c 9A42     		cmp	r2, r3
  77 000e 01D1     		bne	.L6
2334:FreeRTOS\src/queue.c **** 		{
2335:FreeRTOS\src/queue.c **** 			xReturn = pdTRUE;
  78              		.loc 1 2335 0
  79 0010 0124     		movs	r4, #1
  80              	.LVL7:
  81 0012 00E0     		b	.L5
  82              	.LVL8:
  83              	.L6:
2336:FreeRTOS\src/queue.c **** 		}
2337:FreeRTOS\src/queue.c **** 		else
2338:FreeRTOS\src/queue.c **** 		{
2339:FreeRTOS\src/queue.c **** 			xReturn = pdFALSE;
  84              		.loc 1 2339 0
  85 0014 0024     		movs	r4, #0
  86              	.LVL9:
  87              	.L5:
2340:FreeRTOS\src/queue.c **** 		}
2341:FreeRTOS\src/queue.c **** 	}
2342:FreeRTOS\src/queue.c **** 	taskEXIT_CRITICAL();
  88              		.loc 1 2342 0
  89 0016 FFF7FEFF 		bl	vPortExitCritical
  90              	.LVL10:
2343:FreeRTOS\src/queue.c **** 
2344:FreeRTOS\src/queue.c **** 	return xReturn;
2345:FreeRTOS\src/queue.c **** }
  91              		.loc 1 2345 0
  92 001a 2046     		mov	r0, r4
  93 001c 10BD     		pop	{r4, pc}
  94              		.cfi_endproc
  95              	.LFE31:
  96              		.size	prvIsQueueFull, .-prvIsQueueFull
  97 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  98              		.align	2
  99              		.thumb
 100              		.thumb_func
 101              		.type	prvIsQueueEmpty, %function
 102              	prvIsQueueEmpty:
 103              	.LFB29:
2288:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 104              		.loc 1 2288 0
 105              		.cfi_startproc
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 44


 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL11:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
2291:FreeRTOS\src/queue.c **** 	{
 114              		.loc 1 2291 0
 115 0004 FFF7FEFF 		bl	vPortEnterCritical
 116              	.LVL12:
2293:FreeRTOS\src/queue.c **** 		{
 117              		.loc 1 2293 0
 118 0008 A36B     		ldr	r3, [r4, #56]
 119 000a 0BB9     		cbnz	r3, .L10
2295:FreeRTOS\src/queue.c **** 		}
 120              		.loc 1 2295 0
 121 000c 0124     		movs	r4, #1
 122              	.LVL13:
 123 000e 00E0     		b	.L9
 124              	.LVL14:
 125              	.L10:
2299:FreeRTOS\src/queue.c **** 		}
 126              		.loc 1 2299 0
 127 0010 0024     		movs	r4, #0
 128              	.LVL15:
 129              	.L9:
2302:FreeRTOS\src/queue.c **** 
 130              		.loc 1 2302 0
 131 0012 FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL16:
2305:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2305 0
 134 0016 2046     		mov	r0, r4
 135 0018 10BD     		pop	{r4, pc}
 136              		.cfi_endproc
 137              	.LFE29:
 138              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 139 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 140              		.align	2
 141              		.thumb
 142              		.thumb_func
 143              		.type	prvCopyDataToQueue, %function
 144              	prvCopyDataToQueue:
 145              	.LFB26:
2071:FreeRTOS\src/queue.c **** BaseType_t xReturn = pdFALSE;
 146              		.loc 1 2071 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL17:
 151 0000 70B5     		push	{r4, r5, r6, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 45


 156              		.cfi_offset 14, -4
 157 0002 0446     		mov	r4, r0
 158 0004 1646     		mov	r6, r2
 159              	.LVL18:
2077:FreeRTOS\src/queue.c **** 
 160              		.loc 1 2077 0
 161 0006 856B     		ldr	r5, [r0, #56]
 162              	.LVL19:
2079:FreeRTOS\src/queue.c **** 	{
 163              		.loc 1 2079 0
 164 0008 026C     		ldr	r2, [r0, #64]
 165              	.LVL20:
 166 000a 3AB9     		cbnz	r2, .L13
2083:FreeRTOS\src/queue.c **** 			{
 167              		.loc 1 2083 0
 168 000c 0368     		ldr	r3, [r0]
 169 000e 43BB     		cbnz	r3, .L17
2086:FreeRTOS\src/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 170              		.loc 1 2086 0
 171 0010 8068     		ldr	r0, [r0, #8]
 172              	.LVL21:
 173 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 174              	.LVL22:
2087:FreeRTOS\src/queue.c **** 			}
 175              		.loc 1 2087 0
 176 0016 0023     		movs	r3, #0
 177 0018 A360     		str	r3, [r4, #8]
 178 001a 29E0     		b	.L14
 179              	.LVL23:
 180              	.L13:
2096:FreeRTOS\src/queue.c **** 	{
 181              		.loc 1 2096 0
 182 001c 6EB9     		cbnz	r6, .L15
2098:FreeRTOS\src/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 183              		.loc 1 2098 0
 184 001e 4068     		ldr	r0, [r0, #4]
 185              	.LVL24:
 186 0020 FFF7FEFF 		bl	memcpy
 187              	.LVL25:
2099:FreeRTOS\src/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 188              		.loc 1 2099 0
 189 0024 6268     		ldr	r2, [r4, #4]
 190 0026 236C     		ldr	r3, [r4, #64]
 191 0028 1344     		add	r3, r3, r2
 192 002a 6360     		str	r3, [r4, #4]
2100:FreeRTOS\src/queue.c **** 		{
 193              		.loc 1 2100 0
 194 002c A268     		ldr	r2, [r4, #8]
 195 002e 9342     		cmp	r3, r2
 196 0030 19D3     		bcc	.L18
2102:FreeRTOS\src/queue.c **** 		}
 197              		.loc 1 2102 0
 198 0032 2368     		ldr	r3, [r4]
 199 0034 6360     		str	r3, [r4, #4]
2072:FreeRTOS\src/queue.c **** UBaseType_t uxMessagesWaiting;
 200              		.loc 1 2072 0
 201 0036 0020     		movs	r0, #0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 46


 202 0038 1AE0     		b	.L14
 203              	.LVL26:
 204              	.L15:
2111:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 205              		.loc 1 2111 0
 206 003a C068     		ldr	r0, [r0, #12]
 207              	.LVL27:
 208 003c FFF7FEFF 		bl	memcpy
 209              	.LVL28:
2112:FreeRTOS\src/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 210              		.loc 1 2112 0
 211 0040 236C     		ldr	r3, [r4, #64]
 212 0042 5B42     		negs	r3, r3
 213 0044 E268     		ldr	r2, [r4, #12]
 214 0046 1A44     		add	r2, r2, r3
 215 0048 E260     		str	r2, [r4, #12]
2113:FreeRTOS\src/queue.c **** 		{
 216              		.loc 1 2113 0
 217 004a 2168     		ldr	r1, [r4]
 218 004c 8A42     		cmp	r2, r1
 219 004e 02D2     		bcs	.L16
2115:FreeRTOS\src/queue.c **** 		}
 220              		.loc 1 2115 0
 221 0050 A268     		ldr	r2, [r4, #8]
 222 0052 1344     		add	r3, r3, r2
 223 0054 E360     		str	r3, [r4, #12]
 224              	.L16:
2122:FreeRTOS\src/queue.c **** 		{
 225              		.loc 1 2122 0
 226 0056 022E     		cmp	r6, #2
 227 0058 07D1     		bne	.L19
2124:FreeRTOS\src/queue.c **** 			{
 228              		.loc 1 2124 0
 229 005a 45B1     		cbz	r5, .L20
2130:FreeRTOS\src/queue.c **** 			}
 230              		.loc 1 2130 0
 231 005c 013D     		subs	r5, r5, #1
 232              	.LVL29:
2072:FreeRTOS\src/queue.c **** UBaseType_t uxMessagesWaiting;
 233              		.loc 1 2072 0
 234 005e 0020     		movs	r0, #0
 235 0060 06E0     		b	.L14
 236              	.LVL30:
 237              	.L17:
 238 0062 0020     		movs	r0, #0
 239              	.LVL31:
 240 0064 04E0     		b	.L14
 241              	.LVL32:
 242              	.L18:
 243 0066 0020     		movs	r0, #0
 244 0068 02E0     		b	.L14
 245              	.L19:
 246 006a 0020     		movs	r0, #0
 247 006c 00E0     		b	.L14
 248              	.L20:
 249 006e 0020     		movs	r0, #0
 250              	.LVL33:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 47


 251              	.L14:
2143:FreeRTOS\src/queue.c **** 
 252              		.loc 1 2143 0
 253 0070 0135     		adds	r5, r5, #1
 254              	.LVL34:
 255 0072 A563     		str	r5, [r4, #56]
2146:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 256              		.loc 1 2146 0
 257 0074 70BD     		pop	{r4, r5, r6, pc}
 258              		.cfi_endproc
 259              	.LFE26:
 260              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 261 0076 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 262              		.align	2
 263              		.thumb
 264              		.thumb_func
 265              		.type	prvCopyDataFromQueue, %function
 266              	prvCopyDataFromQueue:
 267              	.LFB27:
2150:FreeRTOS\src/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 268              		.loc 1 2150 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL35:
2151:FreeRTOS\src/queue.c **** 	{
 273              		.loc 1 2151 0
 274 0000 026C     		ldr	r2, [r0, #64]
 275 0002 72B1     		cbz	r2, .L26
2150:FreeRTOS\src/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 276              		.loc 1 2150 0
 277 0004 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
2153:FreeRTOS\src/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 281              		.loc 1 2153 0
 282 0006 C368     		ldr	r3, [r0, #12]
 283 0008 1344     		add	r3, r3, r2
 284 000a C360     		str	r3, [r0, #12]
2154:FreeRTOS\src/queue.c **** 		{
 285              		.loc 1 2154 0
 286 000c 8468     		ldr	r4, [r0, #8]
 287 000e A342     		cmp	r3, r4
 288 0010 01D3     		bcc	.L24
2156:FreeRTOS\src/queue.c **** 		}
 289              		.loc 1 2156 0
 290 0012 0368     		ldr	r3, [r0]
 291 0014 C360     		str	r3, [r0, #12]
 292              	.L24:
 293 0016 0C46     		mov	r4, r1
2162:FreeRTOS\src/queue.c **** 	}
 294              		.loc 1 2162 0
 295 0018 C168     		ldr	r1, [r0, #12]
 296              	.LVL36:
 297 001a 2046     		mov	r0, r4
 298              	.LVL37:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 48


 299 001c FFF7FEFF 		bl	memcpy
 300              	.LVL38:
 301 0020 10BD     		pop	{r4, pc}
 302              	.LVL39:
 303              	.L26:
 304              		.cfi_def_cfa_offset 0
 305              		.cfi_restore 4
 306              		.cfi_restore 14
 307 0022 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE27:
 310              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 311              		.section	.text.prvUnlockQueue,"ax",%progbits
 312              		.align	2
 313              		.thumb
 314              		.thumb_func
 315              		.type	prvUnlockQueue, %function
 316              	prvUnlockQueue:
 317              	.LFB28:
2168:FreeRTOS\src/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 318              		.loc 1 2168 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              	.LVL40:
 323 0000 38B5     		push	{r3, r4, r5, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 3, -16
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 5, -8
 328              		.cfi_offset 14, -4
 329 0002 0546     		mov	r5, r0
2175:FreeRTOS\src/queue.c **** 	{
 330              		.loc 1 2175 0
 331 0004 FFF7FEFF 		bl	vPortEnterCritical
 332              	.LVL41:
 333              	.LBB23:
2177:FreeRTOS\src/queue.c **** 
 334              		.loc 1 2177 0
 335 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 336 000c 64B2     		sxtb	r4, r4
 337              	.LVL42:
2180:FreeRTOS\src/queue.c **** 		{
 338              		.loc 1 2180 0
 339 000e 0AE0     		b	.L28
 340              	.L31:
2228:FreeRTOS\src/queue.c **** 				{
 341              		.loc 1 2228 0
 342 0010 6B6A     		ldr	r3, [r5, #36]
 343 0012 53B1     		cbz	r3, .L29
2230:FreeRTOS\src/queue.c **** 					{
 344              		.loc 1 2230 0
 345 0014 05F12400 		add	r0, r5, #36
 346 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 347              	.LVL43:
 348 001c 08B1     		cbz	r0, .L30
2234:FreeRTOS\src/queue.c **** 					}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 49


 349              		.loc 1 2234 0
 350 001e FFF7FEFF 		bl	vTaskMissedYield
 351              	.LVL44:
 352              	.L30:
2248:FreeRTOS\src/queue.c **** 		}
 353              		.loc 1 2248 0
 354 0022 013C     		subs	r4, r4, #1
 355              	.LVL45:
 356 0024 64B2     		sxtb	r4, r4
 357              	.LVL46:
 358              	.L28:
2180:FreeRTOS\src/queue.c **** 		{
 359              		.loc 1 2180 0
 360 0026 002C     		cmp	r4, #0
 361 0028 F2DC     		bgt	.L31
 362              	.L29:
2251:FreeRTOS\src/queue.c **** 	}
 363              		.loc 1 2251 0
 364 002a FF23     		movs	r3, #255
 365 002c 85F84530 		strb	r3, [r5, #69]
 366              	.LBE23:
2253:FreeRTOS\src/queue.c **** 
 367              		.loc 1 2253 0
 368 0030 FFF7FEFF 		bl	vPortExitCritical
 369              	.LVL47:
2256:FreeRTOS\src/queue.c **** 	{
 370              		.loc 1 2256 0
 371 0034 FFF7FEFF 		bl	vPortEnterCritical
 372              	.LVL48:
 373              	.LBB24:
2258:FreeRTOS\src/queue.c **** 
 374              		.loc 1 2258 0
 375 0038 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 376              	.LVL49:
 377 003c 64B2     		sxtb	r4, r4
 378              	.LVL50:
2260:FreeRTOS\src/queue.c **** 		{
 379              		.loc 1 2260 0
 380 003e 0AE0     		b	.L32
 381              	.L35:
2262:FreeRTOS\src/queue.c **** 			{
 382              		.loc 1 2262 0
 383 0040 2B69     		ldr	r3, [r5, #16]
 384 0042 53B1     		cbz	r3, .L33
2264:FreeRTOS\src/queue.c **** 				{
 385              		.loc 1 2264 0
 386 0044 05F11000 		add	r0, r5, #16
 387 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 388              	.LVL51:
 389 004c 08B1     		cbz	r0, .L34
2266:FreeRTOS\src/queue.c **** 				}
 390              		.loc 1 2266 0
 391 004e FFF7FEFF 		bl	vTaskMissedYield
 392              	.LVL52:
 393              	.L34:
2273:FreeRTOS\src/queue.c **** 			}
 394              		.loc 1 2273 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 50


 395 0052 013C     		subs	r4, r4, #1
 396              	.LVL53:
 397 0054 64B2     		sxtb	r4, r4
 398              	.LVL54:
 399              	.L32:
2260:FreeRTOS\src/queue.c **** 		{
 400              		.loc 1 2260 0
 401 0056 002C     		cmp	r4, #0
 402 0058 F2DC     		bgt	.L35
 403              	.L33:
2281:FreeRTOS\src/queue.c **** 	}
 404              		.loc 1 2281 0
 405 005a FF23     		movs	r3, #255
 406 005c 85F84430 		strb	r3, [r5, #68]
 407              	.LBE24:
2283:FreeRTOS\src/queue.c **** }
 408              		.loc 1 2283 0
 409 0060 FFF7FEFF 		bl	vPortExitCritical
 410              	.LVL55:
 411 0064 38BD     		pop	{r3, r4, r5, pc}
 412              		.cfi_endproc
 413              	.LFE28:
 414              		.size	prvUnlockQueue, .-prvUnlockQueue
 415 0066 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 416              		.align	2
 417              		.global	xQueueGenericReset
 418              		.thumb
 419              		.thumb_func
 420              		.type	xQueueGenericReset, %function
 421              	xQueueGenericReset:
 422              	.LFB5:
 256:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
 423              		.loc 1 256 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL56:
 428 0000 38B5     		push	{r3, r4, r5, lr}
 429              		.cfi_def_cfa_offset 16
 430              		.cfi_offset 3, -16
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 5, -8
 433              		.cfi_offset 14, -4
 434 0002 0446     		mov	r4, r0
 435 0004 0D46     		mov	r5, r1
 436              	.LVL57:
 261:FreeRTOS\src/queue.c **** 	{
 437              		.loc 1 261 0
 438 0006 FFF7FEFF 		bl	vPortEnterCritical
 439              	.LVL58:
 263:FreeRTOS\src/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 440              		.loc 1 263 0
 441 000a 2168     		ldr	r1, [r4]
 442 000c E26B     		ldr	r2, [r4, #60]
 443 000e 236C     		ldr	r3, [r4, #64]
 444 0010 03FB0210 		mla	r0, r3, r2, r1
 445 0014 A060     		str	r0, [r4, #8]
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 51


 264:FreeRTOS\src/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 446              		.loc 1 264 0
 447 0016 0020     		movs	r0, #0
 448 0018 A063     		str	r0, [r4, #56]
 265:FreeRTOS\src/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 449              		.loc 1 265 0
 450 001a 6160     		str	r1, [r4, #4]
 266:FreeRTOS\src/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 451              		.loc 1 266 0
 452 001c 013A     		subs	r2, r2, #1
 453 001e 02FB0313 		mla	r3, r2, r3, r1
 454 0022 E360     		str	r3, [r4, #12]
 267:FreeRTOS\src/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 455              		.loc 1 267 0
 456 0024 FF23     		movs	r3, #255
 457 0026 84F84430 		strb	r3, [r4, #68]
 268:FreeRTOS\src/queue.c **** 
 458              		.loc 1 268 0
 459 002a 84F84530 		strb	r3, [r4, #69]
 270:FreeRTOS\src/queue.c **** 		{
 460              		.loc 1 270 0
 461 002e 7DB9     		cbnz	r5, .L38
 277:FreeRTOS\src/queue.c **** 			{
 462              		.loc 1 277 0
 463 0030 2369     		ldr	r3, [r4, #16]
 464 0032 ABB1     		cbz	r3, .L39
 279:FreeRTOS\src/queue.c **** 				{
 465              		.loc 1 279 0
 466 0034 04F11000 		add	r0, r4, #16
 467 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 468              	.LVL59:
 469 003c 80B1     		cbz	r0, .L39
 281:FreeRTOS\src/queue.c **** 				}
 470              		.loc 1 281 0
 471 003e 4FF08052 		mov	r2, #268435456
 472 0042 094B     		ldr	r3, .L41
 473 0044 1A60     		str	r2, [r3]
 474              		.syntax unified
 475              	@ 281 "FreeRTOS\src\queue.c" 1
 476 0046 BFF34F8F 		dsb
 477              	@ 0 "" 2
 478              	@ 281 "FreeRTOS\src\queue.c" 1
 479 004a BFF36F8F 		isb
 480              	@ 0 "" 2
 481              		.thumb
 482              		.syntax unified
 483 004e 07E0     		b	.L39
 484              	.L38:
 296:FreeRTOS\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 485              		.loc 1 296 0
 486 0050 04F11000 		add	r0, r4, #16
 487 0054 FFF7FEFF 		bl	vListInitialise
 488              	.LVL60:
 297:FreeRTOS\src/queue.c **** 		}
 489              		.loc 1 297 0
 490 0058 04F12400 		add	r0, r4, #36
 491 005c FFF7FEFF 		bl	vListInitialise
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 52


 492              	.LVL61:
 493              	.L39:
 300:FreeRTOS\src/queue.c **** 
 494              		.loc 1 300 0
 495 0060 FFF7FEFF 		bl	vPortExitCritical
 496              	.LVL62:
 305:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 497              		.loc 1 305 0
 498 0064 0120     		movs	r0, #1
 499 0066 38BD     		pop	{r3, r4, r5, pc}
 500              	.LVL63:
 501              	.L42:
 502              		.align	2
 503              	.L41:
 504 0068 04ED00E0 		.word	-536810236
 505              		.cfi_endproc
 506              	.LFE5:
 507              		.size	xQueueGenericReset, .-xQueueGenericReset
 508              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 509              		.align	2
 510              		.thumb
 511              		.thumb_func
 512              		.type	prvInitialiseNewQueue, %function
 513              	prvInitialiseNewQueue:
 514              	.LFB7:
 430:FreeRTOS\src/queue.c **** 	/* Remove compiler warnings about unused parameters should
 515              		.loc 1 430 0
 516              		.cfi_startproc
 517              		@ args = 4, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL64:
 520 0000 10B5     		push	{r4, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 4, -8
 523              		.cfi_offset 14, -4
 524 0002 029B     		ldr	r3, [sp, #8]
 525              	.LVL65:
 435:FreeRTOS\src/queue.c **** 	{
 526              		.loc 1 435 0
 527 0004 0C46     		mov	r4, r1
 528 0006 09B9     		cbnz	r1, .L44
 441:FreeRTOS\src/queue.c **** 	}
 529              		.loc 1 441 0
 530 0008 1B60     		str	r3, [r3]
 531 000a 00E0     		b	.L45
 532              	.L44:
 446:FreeRTOS\src/queue.c **** 	}
 533              		.loc 1 446 0
 534 000c 1A60     		str	r2, [r3]
 535              	.L45:
 451:FreeRTOS\src/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 536              		.loc 1 451 0
 537 000e D863     		str	r0, [r3, #60]
 452:FreeRTOS\src/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 538              		.loc 1 452 0
 539 0010 1C64     		str	r4, [r3, #64]
 453:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 53


 540              		.loc 1 453 0
 541 0012 0121     		movs	r1, #1
 542              	.LVL66:
 543 0014 1846     		mov	r0, r3
 544              	.LVL67:
 545 0016 FFF7FEFF 		bl	xQueueGenericReset
 546              	.LVL68:
 547 001a 10BD     		pop	{r4, pc}
 548              		.cfi_endproc
 549              	.LFE7:
 550              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 551              		.section	.text.xQueueGenericCreate,"ax",%progbits
 552              		.align	2
 553              		.global	xQueueGenericCreate
 554              		.thumb
 555              		.thumb_func
 556              		.type	xQueueGenericCreate, %function
 557              	xQueueGenericCreate:
 558              	.LFB6:
 369:FreeRTOS\src/queue.c **** 	Queue_t *pxNewQueue;
 559              		.loc 1 369 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              	.LVL69:
 564 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 565              		.cfi_def_cfa_offset 20
 566              		.cfi_offset 4, -20
 567              		.cfi_offset 5, -16
 568              		.cfi_offset 6, -12
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              		.cfi_def_cfa_offset 32
 573 0004 0546     		mov	r5, r0
 574 0006 1746     		mov	r7, r2
 376:FreeRTOS\src/queue.c **** 		{
 575              		.loc 1 376 0
 576 0008 0E46     		mov	r6, r1
 577 000a 11B1     		cbz	r1, .L50
 385:FreeRTOS\src/queue.c **** 		}
 578              		.loc 1 385 0
 579 000c 00FB01F0 		mul	r0, r0, r1
 580              	.LVL70:
 581 0010 00E0     		b	.L48
 582              	.LVL71:
 583              	.L50:
 379:FreeRTOS\src/queue.c **** 		}
 584              		.loc 1 379 0
 585 0012 0020     		movs	r0, #0
 586              	.LVL72:
 587              	.L48:
 397:FreeRTOS\src/queue.c **** 
 588              		.loc 1 397 0
 589 0014 4830     		adds	r0, r0, #72
 590              	.LVL73:
 591 0016 FFF7FEFF 		bl	pvPortMalloc
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 54


 592              	.LVL74:
 399:FreeRTOS\src/queue.c **** 		{
 593              		.loc 1 399 0
 594 001a 0446     		mov	r4, r0
 595 001c 38B1     		cbz	r0, .L49
 596              	.LVL75:
 415:FreeRTOS\src/queue.c **** 		}
 597              		.loc 1 415 0
 598 001e 0090     		str	r0, [sp]
 599 0020 3B46     		mov	r3, r7
 600 0022 00F14802 		add	r2, r0, #72
 601              	.LVL76:
 602 0026 3146     		mov	r1, r6
 603 0028 2846     		mov	r0, r5
 604              	.LVL77:
 605 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 606              	.LVL78:
 607              	.L49:
 424:FreeRTOS\src/queue.c **** 
 608              		.loc 1 424 0
 609 002e 2046     		mov	r0, r4
 610 0030 03B0     		add	sp, sp, #12
 611              		.cfi_def_cfa_offset 20
 612              		@ sp needed
 613 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 614              		.cfi_endproc
 615              	.LFE6:
 616              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 617              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 618              		.align	2
 619              		.global	xQueueCreateCountingSemaphore
 620              		.thumb
 621              		.thumb_func
 622              		.type	xQueueCreateCountingSemaphore, %function
 623              	xQueueCreateCountingSemaphore:
 624              	.LFB12:
 722:FreeRTOS\src/queue.c **** 	QueueHandle_t xHandle;
 625              		.loc 1 722 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              	.LVL79:
 630 0000 10B5     		push	{r4, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 4, -8
 633              		.cfi_offset 14, -4
 634 0002 0C46     		mov	r4, r1
 728:FreeRTOS\src/queue.c **** 
 635              		.loc 1 728 0
 636 0004 0222     		movs	r2, #2
 637 0006 0021     		movs	r1, #0
 638              	.LVL80:
 639 0008 FFF7FEFF 		bl	xQueueGenericCreate
 640              	.LVL81:
 730:FreeRTOS\src/queue.c **** 		{
 641              		.loc 1 730 0
 642 000c 0346     		mov	r3, r0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 55


 643 000e 00B1     		cbz	r0, .L53
 732:FreeRTOS\src/queue.c **** 
 644              		.loc 1 732 0
 645 0010 8463     		str	r4, [r0, #56]
 646              	.L53:
 742:FreeRTOS\src/queue.c **** 
 647              		.loc 1 742 0
 648 0012 1846     		mov	r0, r3
 649              	.LVL82:
 650 0014 10BD     		pop	{r4, pc}
 651              		.cfi_endproc
 652              	.LFE12:
 653              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 654 0016 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 655              		.align	2
 656              		.global	xQueueGenericSend
 657              		.thumb
 658              		.thumb_func
 659              		.type	xQueueGenericSend, %function
 660              	xQueueGenericSend:
 661              	.LFB13:
 748:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 662              		.loc 1 748 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 16
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              	.LVL83:
 667 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 668              		.cfi_def_cfa_offset 20
 669              		.cfi_offset 4, -20
 670              		.cfi_offset 5, -16
 671              		.cfi_offset 6, -12
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 85B0     		sub	sp, sp, #20
 675              		.cfi_def_cfa_offset 40
 676 0004 0446     		mov	r4, r0
 677 0006 0F46     		mov	r7, r1
 678 0008 0192     		str	r2, [sp, #4]
 679 000a 1E46     		mov	r6, r3
 680              	.LVL84:
 749:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
 681              		.loc 1 749 0
 682 000c 0025     		movs	r5, #0
 683              	.LVL85:
 684              	.L56:
 768:FreeRTOS\src/queue.c **** 		{
 685              		.loc 1 768 0
 686 000e FFF7FEFF 		bl	vPortEnterCritical
 687              	.LVL86:
 774:FreeRTOS\src/queue.c **** 			{
 688              		.loc 1 774 0
 689 0012 A26B     		ldr	r2, [r4, #56]
 690 0014 E36B     		ldr	r3, [r4, #60]
 691 0016 9A42     		cmp	r2, r3
 692 0018 01D3     		bcc	.L57
 774:FreeRTOS\src/queue.c **** 			{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 56


 693              		.loc 1 774 0 is_stmt 0 discriminator 1
 694 001a 022E     		cmp	r6, #2
 695 001c 21D1     		bne	.L58
 696              	.L57:
 840:FreeRTOS\src/queue.c **** 
 697              		.loc 1 840 0 is_stmt 1
 698 001e 3246     		mov	r2, r6
 699 0020 3946     		mov	r1, r7
 700 0022 2046     		mov	r0, r4
 701 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 702              	.LVL87:
 844:FreeRTOS\src/queue.c **** 					{
 703              		.loc 1 844 0
 704 0028 636A     		ldr	r3, [r4, #36]
 705 002a 6BB1     		cbz	r3, .L59
 846:FreeRTOS\src/queue.c **** 						{
 706              		.loc 1 846 0
 707 002c 04F12400 		add	r0, r4, #36
 708              	.LVL88:
 709 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 710              	.LVL89:
 711 0034 88B1     		cbz	r0, .L60
 852:FreeRTOS\src/queue.c **** 						}
 712              		.loc 1 852 0
 713 0036 4FF08052 		mov	r2, #268435456
 714 003a 324B     		ldr	r3, .L70
 715 003c 1A60     		str	r2, [r3]
 716              		.syntax unified
 717              	@ 852 "FreeRTOS\src\queue.c" 1
 718 003e BFF34F8F 		dsb
 719              	@ 0 "" 2
 720              	@ 852 "FreeRTOS\src\queue.c" 1
 721 0042 BFF36F8F 		isb
 722              	@ 0 "" 2
 723              		.thumb
 724              		.syntax unified
 725 0046 08E0     		b	.L60
 726              	.LVL90:
 727              	.L59:
 859:FreeRTOS\src/queue.c **** 					{
 728              		.loc 1 859 0
 729 0048 38B1     		cbz	r0, .L60
 865:FreeRTOS\src/queue.c **** 					}
 730              		.loc 1 865 0
 731 004a 4FF08052 		mov	r2, #268435456
 732 004e 2D4B     		ldr	r3, .L70
 733 0050 1A60     		str	r2, [r3]
 734              		.syntax unified
 735              	@ 865 "FreeRTOS\src\queue.c" 1
 736 0052 BFF34F8F 		dsb
 737              	@ 0 "" 2
 738              	@ 865 "FreeRTOS\src\queue.c" 1
 739 0056 BFF36F8F 		isb
 740              	@ 0 "" 2
 741              	.LVL91:
 742              		.thumb
 743              		.syntax unified
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 57


 744              	.L60:
 874:FreeRTOS\src/queue.c **** 				return pdPASS;
 745              		.loc 1 874 0
 746 005a FFF7FEFF 		bl	vPortExitCritical
 747              	.LVL92:
 875:FreeRTOS\src/queue.c **** 			}
 748              		.loc 1 875 0
 749 005e 0120     		movs	r0, #1
 750 0060 4EE0     		b	.L61
 751              	.L58:
 879:FreeRTOS\src/queue.c **** 				{
 752              		.loc 1 879 0
 753 0062 019B     		ldr	r3, [sp, #4]
 754 0064 1BB9     		cbnz	r3, .L62
 883:FreeRTOS\src/queue.c **** 
 755              		.loc 1 883 0
 756 0066 FFF7FEFF 		bl	vPortExitCritical
 757              	.LVL93:
 888:FreeRTOS\src/queue.c **** 				}
 758              		.loc 1 888 0
 759 006a 0020     		movs	r0, #0
 760 006c 48E0     		b	.L61
 761              	.L62:
 890:FreeRTOS\src/queue.c **** 				{
 762              		.loc 1 890 0
 763 006e 1DB9     		cbnz	r5, .L63
 894:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 764              		.loc 1 894 0
 765 0070 02A8     		add	r0, sp, #8
 766 0072 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 767              	.LVL94:
 895:FreeRTOS\src/queue.c **** 				}
 768              		.loc 1 895 0
 769 0076 0125     		movs	r5, #1
 770              	.LVL95:
 771              	.L63:
 904:FreeRTOS\src/queue.c **** 
 772              		.loc 1 904 0
 773 0078 FFF7FEFF 		bl	vPortExitCritical
 774              	.LVL96:
 909:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
 775              		.loc 1 909 0
 776 007c FFF7FEFF 		bl	vTaskSuspendAll
 777              	.LVL97:
 910:FreeRTOS\src/queue.c **** 
 778              		.loc 1 910 0
 779 0080 FFF7FEFF 		bl	vPortEnterCritical
 780              	.LVL98:
 781 0084 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 782 0088 5BB2     		sxtb	r3, r3
 783 008a B3F1FF3F 		cmp	r3, #-1
 784 008e 02D1     		bne	.L64
 910:FreeRTOS\src/queue.c **** 
 785              		.loc 1 910 0 is_stmt 0 discriminator 1
 786 0090 0023     		movs	r3, #0
 787 0092 84F84430 		strb	r3, [r4, #68]
 788              	.L64:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 58


 910:FreeRTOS\src/queue.c **** 
 789              		.loc 1 910 0 discriminator 3
 790 0096 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 791 009a 5BB2     		sxtb	r3, r3
 792 009c B3F1FF3F 		cmp	r3, #-1
 793 00a0 02D1     		bne	.L65
 910:FreeRTOS\src/queue.c **** 
 794              		.loc 1 910 0 discriminator 4
 795 00a2 0023     		movs	r3, #0
 796 00a4 84F84530 		strb	r3, [r4, #69]
 797              	.L65:
 910:FreeRTOS\src/queue.c **** 
 798              		.loc 1 910 0 discriminator 6
 799 00a8 FFF7FEFF 		bl	vPortExitCritical
 800              	.LVL99:
 913:FreeRTOS\src/queue.c **** 		{
 801              		.loc 1 913 0 is_stmt 1 discriminator 6
 802 00ac 01A9     		add	r1, sp, #4
 803              	.LVL100:
 804 00ae 02A8     		add	r0, sp, #8
 805 00b0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 806              	.LVL101:
 807 00b4 F0B9     		cbnz	r0, .L66
 915:FreeRTOS\src/queue.c **** 			{
 808              		.loc 1 915 0
 809 00b6 2046     		mov	r0, r4
 810 00b8 FFF7FEFF 		bl	prvIsQueueFull
 811              	.LVL102:
 812 00bc A0B1     		cbz	r0, .L67
 918:FreeRTOS\src/queue.c **** 
 813              		.loc 1 918 0
 814 00be 0199     		ldr	r1, [sp, #4]
 815 00c0 04F11000 		add	r0, r4, #16
 816 00c4 FFF7FEFF 		bl	vTaskPlaceOnEventList
 817              	.LVL103:
 925:FreeRTOS\src/queue.c **** 
 818              		.loc 1 925 0
 819 00c8 2046     		mov	r0, r4
 820 00ca FFF7FEFF 		bl	prvUnlockQueue
 821              	.LVL104:
 932:FreeRTOS\src/queue.c **** 				{
 822              		.loc 1 932 0
 823 00ce FFF7FEFF 		bl	xTaskResumeAll
 824              	.LVL105:
 825 00d2 0028     		cmp	r0, #0
 826 00d4 9BD1     		bne	.L56
 934:FreeRTOS\src/queue.c **** 				}
 827              		.loc 1 934 0
 828 00d6 4FF08052 		mov	r2, #268435456
 829 00da 0A4B     		ldr	r3, .L70
 830 00dc 1A60     		str	r2, [r3]
 831              		.syntax unified
 832              	@ 934 "FreeRTOS\src\queue.c" 1
 833 00de BFF34F8F 		dsb
 834              	@ 0 "" 2
 835              	@ 934 "FreeRTOS\src\queue.c" 1
 836 00e2 BFF36F8F 		isb
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 59


 837              	@ 0 "" 2
 838              		.thumb
 839              		.syntax unified
 840 00e6 92E7     		b	.L56
 841              	.L67:
 940:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
 842              		.loc 1 940 0
 843 00e8 2046     		mov	r0, r4
 844 00ea FFF7FEFF 		bl	prvUnlockQueue
 845              	.LVL106:
 941:FreeRTOS\src/queue.c **** 			}
 846              		.loc 1 941 0
 847 00ee FFF7FEFF 		bl	xTaskResumeAll
 848              	.LVL107:
 849 00f2 8CE7     		b	.L56
 850              	.L66:
 947:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
 851              		.loc 1 947 0
 852 00f4 2046     		mov	r0, r4
 853 00f6 FFF7FEFF 		bl	prvUnlockQueue
 854              	.LVL108:
 948:FreeRTOS\src/queue.c **** 
 855              		.loc 1 948 0
 856 00fa FFF7FEFF 		bl	xTaskResumeAll
 857              	.LVL109:
 951:FreeRTOS\src/queue.c **** 		}
 858              		.loc 1 951 0
 859 00fe 0020     		movs	r0, #0
 860              	.L61:
 954:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 861              		.loc 1 954 0
 862 0100 05B0     		add	sp, sp, #20
 863              		.cfi_def_cfa_offset 20
 864              		@ sp needed
 865 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 866              	.LVL110:
 867              	.L71:
 868              		.align	2
 869              	.L70:
 870 0104 04ED00E0 		.word	-536810236
 871              		.cfi_endproc
 872              	.LFE13:
 873              		.size	xQueueGenericSend, .-xQueueGenericSend
 874              		.section	.text.prvInitialiseMutex,"ax",%progbits
 875              		.align	2
 876              		.thumb
 877              		.thumb_func
 878              		.type	prvInitialiseMutex, %function
 879              	prvInitialiseMutex:
 880              	.LFB8:
 474:FreeRTOS\src/queue.c **** 		if( pxNewQueue != NULL )
 881              		.loc 1 474 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL111:
 475:FreeRTOS\src/queue.c **** 		{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 60


 886              		.loc 1 475 0
 887 0000 48B1     		cbz	r0, .L75
 474:FreeRTOS\src/queue.c **** 		if( pxNewQueue != NULL )
 888              		.loc 1 474 0
 889 0002 08B5     		push	{r3, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 3, -8
 892              		.cfi_offset 14, -4
 481:FreeRTOS\src/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 893              		.loc 1 481 0
 894 0004 0021     		movs	r1, #0
 895 0006 8160     		str	r1, [r0, #8]
 482:FreeRTOS\src/queue.c **** 
 896              		.loc 1 482 0
 897 0008 0160     		str	r1, [r0]
 485:FreeRTOS\src/queue.c **** 
 898              		.loc 1 485 0
 899 000a C160     		str	r1, [r0, #12]
 490:FreeRTOS\src/queue.c **** 		}
 900              		.loc 1 490 0
 901 000c 0B46     		mov	r3, r1
 902 000e 0A46     		mov	r2, r1
 903 0010 FFF7FEFF 		bl	xQueueGenericSend
 904              	.LVL112:
 905 0014 08BD     		pop	{r3, pc}
 906              	.LVL113:
 907              	.L75:
 908              		.cfi_def_cfa_offset 0
 909              		.cfi_restore 3
 910              		.cfi_restore 14
 911 0016 7047     		bx	lr
 912              		.cfi_endproc
 913              	.LFE8:
 914              		.size	prvInitialiseMutex, .-prvInitialiseMutex
 915              		.section	.text.xQueueCreateMutex,"ax",%progbits
 916              		.align	2
 917              		.global	xQueueCreateMutex
 918              		.thumb
 919              		.thumb_func
 920              		.type	xQueueCreateMutex, %function
 921              	xQueueCreateMutex:
 922              	.LFB9:
 504:FreeRTOS\src/queue.c **** 	QueueHandle_t xNewQueue;
 923              		.loc 1 504 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              	.LVL114:
 928 0000 10B5     		push	{r4, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 4, -8
 931              		.cfi_offset 14, -4
 932              	.LVL115:
 508:FreeRTOS\src/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 933              		.loc 1 508 0
 934 0002 0246     		mov	r2, r0
 935 0004 0021     		movs	r1, #0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 61


 936 0006 0120     		movs	r0, #1
 937              	.LVL116:
 938 0008 FFF7FEFF 		bl	xQueueGenericCreate
 939              	.LVL117:
 940 000c 0446     		mov	r4, r0
 941              	.LVL118:
 509:FreeRTOS\src/queue.c **** 
 942              		.loc 1 509 0
 943 000e FFF7FEFF 		bl	prvInitialiseMutex
 944              	.LVL119:
 512:FreeRTOS\src/queue.c **** 
 945              		.loc 1 512 0
 946 0012 2046     		mov	r0, r4
 947 0014 10BD     		pop	{r4, pc}
 948              		.cfi_endproc
 949              	.LFE9:
 950              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 951 0016 00BF     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 952              		.align	2
 953              		.global	xQueueGiveMutexRecursive
 954              		.thumb
 955              		.thumb_func
 956              		.type	xQueueGiveMutexRecursive, %function
 957              	xQueueGiveMutexRecursive:
 958              	.LFB10:
 597:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
 959              		.loc 1 597 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              	.LVL120:
 964 0000 38B5     		push	{r3, r4, r5, lr}
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 3, -16
 967              		.cfi_offset 4, -12
 968              		.cfi_offset 5, -8
 969              		.cfi_offset 14, -4
 970 0002 0446     		mov	r4, r0
 971              	.LVL121:
 609:FreeRTOS\src/queue.c **** 		{
 972              		.loc 1 609 0
 973 0004 8568     		ldr	r5, [r0, #8]
 974 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 975              	.LVL122:
 976 000a 8542     		cmp	r5, r0
 977 000c 0AD1     		bne	.L80
 618:FreeRTOS\src/queue.c **** 
 978              		.loc 1 618 0
 979 000e E368     		ldr	r3, [r4, #12]
 980 0010 013B     		subs	r3, r3, #1
 981 0012 E360     		str	r3, [r4, #12]
 621:FreeRTOS\src/queue.c **** 			{
 982              		.loc 1 621 0
 983 0014 43B9     		cbnz	r3, .L81
 625:FreeRTOS\src/queue.c **** 			}
 984              		.loc 1 625 0
 985 0016 1A46     		mov	r2, r3
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 62


 986 0018 1946     		mov	r1, r3
 987 001a 2046     		mov	r0, r4
 988 001c FFF7FEFF 		bl	xQueueGenericSend
 989              	.LVL123:
 632:FreeRTOS\src/queue.c **** 		}
 990              		.loc 1 632 0
 991 0020 0120     		movs	r0, #1
 992 0022 38BD     		pop	{r3, r4, r5, pc}
 993              	.LVL124:
 994              	.L80:
 638:FreeRTOS\src/queue.c **** 
 995              		.loc 1 638 0
 996 0024 0020     		movs	r0, #0
 997 0026 38BD     		pop	{r3, r4, r5, pc}
 998              	.LVL125:
 999              	.L81:
 632:FreeRTOS\src/queue.c **** 		}
 1000              		.loc 1 632 0
 1001 0028 0120     		movs	r0, #1
 1002              	.LVL126:
 644:FreeRTOS\src/queue.c **** 
 1003              		.loc 1 644 0
 1004 002a 38BD     		pop	{r3, r4, r5, pc}
 1005              		.cfi_endproc
 1006              	.LFE10:
 1007              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 1008              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1009              		.align	2
 1010              		.global	xQueueGenericSendFromISR
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	xQueueGenericSendFromISR, %function
 1014              	xQueueGenericSendFromISR:
 1015              	.LFB14:
 958:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 1016              		.loc 1 958 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL127:
 1021 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1022              		.cfi_def_cfa_offset 24
 1023              		.cfi_offset 3, -24
 1024              		.cfi_offset 4, -20
 1025              		.cfi_offset 5, -16
 1026              		.cfi_offset 6, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029              	.LVL128:
 1030              	.LBB25:
 1031              	.LBB26:
 1032              		.file 2 ".\\FreeRTOS\\include/portmacro.h"
   1:.\FreeRTOS\include/portmacro.h **** /*
   2:.\FreeRTOS\include/portmacro.h ****  * FreeRTOS Kernel V10.1.1
   3:.\FreeRTOS\include/portmacro.h ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\FreeRTOS\include/portmacro.h ****  *
   5:.\FreeRTOS\include/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 63


   6:.\FreeRTOS\include/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\FreeRTOS\include/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\FreeRTOS\include/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\FreeRTOS\include/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\FreeRTOS\include/portmacro.h ****  * subject to the following conditions:
  11:.\FreeRTOS\include/portmacro.h ****  *
  12:.\FreeRTOS\include/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\FreeRTOS\include/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\FreeRTOS\include/portmacro.h ****  *
  15:.\FreeRTOS\include/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\FreeRTOS\include/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\FreeRTOS\include/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\FreeRTOS\include/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\FreeRTOS\include/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\FreeRTOS\include/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\FreeRTOS\include/portmacro.h ****  *
  22:.\FreeRTOS\include/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\FreeRTOS\include/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\FreeRTOS\include/portmacro.h ****  *
  25:.\FreeRTOS\include/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\FreeRTOS\include/portmacro.h ****  */
  27:.\FreeRTOS\include/portmacro.h **** 
  28:.\FreeRTOS\include/portmacro.h **** 
  29:.\FreeRTOS\include/portmacro.h **** #ifndef PORTMACRO_H
  30:.\FreeRTOS\include/portmacro.h **** #define PORTMACRO_H
  31:.\FreeRTOS\include/portmacro.h **** 
  32:.\FreeRTOS\include/portmacro.h **** #ifdef __cplusplus
  33:.\FreeRTOS\include/portmacro.h **** extern "C" {
  34:.\FreeRTOS\include/portmacro.h **** #endif
  35:.\FreeRTOS\include/portmacro.h **** 
  36:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------
  37:.\FreeRTOS\include/portmacro.h ****  * Port specific definitions.
  38:.\FreeRTOS\include/portmacro.h ****  *
  39:.\FreeRTOS\include/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\FreeRTOS\include/portmacro.h ****  * given hardware and compiler.
  41:.\FreeRTOS\include/portmacro.h ****  *
  42:.\FreeRTOS\include/portmacro.h ****  * These settings should not be altered.
  43:.\FreeRTOS\include/portmacro.h ****  *-----------------------------------------------------------
  44:.\FreeRTOS\include/portmacro.h ****  */
  45:.\FreeRTOS\include/portmacro.h **** 
  46:.\FreeRTOS\include/portmacro.h **** /* Type definitions. */
  47:.\FreeRTOS\include/portmacro.h **** #define portCHAR		char
  48:.\FreeRTOS\include/portmacro.h **** #define portFLOAT		float
  49:.\FreeRTOS\include/portmacro.h **** #define portDOUBLE		double
  50:.\FreeRTOS\include/portmacro.h **** #define portLONG		long
  51:.\FreeRTOS\include/portmacro.h **** #define portSHORT		short
  52:.\FreeRTOS\include/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\FreeRTOS\include/portmacro.h **** #define portBASE_TYPE	long
  54:.\FreeRTOS\include/portmacro.h **** 
  55:.\FreeRTOS\include/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\FreeRTOS\include/portmacro.h **** typedef long BaseType_t;
  57:.\FreeRTOS\include/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\FreeRTOS\include/portmacro.h **** 
  59:.\FreeRTOS\include/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\FreeRTOS\include/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\FreeRTOS\include/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\FreeRTOS\include/portmacro.h **** #else
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 64


  63:.\FreeRTOS\include/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\FreeRTOS\include/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\FreeRTOS\include/portmacro.h **** 
  66:.\FreeRTOS\include/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\FreeRTOS\include/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\FreeRTOS\include/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\FreeRTOS\include/portmacro.h **** #endif
  70:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\FreeRTOS\include/portmacro.h **** 
  72:.\FreeRTOS\include/portmacro.h **** /* Architecture specifics. */
  73:.\FreeRTOS\include/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\FreeRTOS\include/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\FreeRTOS\include/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\FreeRTOS\include/portmacro.h **** 
  78:.\FreeRTOS\include/portmacro.h **** /* Scheduler utilities. */
  79:.\FreeRTOS\include/portmacro.h **** #define portYIELD() 															\
  80:.\FreeRTOS\include/portmacro.h **** {																				\
  81:.\FreeRTOS\include/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\FreeRTOS\include/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\FreeRTOS\include/portmacro.h **** 																				\
  84:.\FreeRTOS\include/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\FreeRTOS\include/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\FreeRTOS\include/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\FreeRTOS\include/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\FreeRTOS\include/portmacro.h **** }
  89:.\FreeRTOS\include/portmacro.h **** 
  90:.\FreeRTOS\include/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\FreeRTOS\include/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\FreeRTOS\include/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\FreeRTOS\include/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\FreeRTOS\include/portmacro.h **** 
  96:.\FreeRTOS\include/portmacro.h **** /* Critical section management. */
  97:.\FreeRTOS\include/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\FreeRTOS\include/portmacro.h **** extern void vPortExitCritical( void );
  99:.\FreeRTOS\include/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\FreeRTOS\include/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\FreeRTOS\include/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\FreeRTOS\include/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\FreeRTOS\include/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\FreeRTOS\include/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\FreeRTOS\include/portmacro.h **** 
 106:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\FreeRTOS\include/portmacro.h **** 
 108:.\FreeRTOS\include/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\FreeRTOS\include/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\FreeRTOS\include/portmacro.h **** (which build with all the ports) will build. */
 111:.\FreeRTOS\include/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\FreeRTOS\include/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\FreeRTOS\include/portmacro.h **** 
 115:.\FreeRTOS\include/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\FreeRTOS\include/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\FreeRTOS\include/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\FreeRTOS\include/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\FreeRTOS\include/portmacro.h **** #endif
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 65


 120:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\FreeRTOS\include/portmacro.h **** 
 122:.\FreeRTOS\include/portmacro.h **** /* Architecture specific optimisations. */
 123:.\FreeRTOS\include/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\FreeRTOS\include/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\FreeRTOS\include/portmacro.h **** #endif
 126:.\FreeRTOS\include/portmacro.h **** 
 127:.\FreeRTOS\include/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\FreeRTOS\include/portmacro.h **** 
 129:.\FreeRTOS\include/portmacro.h **** 	/* Generic helper function. */
 130:.\FreeRTOS\include/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\FreeRTOS\include/portmacro.h **** 	{
 132:.\FreeRTOS\include/portmacro.h **** 	uint8_t ucReturn;
 133:.\FreeRTOS\include/portmacro.h **** 
 134:.\FreeRTOS\include/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\FreeRTOS\include/portmacro.h **** 		return ucReturn;
 136:.\FreeRTOS\include/portmacro.h **** 	}
 137:.\FreeRTOS\include/portmacro.h **** 
 138:.\FreeRTOS\include/portmacro.h **** 	/* Check the configuration. */
 139:.\FreeRTOS\include/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\FreeRTOS\include/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\FreeRTOS\include/portmacro.h **** 	#endif
 142:.\FreeRTOS\include/portmacro.h **** 
 143:.\FreeRTOS\include/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\FreeRTOS\include/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\FreeRTOS\include/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\FreeRTOS\include/portmacro.h **** 
 147:.\FreeRTOS\include/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\FreeRTOS\include/portmacro.h **** 
 149:.\FreeRTOS\include/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\FreeRTOS\include/portmacro.h **** 
 151:.\FreeRTOS\include/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\FreeRTOS\include/portmacro.h **** 
 153:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\FreeRTOS\include/portmacro.h **** 
 155:.\FreeRTOS\include/portmacro.h **** #ifdef configASSERT
 156:.\FreeRTOS\include/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\FreeRTOS\include/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\FreeRTOS\include/portmacro.h **** #endif
 159:.\FreeRTOS\include/portmacro.h **** 
 160:.\FreeRTOS\include/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\FreeRTOS\include/portmacro.h **** #define portNOP()
 162:.\FreeRTOS\include/portmacro.h **** 
 163:.\FreeRTOS\include/portmacro.h **** #define portINLINE	__inline
 164:.\FreeRTOS\include/portmacro.h **** 
 165:.\FreeRTOS\include/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\FreeRTOS\include/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\FreeRTOS\include/portmacro.h **** #endif
 168:.\FreeRTOS\include/portmacro.h **** 
 169:.\FreeRTOS\include/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:.\FreeRTOS\include/portmacro.h **** {
 171:.\FreeRTOS\include/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:.\FreeRTOS\include/portmacro.h **** BaseType_t xReturn;
 173:.\FreeRTOS\include/portmacro.h **** 
 174:.\FreeRTOS\include/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:.\FreeRTOS\include/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:.\FreeRTOS\include/portmacro.h **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 66


 177:.\FreeRTOS\include/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:.\FreeRTOS\include/portmacro.h **** 	{
 179:.\FreeRTOS\include/portmacro.h **** 		xReturn = pdFALSE;
 180:.\FreeRTOS\include/portmacro.h **** 	}
 181:.\FreeRTOS\include/portmacro.h **** 	else
 182:.\FreeRTOS\include/portmacro.h **** 	{
 183:.\FreeRTOS\include/portmacro.h **** 		xReturn = pdTRUE;
 184:.\FreeRTOS\include/portmacro.h **** 	}
 185:.\FreeRTOS\include/portmacro.h **** 
 186:.\FreeRTOS\include/portmacro.h **** 	return xReturn;
 187:.\FreeRTOS\include/portmacro.h **** }
 188:.\FreeRTOS\include/portmacro.h **** 
 189:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 190:.\FreeRTOS\include/portmacro.h **** 
 191:.\FreeRTOS\include/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:.\FreeRTOS\include/portmacro.h **** {
 193:.\FreeRTOS\include/portmacro.h **** uint32_t ulNewBASEPRI;
 194:.\FreeRTOS\include/portmacro.h **** 
 195:.\FreeRTOS\include/portmacro.h **** 	__asm volatile
 196:.\FreeRTOS\include/portmacro.h **** 	(
 197:.\FreeRTOS\include/portmacro.h **** 		"	mov %0, %1												\n" \
 198:.\FreeRTOS\include/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:.\FreeRTOS\include/portmacro.h **** 		"	isb														\n" \
 200:.\FreeRTOS\include/portmacro.h **** 		"	dsb														\n" \
 201:.\FreeRTOS\include/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:.\FreeRTOS\include/portmacro.h **** 	);
 203:.\FreeRTOS\include/portmacro.h **** }
 204:.\FreeRTOS\include/portmacro.h **** 
 205:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 206:.\FreeRTOS\include/portmacro.h **** 
 207:.\FreeRTOS\include/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:.\FreeRTOS\include/portmacro.h **** {
 209:.\FreeRTOS\include/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:.\FreeRTOS\include/portmacro.h **** 
 211:.\FreeRTOS\include/portmacro.h **** 	__asm volatile
 1033              		.loc 2 211 0
 1034              		.syntax unified
 1035              	@ 211 ".\FreeRTOS\include/portmacro.h" 1
 1036 0002 EFF31186 			mrs r6, basepri											
 1037 0006 4FF0A004 		mov r4, #160												
 1038 000a 84F31188 		msr basepri, r4											
 1039 000e BFF36F8F 		isb														
 1040 0012 BFF34F8F 		dsb														
 1041              	
 1042              	@ 0 "" 2
 1043              		.thumb
 1044              		.syntax unified
 1045              	.LBE26:
 1046              	.LBE25:
 990:FreeRTOS\src/queue.c **** 		{
 1047              		.loc 1 990 0
 1048 0016 856B     		ldr	r5, [r0, #56]
 1049 0018 C46B     		ldr	r4, [r0, #60]
 1050 001a A542     		cmp	r5, r4
 1051 001c 01D3     		bcc	.L84
 990:FreeRTOS\src/queue.c **** 		{
 1052              		.loc 1 990 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 67


 1053 001e 022B     		cmp	r3, #2
 1054 0020 1BD1     		bne	.L87
 1055              	.L84:
 1056 0022 1746     		mov	r7, r2
 1057 0024 0546     		mov	r5, r0
 1058              	.LBB27:
 992:FreeRTOS\src/queue.c **** 
 1059              		.loc 1 992 0 is_stmt 1
 1060 0026 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 1061 002a 64B2     		sxtb	r4, r4
 1062              	.LVL129:
1001:FreeRTOS\src/queue.c **** 
 1063              		.loc 1 1001 0
 1064 002c 1A46     		mov	r2, r3
 1065              	.LVL130:
 1066 002e FFF7FEFF 		bl	prvCopyDataToQueue
 1067              	.LVL131:
1005:FreeRTOS\src/queue.c **** 			{
 1068              		.loc 1 1005 0
 1069 0032 B4F1FF3F 		cmp	r4, #-1
 1070 0036 0AD1     		bne	.L86
1060:FreeRTOS\src/queue.c **** 					{
 1071              		.loc 1 1060 0
 1072 0038 6B6A     		ldr	r3, [r5, #36]
 1073 003a 83B1     		cbz	r3, .L88
1062:FreeRTOS\src/queue.c **** 						{
 1074              		.loc 1 1062 0
 1075 003c 05F12400 		add	r0, r5, #36
 1076 0040 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1077              	.LVL132:
 1078 0044 68B1     		cbz	r0, .L89
1066:FreeRTOS\src/queue.c **** 							{
 1079              		.loc 1 1066 0
 1080 0046 77B1     		cbz	r7, .L90
1068:FreeRTOS\src/queue.c **** 							}
 1081              		.loc 1 1068 0
 1082 0048 0120     		movs	r0, #1
 1083 004a 3860     		str	r0, [r7]
 1084 004c 0CE0     		b	.L85
 1085              	.L86:
1091:FreeRTOS\src/queue.c **** 			}
 1086              		.loc 1 1091 0
 1087 004e 0134     		adds	r4, r4, #1
 1088              	.LVL133:
 1089 0050 64B2     		sxtb	r4, r4
 1090              	.LVL134:
 1091 0052 85F84540 		strb	r4, [r5, #69]
1094:FreeRTOS\src/queue.c **** 		}
 1092              		.loc 1 1094 0
 1093 0056 0120     		movs	r0, #1
 1094 0058 06E0     		b	.L85
 1095              	.LVL135:
 1096              	.L87:
 1097              	.LBE27:
1099:FreeRTOS\src/queue.c **** 		}
 1098              		.loc 1 1099 0
 1099 005a 0020     		movs	r0, #0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 68


 1100              	.LVL136:
 1101 005c 04E0     		b	.L85
 1102              	.LVL137:
 1103              	.L88:
 1104              	.LBB28:
1094:FreeRTOS\src/queue.c **** 		}
 1105              		.loc 1 1094 0
 1106 005e 0120     		movs	r0, #1
 1107 0060 02E0     		b	.L85
 1108              	.L89:
 1109 0062 0120     		movs	r0, #1
 1110 0064 00E0     		b	.L85
 1111              	.L90:
 1112 0066 0120     		movs	r0, #1
 1113              	.LVL138:
 1114              	.L85:
 1115              	.LBE28:
 1116              	.LBB29:
 1117              	.LBB30:
 212:.\FreeRTOS\include/portmacro.h **** 	(
 213:.\FreeRTOS\include/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:.\FreeRTOS\include/portmacro.h **** 		"	mov %1, %2												\n" \
 215:.\FreeRTOS\include/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:.\FreeRTOS\include/portmacro.h **** 		"	isb														\n" \
 217:.\FreeRTOS\include/portmacro.h **** 		"	dsb														\n" \
 218:.\FreeRTOS\include/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:.\FreeRTOS\include/portmacro.h **** 	);
 220:.\FreeRTOS\include/portmacro.h **** 
 221:.\FreeRTOS\include/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:.\FreeRTOS\include/portmacro.h **** 	warnings. */
 223:.\FreeRTOS\include/portmacro.h **** 	return ulOriginalBASEPRI;
 224:.\FreeRTOS\include/portmacro.h **** }
 225:.\FreeRTOS\include/portmacro.h **** /*-----------------------------------------------------------*/
 226:.\FreeRTOS\include/portmacro.h **** 
 227:.\FreeRTOS\include/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:.\FreeRTOS\include/portmacro.h **** {
 229:.\FreeRTOS\include/portmacro.h **** 	__asm volatile
 1118              		.loc 2 229 0
 1119              		.syntax unified
 1120              	@ 229 ".\FreeRTOS\include/portmacro.h" 1
 1121 0068 86F31188 			msr basepri, r6	
 1122              	@ 0 "" 2
 1123              	.LVL139:
 1124              		.thumb
 1125              		.syntax unified
 1126              	.LBE30:
 1127              	.LBE29:
1105:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 1128              		.loc 1 1105 0
 1129 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1130              		.cfi_endproc
 1131              	.LFE14:
 1132              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1133 006e 00BF     		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1134              		.align	2
 1135              		.global	xQueueGiveFromISR
 1136              		.thumb
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 69


 1137              		.thumb_func
 1138              		.type	xQueueGiveFromISR, %function
 1139              	xQueueGiveFromISR:
 1140              	.LFB15:
1109:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 1141              		.loc 1 1109 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL140:
 1146 0000 38B5     		push	{r3, r4, r5, lr}
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 3, -16
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 5, -8
 1151              		.cfi_offset 14, -4
 1152              	.LVL141:
 1153              	.LBB31:
 1154              	.LBB32:
 211:.\FreeRTOS\include/portmacro.h **** 	(
 1155              		.loc 2 211 0
 1156              		.syntax unified
 1157              	@ 211 ".\FreeRTOS\include/portmacro.h" 1
 1158 0002 EFF31184 			mrs r4, basepri											
 1159 0006 4FF0A003 		mov r3, #160												
 1160 000a 83F31188 		msr basepri, r3											
 1161 000e BFF36F8F 		isb														
 1162 0012 BFF34F8F 		dsb														
 1163              	
 1164              	@ 0 "" 2
 1165              		.thumb
 1166              		.syntax unified
 1167              	.LBE32:
 1168              	.LBE31:
 1169              	.LBB33:
1149:FreeRTOS\src/queue.c **** 
 1170              		.loc 1 1149 0
 1171 0016 826B     		ldr	r2, [r0, #56]
 1172              	.LVL142:
1154:FreeRTOS\src/queue.c **** 		{
 1173              		.loc 1 1154 0
 1174 0018 C36B     		ldr	r3, [r0, #60]
 1175 001a 9A42     		cmp	r2, r3
 1176 001c 18D2     		bcs	.L95
 1177              	.LBB34:
1156:FreeRTOS\src/queue.c **** 
 1178              		.loc 1 1156 0
 1179 001e 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1180 0022 5BB2     		sxtb	r3, r3
 1181              	.LVL143:
1166:FreeRTOS\src/queue.c **** 
 1182              		.loc 1 1166 0
 1183 0024 0132     		adds	r2, r2, #1
 1184              	.LVL144:
 1185 0026 8263     		str	r2, [r0, #56]
1170:FreeRTOS\src/queue.c **** 			{
 1186              		.loc 1 1170 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 70


 1187 0028 B3F1FF3F 		cmp	r3, #-1
 1188 002c 0AD1     		bne	.L94
1225:FreeRTOS\src/queue.c **** 					{
 1189              		.loc 1 1225 0
 1190 002e 436A     		ldr	r3, [r0, #36]
 1191              	.LVL145:
 1192 0030 83B1     		cbz	r3, .L96
 1193 0032 0D46     		mov	r5, r1
1227:FreeRTOS\src/queue.c **** 						{
 1194              		.loc 1 1227 0
 1195 0034 2430     		adds	r0, r0, #36
 1196              	.LVL146:
 1197 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1198              	.LVL147:
 1199 003a 68B1     		cbz	r0, .L97
1231:FreeRTOS\src/queue.c **** 							{
 1200              		.loc 1 1231 0
 1201 003c 75B1     		cbz	r5, .L98
1233:FreeRTOS\src/queue.c **** 							}
 1202              		.loc 1 1233 0
 1203 003e 0120     		movs	r0, #1
 1204 0040 2860     		str	r0, [r5]
 1205 0042 0CE0     		b	.L93
 1206              	.LVL148:
 1207              	.L94:
1256:FreeRTOS\src/queue.c **** 			}
 1208              		.loc 1 1256 0
 1209 0044 0133     		adds	r3, r3, #1
 1210              	.LVL149:
 1211 0046 5BB2     		sxtb	r3, r3
 1212              	.LVL150:
 1213 0048 80F84530 		strb	r3, [r0, #69]
1259:FreeRTOS\src/queue.c **** 		}
 1214              		.loc 1 1259 0
 1215 004c 0120     		movs	r0, #1
 1216              	.LVL151:
 1217 004e 06E0     		b	.L93
 1218              	.LVL152:
 1219              	.L95:
 1220              	.LBE34:
1264:FreeRTOS\src/queue.c **** 		}
 1221              		.loc 1 1264 0
 1222 0050 0020     		movs	r0, #0
 1223              	.LVL153:
 1224 0052 04E0     		b	.L93
 1225              	.LVL154:
 1226              	.L96:
 1227              	.LBB35:
1259:FreeRTOS\src/queue.c **** 		}
 1228              		.loc 1 1259 0
 1229 0054 0120     		movs	r0, #1
 1230              	.LVL155:
 1231 0056 02E0     		b	.L93
 1232              	.LVL156:
 1233              	.L97:
 1234 0058 0120     		movs	r0, #1
 1235 005a 00E0     		b	.L93
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 71


 1236              	.L98:
 1237 005c 0120     		movs	r0, #1
 1238              	.LVL157:
 1239              	.L93:
 1240              	.LBE35:
 1241              	.LBE33:
 1242              	.LBB36:
 1243              	.LBB37:
 1244              		.loc 2 229 0
 1245              		.syntax unified
 1246              	@ 229 ".\FreeRTOS\include/portmacro.h" 1
 1247 005e 84F31188 			msr basepri, r4	
 1248              	@ 0 "" 2
 1249              	.LVL158:
 1250              		.thumb
 1251              		.syntax unified
 1252              	.LBE37:
 1253              	.LBE36:
1270:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 1254              		.loc 1 1270 0
 1255 0062 38BD     		pop	{r3, r4, r5, pc}
 1256              		.cfi_endproc
 1257              	.LFE15:
 1258              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1259              		.section	.text.xQueueReceive,"ax",%progbits
 1260              		.align	2
 1261              		.global	xQueueReceive
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	xQueueReceive, %function
 1265              	xQueueReceive:
 1266              	.LFB16:
1274:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1267              		.loc 1 1274 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              	.LVL159:
 1272 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1273              		.cfi_def_cfa_offset 20
 1274              		.cfi_offset 4, -20
 1275              		.cfi_offset 5, -16
 1276              		.cfi_offset 6, -12
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 85B0     		sub	sp, sp, #20
 1280              		.cfi_def_cfa_offset 40
 1281 0004 0446     		mov	r4, r0
 1282 0006 0F46     		mov	r7, r1
 1283 0008 0192     		str	r2, [sp, #4]
 1284              	.LVL160:
1275:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
 1285              		.loc 1 1275 0
 1286 000a 0026     		movs	r6, #0
 1287              	.LVL161:
 1288              	.L101:
1299:FreeRTOS\src/queue.c **** 		{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 72


 1289              		.loc 1 1299 0
 1290 000c FFF7FEFF 		bl	vPortEnterCritical
 1291              	.LVL162:
 1292              	.LBB38:
1301:FreeRTOS\src/queue.c **** 
 1293              		.loc 1 1301 0
 1294 0010 A56B     		ldr	r5, [r4, #56]
 1295              	.LVL163:
1305:FreeRTOS\src/queue.c **** 			{
 1296              		.loc 1 1305 0
 1297 0012 C5B1     		cbz	r5, .L102
1308:FreeRTOS\src/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1298              		.loc 1 1308 0
 1299 0014 3946     		mov	r1, r7
 1300 0016 2046     		mov	r0, r4
 1301 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 1302              	.LVL164:
1310:FreeRTOS\src/queue.c **** 
 1303              		.loc 1 1310 0
 1304 001c 013D     		subs	r5, r5, #1
 1305              	.LVL165:
 1306 001e A563     		str	r5, [r4, #56]
1315:FreeRTOS\src/queue.c **** 				{
 1307              		.loc 1 1315 0
 1308 0020 2369     		ldr	r3, [r4, #16]
 1309 0022 63B1     		cbz	r3, .L103
1317:FreeRTOS\src/queue.c **** 					{
 1310              		.loc 1 1317 0
 1311 0024 04F11000 		add	r0, r4, #16
 1312 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1313              	.LVL166:
 1314 002c 38B1     		cbz	r0, .L103
1319:FreeRTOS\src/queue.c **** 					}
 1315              		.loc 1 1319 0
 1316 002e 4FF08052 		mov	r2, #268435456
 1317 0032 304B     		ldr	r3, .L113
 1318 0034 1A60     		str	r2, [r3]
 1319              		.syntax unified
 1320              	@ 1319 "FreeRTOS\src\queue.c" 1
 1321 0036 BFF34F8F 		dsb
 1322              	@ 0 "" 2
 1323              	@ 1319 "FreeRTOS\src\queue.c" 1
 1324 003a BFF36F8F 		isb
 1325              	@ 0 "" 2
 1326              		.thumb
 1327              		.syntax unified
 1328              	.L103:
1331:FreeRTOS\src/queue.c **** 				return pdPASS;
 1329              		.loc 1 1331 0
 1330 003e FFF7FEFF 		bl	vPortExitCritical
 1331              	.LVL167:
1332:FreeRTOS\src/queue.c **** 			}
 1332              		.loc 1 1332 0
 1333 0042 0120     		movs	r0, #1
 1334 0044 53E0     		b	.L104
 1335              	.LVL168:
 1336              	.L102:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 73


1336:FreeRTOS\src/queue.c **** 				{
 1337              		.loc 1 1336 0
 1338 0046 019B     		ldr	r3, [sp, #4]
 1339 0048 1BB9     		cbnz	r3, .L105
1340:FreeRTOS\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1340              		.loc 1 1340 0
 1341 004a FFF7FEFF 		bl	vPortExitCritical
 1342              	.LVL169:
1342:FreeRTOS\src/queue.c **** 				}
 1343              		.loc 1 1342 0
 1344 004e 0020     		movs	r0, #0
 1345 0050 4DE0     		b	.L104
 1346              	.L105:
1344:FreeRTOS\src/queue.c **** 				{
 1347              		.loc 1 1344 0
 1348 0052 1EB9     		cbnz	r6, .L106
1348:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 1349              		.loc 1 1348 0
 1350 0054 02A8     		add	r0, sp, #8
 1351 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1352              	.LVL170:
1349:FreeRTOS\src/queue.c **** 				}
 1353              		.loc 1 1349 0
 1354 005a 0126     		movs	r6, #1
 1355              	.LVL171:
 1356              	.L106:
 1357              	.LBE38:
1358:FreeRTOS\src/queue.c **** 
 1358              		.loc 1 1358 0
 1359 005c FFF7FEFF 		bl	vPortExitCritical
 1360              	.LVL172:
1363:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
 1361              		.loc 1 1363 0
 1362 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1363              	.LVL173:
1364:FreeRTOS\src/queue.c **** 
 1364              		.loc 1 1364 0
 1365 0064 FFF7FEFF 		bl	vPortEnterCritical
 1366              	.LVL174:
 1367 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1368 006c 5BB2     		sxtb	r3, r3
 1369 006e B3F1FF3F 		cmp	r3, #-1
 1370 0072 02D1     		bne	.L107
1364:FreeRTOS\src/queue.c **** 
 1371              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1372 0074 0023     		movs	r3, #0
 1373 0076 84F84430 		strb	r3, [r4, #68]
 1374              	.L107:
1364:FreeRTOS\src/queue.c **** 
 1375              		.loc 1 1364 0 discriminator 3
 1376 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1377 007e 5BB2     		sxtb	r3, r3
 1378 0080 B3F1FF3F 		cmp	r3, #-1
 1379 0084 02D1     		bne	.L108
1364:FreeRTOS\src/queue.c **** 
 1380              		.loc 1 1364 0 discriminator 4
 1381 0086 0023     		movs	r3, #0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 74


 1382 0088 84F84530 		strb	r3, [r4, #69]
 1383              	.L108:
1364:FreeRTOS\src/queue.c **** 
 1384              		.loc 1 1364 0 discriminator 6
 1385 008c FFF7FEFF 		bl	vPortExitCritical
 1386              	.LVL175:
1367:FreeRTOS\src/queue.c **** 		{
 1387              		.loc 1 1367 0 is_stmt 1 discriminator 6
 1388 0090 01A9     		add	r1, sp, #4
 1389              	.LVL176:
 1390 0092 02A8     		add	r0, sp, #8
 1391 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1392              	.LVL177:
 1393 0098 F0B9     		cbnz	r0, .L109
1371:FreeRTOS\src/queue.c **** 			{
 1394              		.loc 1 1371 0
 1395 009a 2046     		mov	r0, r4
 1396 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1397              	.LVL178:
 1398 00a0 A0B1     		cbz	r0, .L110
1374:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
 1399              		.loc 1 1374 0
 1400 00a2 0199     		ldr	r1, [sp, #4]
 1401 00a4 04F12400 		add	r0, r4, #36
 1402 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1403              	.LVL179:
1375:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1404              		.loc 1 1375 0
 1405 00ac 2046     		mov	r0, r4
 1406 00ae FFF7FEFF 		bl	prvUnlockQueue
 1407              	.LVL180:
1376:FreeRTOS\src/queue.c **** 				{
 1408              		.loc 1 1376 0
 1409 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1410              	.LVL181:
 1411 00b6 0028     		cmp	r0, #0
 1412 00b8 A8D1     		bne	.L101
1378:FreeRTOS\src/queue.c **** 				}
 1413              		.loc 1 1378 0
 1414 00ba 4FF08052 		mov	r2, #268435456
 1415 00be 0D4B     		ldr	r3, .L113
 1416 00c0 1A60     		str	r2, [r3]
 1417              		.syntax unified
 1418              	@ 1378 "FreeRTOS\src\queue.c" 1
 1419 00c2 BFF34F8F 		dsb
 1420              	@ 0 "" 2
 1421              	@ 1378 "FreeRTOS\src\queue.c" 1
 1422 00c6 BFF36F8F 		isb
 1423              	@ 0 "" 2
 1424              		.thumb
 1425              		.syntax unified
 1426 00ca 9FE7     		b	.L101
 1427              	.L110:
1389:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
 1428              		.loc 1 1389 0
 1429 00cc 2046     		mov	r0, r4
 1430 00ce FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 75


 1431              	.LVL182:
1390:FreeRTOS\src/queue.c **** 			}
 1432              		.loc 1 1390 0
 1433 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1434              	.LVL183:
 1435 00d6 99E7     		b	.L101
 1436              	.L109:
1397:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
 1437              		.loc 1 1397 0
 1438 00d8 2046     		mov	r0, r4
 1439 00da FFF7FEFF 		bl	prvUnlockQueue
 1440              	.LVL184:
1398:FreeRTOS\src/queue.c **** 
 1441              		.loc 1 1398 0
 1442 00de FFF7FEFF 		bl	xTaskResumeAll
 1443              	.LVL185:
1400:FreeRTOS\src/queue.c **** 			{
 1444              		.loc 1 1400 0
 1445 00e2 2046     		mov	r0, r4
 1446 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1447              	.LVL186:
 1448 00e8 0028     		cmp	r0, #0
 1449 00ea 8FD0     		beq	.L101
1403:FreeRTOS\src/queue.c **** 			}
 1450              		.loc 1 1403 0
 1451 00ec 0020     		movs	r0, #0
 1452              	.LVL187:
 1453              	.L104:
1411:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 1454              		.loc 1 1411 0
 1455 00ee 05B0     		add	sp, sp, #20
 1456              		.cfi_def_cfa_offset 20
 1457              		@ sp needed
 1458 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1459              	.LVL188:
 1460              	.L114:
 1461 00f2 00BF     		.align	2
 1462              	.L113:
 1463 00f4 04ED00E0 		.word	-536810236
 1464              		.cfi_endproc
 1465              	.LFE16:
 1466              		.size	xQueueReceive, .-xQueueReceive
 1467              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1468              		.align	2
 1469              		.global	xQueueSemaphoreTake
 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	xQueueSemaphoreTake, %function
 1473              	xQueueSemaphoreTake:
 1474              	.LFB17:
1415:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1475              		.loc 1 1415 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 16
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              	.LVL189:
 1480 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 76


 1481              		.cfi_def_cfa_offset 16
 1482              		.cfi_offset 4, -16
 1483              		.cfi_offset 5, -12
 1484              		.cfi_offset 6, -8
 1485              		.cfi_offset 14, -4
 1486 0002 84B0     		sub	sp, sp, #16
 1487              		.cfi_def_cfa_offset 32
 1488 0004 0446     		mov	r4, r0
 1489 0006 0191     		str	r1, [sp, #4]
 1490              	.LVL190:
1421:FreeRTOS\src/queue.c **** #endif
 1491              		.loc 1 1421 0
 1492 0008 0026     		movs	r6, #0
1416:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
 1493              		.loc 1 1416 0
 1494 000a 3546     		mov	r5, r6
 1495              	.LVL191:
 1496              	.L116:
1444:FreeRTOS\src/queue.c **** 		{
 1497              		.loc 1 1444 0
 1498 000c FFF7FEFF 		bl	vPortEnterCritical
 1499              	.LVL192:
 1500              	.LBB39:
1448:FreeRTOS\src/queue.c **** 
 1501              		.loc 1 1448 0
 1502 0010 A36B     		ldr	r3, [r4, #56]
 1503              	.LVL193:
1452:FreeRTOS\src/queue.c **** 			{
 1504              		.loc 1 1452 0
 1505 0012 CBB1     		cbz	r3, .L117
1458:FreeRTOS\src/queue.c **** 
 1506              		.loc 1 1458 0
 1507 0014 013B     		subs	r3, r3, #1
 1508              	.LVL194:
 1509 0016 A363     		str	r3, [r4, #56]
1462:FreeRTOS\src/queue.c **** 					{
 1510              		.loc 1 1462 0
 1511 0018 2368     		ldr	r3, [r4]
 1512              	.LVL195:
 1513 001a 13B9     		cbnz	r3, .L118
1466:FreeRTOS\src/queue.c **** 					}
 1514              		.loc 1 1466 0
 1515 001c FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1516              	.LVL196:
 1517 0020 A060     		str	r0, [r4, #8]
 1518              	.L118:
1477:FreeRTOS\src/queue.c **** 				{
 1519              		.loc 1 1477 0
 1520 0022 2369     		ldr	r3, [r4, #16]
 1521 0024 63B1     		cbz	r3, .L119
1479:FreeRTOS\src/queue.c **** 					{
 1522              		.loc 1 1479 0
 1523 0026 04F11000 		add	r0, r4, #16
 1524 002a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1525              	.LVL197:
 1526 002e 38B1     		cbz	r0, .L119
1481:FreeRTOS\src/queue.c **** 					}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 77


 1527              		.loc 1 1481 0
 1528 0030 4FF08052 		mov	r2, #268435456
 1529 0034 3B4B     		ldr	r3, .L131
 1530 0036 1A60     		str	r2, [r3]
 1531              		.syntax unified
 1532              	@ 1481 "FreeRTOS\src\queue.c" 1
 1533 0038 BFF34F8F 		dsb
 1534              	@ 0 "" 2
 1535              	@ 1481 "FreeRTOS\src\queue.c" 1
 1536 003c BFF36F8F 		isb
 1537              	@ 0 "" 2
 1538              		.thumb
 1539              		.syntax unified
 1540              	.L119:
1493:FreeRTOS\src/queue.c **** 				return pdPASS;
 1541              		.loc 1 1493 0
 1542 0040 FFF7FEFF 		bl	vPortExitCritical
 1543              	.LVL198:
1494:FreeRTOS\src/queue.c **** 			}
 1544              		.loc 1 1494 0
 1545 0044 0120     		movs	r0, #1
 1546 0046 6BE0     		b	.L120
 1547              	.LVL199:
 1548              	.L117:
1498:FreeRTOS\src/queue.c **** 				{
 1549              		.loc 1 1498 0
 1550 0048 019B     		ldr	r3, [sp, #4]
 1551              	.LVL200:
 1552 004a 1BB9     		cbnz	r3, .L121
1511:FreeRTOS\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1553              		.loc 1 1511 0
 1554 004c FFF7FEFF 		bl	vPortExitCritical
 1555              	.LVL201:
1513:FreeRTOS\src/queue.c **** 				}
 1556              		.loc 1 1513 0
 1557 0050 0020     		movs	r0, #0
 1558 0052 65E0     		b	.L120
 1559              	.L121:
1515:FreeRTOS\src/queue.c **** 				{
 1560              		.loc 1 1515 0
 1561 0054 1DB9     		cbnz	r5, .L122
1519:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 1562              		.loc 1 1519 0
 1563 0056 02A8     		add	r0, sp, #8
 1564 0058 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1565              	.LVL202:
1520:FreeRTOS\src/queue.c **** 				}
 1566              		.loc 1 1520 0
 1567 005c 0125     		movs	r5, #1
 1568              	.LVL203:
 1569              	.L122:
 1570              	.LBE39:
1529:FreeRTOS\src/queue.c **** 
 1571              		.loc 1 1529 0
 1572 005e FFF7FEFF 		bl	vPortExitCritical
 1573              	.LVL204:
1534:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 78


 1574              		.loc 1 1534 0
 1575 0062 FFF7FEFF 		bl	vTaskSuspendAll
 1576              	.LVL205:
1535:FreeRTOS\src/queue.c **** 
 1577              		.loc 1 1535 0
 1578 0066 FFF7FEFF 		bl	vPortEnterCritical
 1579              	.LVL206:
 1580 006a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1581 006e 5BB2     		sxtb	r3, r3
 1582 0070 B3F1FF3F 		cmp	r3, #-1
 1583 0074 02D1     		bne	.L123
1535:FreeRTOS\src/queue.c **** 
 1584              		.loc 1 1535 0 is_stmt 0 discriminator 1
 1585 0076 0023     		movs	r3, #0
 1586 0078 84F84430 		strb	r3, [r4, #68]
 1587              	.L123:
1535:FreeRTOS\src/queue.c **** 
 1588              		.loc 1 1535 0 discriminator 3
 1589 007c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1590 0080 5BB2     		sxtb	r3, r3
 1591 0082 B3F1FF3F 		cmp	r3, #-1
 1592 0086 02D1     		bne	.L124
1535:FreeRTOS\src/queue.c **** 
 1593              		.loc 1 1535 0 discriminator 4
 1594 0088 0023     		movs	r3, #0
 1595 008a 84F84530 		strb	r3, [r4, #69]
 1596              	.L124:
1535:FreeRTOS\src/queue.c **** 
 1597              		.loc 1 1535 0 discriminator 6
 1598 008e FFF7FEFF 		bl	vPortExitCritical
 1599              	.LVL207:
1538:FreeRTOS\src/queue.c **** 		{
 1600              		.loc 1 1538 0 is_stmt 1 discriminator 6
 1601 0092 01A9     		add	r1, sp, #4
 1602              	.LVL208:
 1603 0094 02A8     		add	r0, sp, #8
 1604 0096 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1605              	.LVL209:
 1606 009a 40BB     		cbnz	r0, .L125
1544:FreeRTOS\src/queue.c **** 			{
 1607              		.loc 1 1544 0
 1608 009c 2046     		mov	r0, r4
 1609 009e FFF7FEFF 		bl	prvIsQueueEmpty
 1610              	.LVL210:
 1611 00a2 F0B1     		cbz	r0, .L126
1550:FreeRTOS\src/queue.c **** 					{
 1612              		.loc 1 1550 0
 1613 00a4 2368     		ldr	r3, [r4]
 1614 00a6 3BB9     		cbnz	r3, .L127
1552:FreeRTOS\src/queue.c **** 						{
 1615              		.loc 1 1552 0
 1616 00a8 FFF7FEFF 		bl	vPortEnterCritical
 1617              	.LVL211:
1554:FreeRTOS\src/queue.c **** 						}
 1618              		.loc 1 1554 0
 1619 00ac A068     		ldr	r0, [r4, #8]
 1620 00ae FFF7FEFF 		bl	xTaskPriorityInherit
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 79


 1621              	.LVL212:
 1622 00b2 0646     		mov	r6, r0
 1623              	.LVL213:
1556:FreeRTOS\src/queue.c **** 					}
 1624              		.loc 1 1556 0
 1625 00b4 FFF7FEFF 		bl	vPortExitCritical
 1626              	.LVL214:
 1627              	.L127:
1565:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
 1628              		.loc 1 1565 0
 1629 00b8 0199     		ldr	r1, [sp, #4]
 1630 00ba 04F12400 		add	r0, r4, #36
 1631 00be FFF7FEFF 		bl	vTaskPlaceOnEventList
 1632              	.LVL215:
1566:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1633              		.loc 1 1566 0
 1634 00c2 2046     		mov	r0, r4
 1635 00c4 FFF7FEFF 		bl	prvUnlockQueue
 1636              	.LVL216:
1567:FreeRTOS\src/queue.c **** 				{
 1637              		.loc 1 1567 0
 1638 00c8 FFF7FEFF 		bl	xTaskResumeAll
 1639              	.LVL217:
 1640 00cc 0028     		cmp	r0, #0
 1641 00ce 9DD1     		bne	.L116
1569:FreeRTOS\src/queue.c **** 				}
 1642              		.loc 1 1569 0
 1643 00d0 4FF08052 		mov	r2, #268435456
 1644 00d4 134B     		ldr	r3, .L131
 1645 00d6 1A60     		str	r2, [r3]
 1646              		.syntax unified
 1647              	@ 1569 "FreeRTOS\src\queue.c" 1
 1648 00d8 BFF34F8F 		dsb
 1649              	@ 0 "" 2
 1650              	@ 1569 "FreeRTOS\src\queue.c" 1
 1651 00dc BFF36F8F 		isb
 1652              	@ 0 "" 2
 1653              		.thumb
 1654              		.syntax unified
 1655 00e0 94E7     		b	.L116
 1656              	.L126:
1580:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
 1657              		.loc 1 1580 0
 1658 00e2 2046     		mov	r0, r4
 1659 00e4 FFF7FEFF 		bl	prvUnlockQueue
 1660              	.LVL218:
1581:FreeRTOS\src/queue.c **** 			}
 1661              		.loc 1 1581 0
 1662 00e8 FFF7FEFF 		bl	xTaskResumeAll
 1663              	.LVL219:
 1664 00ec 8EE7     		b	.L116
 1665              	.L125:
1587:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
 1666              		.loc 1 1587 0
 1667 00ee 2046     		mov	r0, r4
 1668 00f0 FFF7FEFF 		bl	prvUnlockQueue
 1669              	.LVL220:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 80


1588:FreeRTOS\src/queue.c **** 
 1670              		.loc 1 1588 0
 1671 00f4 FFF7FEFF 		bl	xTaskResumeAll
 1672              	.LVL221:
1594:FreeRTOS\src/queue.c **** 			{
 1673              		.loc 1 1594 0
 1674 00f8 2046     		mov	r0, r4
 1675 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 1676              	.LVL222:
 1677 00fe 0028     		cmp	r0, #0
 1678 0100 84D0     		beq	.L116
1601:FreeRTOS\src/queue.c **** 					{
 1679              		.loc 1 1601 0
 1680 0102 66B1     		cbz	r6, .L129
1603:FreeRTOS\src/queue.c **** 						{
 1681              		.loc 1 1603 0
 1682 0104 FFF7FEFF 		bl	vPortEnterCritical
 1683              	.LVL223:
 1684              	.LBB40:
1612:FreeRTOS\src/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 1685              		.loc 1 1612 0
 1686 0108 2046     		mov	r0, r4
 1687 010a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 1688              	.LVL224:
1613:FreeRTOS\src/queue.c **** 						}
 1689              		.loc 1 1613 0
 1690 010e 0146     		mov	r1, r0
 1691 0110 A068     		ldr	r0, [r4, #8]
 1692              	.LVL225:
 1693 0112 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1694              	.LVL226:
 1695              	.LBE40:
1615:FreeRTOS\src/queue.c **** 					}
 1696              		.loc 1 1615 0
 1697 0116 FFF7FEFF 		bl	vPortExitCritical
 1698              	.LVL227:
1621:FreeRTOS\src/queue.c **** 			}
 1699              		.loc 1 1621 0
 1700 011a 0020     		movs	r0, #0
 1701 011c 00E0     		b	.L120
 1702              	.L129:
 1703 011e 0020     		movs	r0, #0
 1704              	.L120:
1629:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 1705              		.loc 1 1629 0
 1706 0120 04B0     		add	sp, sp, #16
 1707              		.cfi_def_cfa_offset 16
 1708              		@ sp needed
 1709 0122 70BD     		pop	{r4, r5, r6, pc}
 1710              	.LVL228:
 1711              	.L132:
 1712              		.align	2
 1713              	.L131:
 1714 0124 04ED00E0 		.word	-536810236
 1715              		.cfi_endproc
 1716              	.LFE17:
 1717              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 81


 1718              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1719              		.align	2
 1720              		.global	xQueueTakeMutexRecursive
 1721              		.thumb
 1722              		.thumb_func
 1723              		.type	xQueueTakeMutexRecursive, %function
 1724              	xQueueTakeMutexRecursive:
 1725              	.LFB11:
 652:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
 1726              		.loc 1 652 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              	.LVL229:
 1731 0000 70B5     		push	{r4, r5, r6, lr}
 1732              		.cfi_def_cfa_offset 16
 1733              		.cfi_offset 4, -16
 1734              		.cfi_offset 5, -12
 1735              		.cfi_offset 6, -8
 1736              		.cfi_offset 14, -4
 1737 0002 0446     		mov	r4, r0
 1738 0004 0E46     		mov	r6, r1
 1739              	.LVL230:
 663:FreeRTOS\src/queue.c **** 		{
 1740              		.loc 1 663 0
 1741 0006 8568     		ldr	r5, [r0, #8]
 1742 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1743              	.LVL231:
 1744 000c 8542     		cmp	r5, r0
 1745 000e 04D1     		bne	.L134
 665:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
 1746              		.loc 1 665 0
 1747 0010 E368     		ldr	r3, [r4, #12]
 1748 0012 0133     		adds	r3, r3, #1
 1749 0014 E360     		str	r3, [r4, #12]
 1750              	.LVL232:
 666:FreeRTOS\src/queue.c **** 		}
 1751              		.loc 1 666 0
 1752 0016 0123     		movs	r3, #1
 1753 0018 08E0     		b	.L135
 1754              	.LVL233:
 1755              	.L134:
 670:FreeRTOS\src/queue.c **** 
 1756              		.loc 1 670 0
 1757 001a 3146     		mov	r1, r6
 1758 001c 2046     		mov	r0, r4
 1759 001e FFF7FEFF 		bl	xQueueSemaphoreTake
 1760              	.LVL234:
 675:FreeRTOS\src/queue.c **** 			{
 1761              		.loc 1 675 0
 1762 0022 0346     		mov	r3, r0
 1763 0024 10B1     		cbz	r0, .L135
 677:FreeRTOS\src/queue.c **** 			}
 1764              		.loc 1 677 0
 1765 0026 E268     		ldr	r2, [r4, #12]
 1766 0028 0132     		adds	r2, r2, #1
 1767 002a E260     		str	r2, [r4, #12]
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 82


 1768              	.LVL235:
 1769              	.L135:
 686:FreeRTOS\src/queue.c **** 
 1770              		.loc 1 686 0
 1771 002c 1846     		mov	r0, r3
 1772 002e 70BD     		pop	{r4, r5, r6, pc}
 1773              		.cfi_endproc
 1774              	.LFE11:
 1775              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1776              		.section	.text.xQueuePeek,"ax",%progbits
 1777              		.align	2
 1778              		.global	xQueuePeek
 1779              		.thumb
 1780              		.thumb_func
 1781              		.type	xQueuePeek, %function
 1782              	xQueuePeek:
 1783              	.LFB18:
1633:FreeRTOS\src/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1784              		.loc 1 1633 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 16
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              	.LVL236:
 1789 0000 70B5     		push	{r4, r5, r6, lr}
 1790              		.cfi_def_cfa_offset 16
 1791              		.cfi_offset 4, -16
 1792              		.cfi_offset 5, -12
 1793              		.cfi_offset 6, -8
 1794              		.cfi_offset 14, -4
 1795 0002 84B0     		sub	sp, sp, #16
 1796              		.cfi_def_cfa_offset 32
 1797 0004 0446     		mov	r4, r0
 1798 0006 0E46     		mov	r6, r1
 1799 0008 0192     		str	r2, [sp, #4]
 1800              	.LVL237:
1634:FreeRTOS\src/queue.c **** TimeOut_t xTimeOut;
 1801              		.loc 1 1634 0
 1802 000a 0025     		movs	r5, #0
 1803              	.LVL238:
 1804              	.L138:
1659:FreeRTOS\src/queue.c **** 		{
 1805              		.loc 1 1659 0
 1806 000c FFF7FEFF 		bl	vPortEnterCritical
 1807              	.LVL239:
 1808              	.LBB41:
1661:FreeRTOS\src/queue.c **** 
 1809              		.loc 1 1661 0
 1810 0010 A36B     		ldr	r3, [r4, #56]
 1811              	.LVL240:
1665:FreeRTOS\src/queue.c **** 			{
 1812              		.loc 1 1665 0
 1813 0012 C3B1     		cbz	r3, .L139
1670:FreeRTOS\src/queue.c **** 
 1814              		.loc 1 1670 0
 1815 0014 E568     		ldr	r5, [r4, #12]
 1816              	.LVL241:
1672:FreeRTOS\src/queue.c **** 				traceQUEUE_PEEK( pxQueue );
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 83


 1817              		.loc 1 1672 0
 1818 0016 3146     		mov	r1, r6
 1819 0018 2046     		mov	r0, r4
 1820 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1821              	.LVL242:
1676:FreeRTOS\src/queue.c **** 
 1822              		.loc 1 1676 0
 1823 001e E560     		str	r5, [r4, #12]
1680:FreeRTOS\src/queue.c **** 				{
 1824              		.loc 1 1680 0
 1825 0020 636A     		ldr	r3, [r4, #36]
 1826 0022 63B1     		cbz	r3, .L140
1682:FreeRTOS\src/queue.c **** 					{
 1827              		.loc 1 1682 0
 1828 0024 04F12400 		add	r0, r4, #36
 1829 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1830              	.LVL243:
 1831 002c 38B1     		cbz	r0, .L140
1685:FreeRTOS\src/queue.c **** 					}
 1832              		.loc 1 1685 0
 1833 002e 4FF08052 		mov	r2, #268435456
 1834 0032 304B     		ldr	r3, .L150
 1835 0034 1A60     		str	r2, [r3]
 1836              		.syntax unified
 1837              	@ 1685 "FreeRTOS\src\queue.c" 1
 1838 0036 BFF34F8F 		dsb
 1839              	@ 0 "" 2
 1840              	@ 1685 "FreeRTOS\src\queue.c" 1
 1841 003a BFF36F8F 		isb
 1842              	@ 0 "" 2
 1843              		.thumb
 1844              		.syntax unified
 1845              	.L140:
1697:FreeRTOS\src/queue.c **** 				return pdPASS;
 1846              		.loc 1 1697 0
 1847 003e FFF7FEFF 		bl	vPortExitCritical
 1848              	.LVL244:
1698:FreeRTOS\src/queue.c **** 			}
 1849              		.loc 1 1698 0
 1850 0042 0120     		movs	r0, #1
 1851 0044 53E0     		b	.L141
 1852              	.LVL245:
 1853              	.L139:
1702:FreeRTOS\src/queue.c **** 				{
 1854              		.loc 1 1702 0
 1855 0046 019B     		ldr	r3, [sp, #4]
 1856              	.LVL246:
 1857 0048 1BB9     		cbnz	r3, .L142
1706:FreeRTOS\src/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 1858              		.loc 1 1706 0
 1859 004a FFF7FEFF 		bl	vPortExitCritical
 1860              	.LVL247:
1708:FreeRTOS\src/queue.c **** 				}
 1861              		.loc 1 1708 0
 1862 004e 0020     		movs	r0, #0
 1863 0050 4DE0     		b	.L141
 1864              	.L142:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 84


1710:FreeRTOS\src/queue.c **** 				{
 1865              		.loc 1 1710 0
 1866 0052 1DB9     		cbnz	r5, .L143
1715:FreeRTOS\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 1867              		.loc 1 1715 0
 1868 0054 02A8     		add	r0, sp, #8
 1869 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1870              	.LVL248:
1716:FreeRTOS\src/queue.c **** 				}
 1871              		.loc 1 1716 0
 1872 005a 0125     		movs	r5, #1
 1873              	.LVL249:
 1874              	.L143:
 1875              	.LBE41:
1725:FreeRTOS\src/queue.c **** 
 1876              		.loc 1 1725 0
 1877 005c FFF7FEFF 		bl	vPortExitCritical
 1878              	.LVL250:
1730:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
 1879              		.loc 1 1730 0
 1880 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1881              	.LVL251:
1731:FreeRTOS\src/queue.c **** 
 1882              		.loc 1 1731 0
 1883 0064 FFF7FEFF 		bl	vPortEnterCritical
 1884              	.LVL252:
 1885 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1886 006c 5BB2     		sxtb	r3, r3
 1887 006e B3F1FF3F 		cmp	r3, #-1
 1888 0072 02D1     		bne	.L144
1731:FreeRTOS\src/queue.c **** 
 1889              		.loc 1 1731 0 is_stmt 0 discriminator 1
 1890 0074 0023     		movs	r3, #0
 1891 0076 84F84430 		strb	r3, [r4, #68]
 1892              	.L144:
1731:FreeRTOS\src/queue.c **** 
 1893              		.loc 1 1731 0 discriminator 3
 1894 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1895 007e 5BB2     		sxtb	r3, r3
 1896 0080 B3F1FF3F 		cmp	r3, #-1
 1897 0084 02D1     		bne	.L145
1731:FreeRTOS\src/queue.c **** 
 1898              		.loc 1 1731 0 discriminator 4
 1899 0086 0023     		movs	r3, #0
 1900 0088 84F84530 		strb	r3, [r4, #69]
 1901              	.L145:
1731:FreeRTOS\src/queue.c **** 
 1902              		.loc 1 1731 0 discriminator 6
 1903 008c FFF7FEFF 		bl	vPortExitCritical
 1904              	.LVL253:
1734:FreeRTOS\src/queue.c **** 		{
 1905              		.loc 1 1734 0 is_stmt 1 discriminator 6
 1906 0090 01A9     		add	r1, sp, #4
 1907              	.LVL254:
 1908 0092 02A8     		add	r0, sp, #8
 1909 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1910              	.LVL255:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 85


 1911 0098 F0B9     		cbnz	r0, .L146
1738:FreeRTOS\src/queue.c **** 			{
 1912              		.loc 1 1738 0
 1913 009a 2046     		mov	r0, r4
 1914 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1915              	.LVL256:
 1916 00a0 A0B1     		cbz	r0, .L147
1741:FreeRTOS\src/queue.c **** 				prvUnlockQueue( pxQueue );
 1917              		.loc 1 1741 0
 1918 00a2 0199     		ldr	r1, [sp, #4]
 1919 00a4 04F12400 		add	r0, r4, #36
 1920 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1921              	.LVL257:
1742:FreeRTOS\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1922              		.loc 1 1742 0
 1923 00ac 2046     		mov	r0, r4
 1924 00ae FFF7FEFF 		bl	prvUnlockQueue
 1925              	.LVL258:
1743:FreeRTOS\src/queue.c **** 				{
 1926              		.loc 1 1743 0
 1927 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1928              	.LVL259:
 1929 00b6 0028     		cmp	r0, #0
 1930 00b8 A8D1     		bne	.L138
1745:FreeRTOS\src/queue.c **** 				}
 1931              		.loc 1 1745 0
 1932 00ba 4FF08052 		mov	r2, #268435456
 1933 00be 0D4B     		ldr	r3, .L150
 1934 00c0 1A60     		str	r2, [r3]
 1935              		.syntax unified
 1936              	@ 1745 "FreeRTOS\src\queue.c" 1
 1937 00c2 BFF34F8F 		dsb
 1938              	@ 0 "" 2
 1939              	@ 1745 "FreeRTOS\src\queue.c" 1
 1940 00c6 BFF36F8F 		isb
 1941              	@ 0 "" 2
 1942              		.thumb
 1943              		.syntax unified
 1944 00ca 9FE7     		b	.L138
 1945              	.L147:
1756:FreeRTOS\src/queue.c **** 				( void ) xTaskResumeAll();
 1946              		.loc 1 1756 0
 1947 00cc 2046     		mov	r0, r4
 1948 00ce FFF7FEFF 		bl	prvUnlockQueue
 1949              	.LVL260:
1757:FreeRTOS\src/queue.c **** 			}
 1950              		.loc 1 1757 0
 1951 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1952              	.LVL261:
 1953 00d6 99E7     		b	.L138
 1954              	.L146:
1764:FreeRTOS\src/queue.c **** 			( void ) xTaskResumeAll();
 1955              		.loc 1 1764 0
 1956 00d8 2046     		mov	r0, r4
 1957 00da FFF7FEFF 		bl	prvUnlockQueue
 1958              	.LVL262:
1765:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 86


 1959              		.loc 1 1765 0
 1960 00de FFF7FEFF 		bl	xTaskResumeAll
 1961              	.LVL263:
1767:FreeRTOS\src/queue.c **** 			{
 1962              		.loc 1 1767 0
 1963 00e2 2046     		mov	r0, r4
 1964 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1965              	.LVL264:
 1966 00e8 0028     		cmp	r0, #0
 1967 00ea 8FD0     		beq	.L138
1770:FreeRTOS\src/queue.c **** 			}
 1968              		.loc 1 1770 0
 1969 00ec 0020     		movs	r0, #0
 1970              	.LVL265:
 1971              	.L141:
1778:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 1972              		.loc 1 1778 0
 1973 00ee 04B0     		add	sp, sp, #16
 1974              		.cfi_def_cfa_offset 16
 1975              		@ sp needed
 1976 00f0 70BD     		pop	{r4, r5, r6, pc}
 1977              	.LVL266:
 1978              	.L151:
 1979 00f2 00BF     		.align	2
 1980              	.L150:
 1981 00f4 04ED00E0 		.word	-536810236
 1982              		.cfi_endproc
 1983              	.LFE18:
 1984              		.size	xQueuePeek, .-xQueuePeek
 1985              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1986              		.align	2
 1987              		.global	xQueueReceiveFromISR
 1988              		.thumb
 1989              		.thumb_func
 1990              		.type	xQueueReceiveFromISR, %function
 1991              	xQueueReceiveFromISR:
 1992              	.LFB19:
1782:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 1993              		.loc 1 1782 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              	.LVL267:
 1998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1999              		.cfi_def_cfa_offset 24
 2000              		.cfi_offset 4, -24
 2001              		.cfi_offset 5, -20
 2002              		.cfi_offset 6, -16
 2003              		.cfi_offset 7, -12
 2004              		.cfi_offset 8, -8
 2005              		.cfi_offset 14, -4
 2006              	.LVL268:
 2007              	.LBB42:
 2008              	.LBB43:
 211:.\FreeRTOS\include/portmacro.h **** 	(
 2009              		.loc 2 211 0
 2010              		.syntax unified
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 87


 2011              	@ 211 ".\FreeRTOS\include/portmacro.h" 1
 2012 0004 EFF31186 			mrs r6, basepri											
 2013 0008 4FF0A003 		mov r3, #160												
 2014 000c 83F31188 		msr basepri, r3											
 2015 0010 BFF36F8F 		isb														
 2016 0014 BFF34F8F 		dsb														
 2017              	
 2018              	@ 0 "" 2
 2019              		.thumb
 2020              		.syntax unified
 2021              	.LBE43:
 2022              	.LBE42:
 2023              	.LBB44:
1808:FreeRTOS\src/queue.c **** 
 2024              		.loc 1 1808 0
 2025 0018 846B     		ldr	r4, [r0, #56]
 2026              	.LVL269:
1811:FreeRTOS\src/queue.c **** 		{
 2027              		.loc 1 1811 0
 2028 001a FCB1     		cbz	r4, .L155
 2029 001c 9046     		mov	r8, r2
 2030 001e 0746     		mov	r7, r0
 2031              	.LBB45:
1813:FreeRTOS\src/queue.c **** 
 2032              		.loc 1 1813 0
 2033 0020 90F84450 		ldrb	r5, [r0, #68]	@ zero_extendqisi2
 2034 0024 6DB2     		sxtb	r5, r5
 2035              	.LVL270:
1817:FreeRTOS\src/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2036              		.loc 1 1817 0
 2037 0026 FFF7FEFF 		bl	prvCopyDataFromQueue
 2038              	.LVL271:
1818:FreeRTOS\src/queue.c **** 
 2039              		.loc 1 1818 0
 2040 002a 013C     		subs	r4, r4, #1
 2041              	.LVL272:
 2042 002c BC63     		str	r4, [r7, #56]
1824:FreeRTOS\src/queue.c **** 			{
 2043              		.loc 1 1824 0
 2044 002e B5F1FF3F 		cmp	r5, #-1
 2045 0032 0DD1     		bne	.L154
1826:FreeRTOS\src/queue.c **** 				{
 2046              		.loc 1 1826 0
 2047 0034 3B69     		ldr	r3, [r7, #16]
 2048 0036 9BB1     		cbz	r3, .L156
1828:FreeRTOS\src/queue.c **** 					{
 2049              		.loc 1 1828 0
 2050 0038 07F11000 		add	r0, r7, #16
 2051 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2052              	.LVL273:
 2053 0040 80B1     		cbz	r0, .L157
1832:FreeRTOS\src/queue.c **** 						{
 2054              		.loc 1 1832 0
 2055 0042 B8F1000F 		cmp	r8, #0
 2056 0046 0FD0     		beq	.L158
1834:FreeRTOS\src/queue.c **** 						}
 2057              		.loc 1 1834 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 88


 2058 0048 0120     		movs	r0, #1
 2059 004a C8F80000 		str	r0, [r8]
 2060 004e 0CE0     		b	.L153
 2061              	.L154:
1855:FreeRTOS\src/queue.c **** 			}
 2062              		.loc 1 1855 0
 2063 0050 0135     		adds	r5, r5, #1
 2064              	.LVL274:
 2065 0052 6DB2     		sxtb	r5, r5
 2066              	.LVL275:
 2067 0054 87F84450 		strb	r5, [r7, #68]
1858:FreeRTOS\src/queue.c **** 		}
 2068              		.loc 1 1858 0
 2069 0058 0120     		movs	r0, #1
 2070 005a 06E0     		b	.L153
 2071              	.LVL276:
 2072              	.L155:
 2073              	.LBE45:
1862:FreeRTOS\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2074              		.loc 1 1862 0
 2075 005c 0020     		movs	r0, #0
 2076              	.LVL277:
 2077 005e 04E0     		b	.L153
 2078              	.LVL278:
 2079              	.L156:
 2080              	.LBB46:
1858:FreeRTOS\src/queue.c **** 		}
 2081              		.loc 1 1858 0
 2082 0060 0120     		movs	r0, #1
 2083 0062 02E0     		b	.L153
 2084              	.L157:
 2085 0064 0120     		movs	r0, #1
 2086 0066 00E0     		b	.L153
 2087              	.L158:
 2088 0068 0120     		movs	r0, #1
 2089              	.LVL279:
 2090              	.L153:
 2091              	.LBE46:
 2092              	.LBE44:
 2093              	.LBB47:
 2094              	.LBB48:
 2095              		.loc 2 229 0
 2096              		.syntax unified
 2097              	@ 229 ".\FreeRTOS\include/portmacro.h" 1
 2098 006a 86F31188 			msr basepri, r6	
 2099              	@ 0 "" 2
 2100              	.LVL280:
 2101              		.thumb
 2102              		.syntax unified
 2103              	.LBE48:
 2104              	.LBE47:
1869:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2105              		.loc 1 1869 0
 2106 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2107              		.cfi_endproc
 2108              	.LFE19:
 2109              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 89


 2110 0072 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2111              		.align	2
 2112              		.global	xQueuePeekFromISR
 2113              		.thumb
 2114              		.thumb_func
 2115              		.type	xQueuePeekFromISR, %function
 2116              	xQueuePeekFromISR:
 2117              	.LFB20:
1873:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 2118              		.loc 1 1873 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 0
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
 2122              	.LVL281:
 2123 0000 70B5     		push	{r4, r5, r6, lr}
 2124              		.cfi_def_cfa_offset 16
 2125              		.cfi_offset 4, -16
 2126              		.cfi_offset 5, -12
 2127              		.cfi_offset 6, -8
 2128              		.cfi_offset 14, -4
 2129              	.LVL282:
 2130              	.LBB49:
 2131              	.LBB50:
 211:.\FreeRTOS\include/portmacro.h **** 	(
 2132              		.loc 2 211 0
 2133              		.syntax unified
 2134              	@ 211 ".\FreeRTOS\include/portmacro.h" 1
 2135 0002 EFF31185 			mrs r5, basepri											
 2136 0006 4FF0A003 		mov r3, #160												
 2137 000a 83F31188 		msr basepri, r3											
 2138 000e BFF36F8F 		isb														
 2139 0012 BFF34F8F 		dsb														
 2140              	
 2141              	@ 0 "" 2
 2142              		.thumb
 2143              		.syntax unified
 2144              	.LBE50:
 2145              	.LBE49:
1902:FreeRTOS\src/queue.c **** 		{
 2146              		.loc 1 1902 0
 2147 0016 836B     		ldr	r3, [r0, #56]
 2148 0018 33B1     		cbz	r3, .L162
 2149 001a 0446     		mov	r4, r0
1908:FreeRTOS\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2150              		.loc 1 1908 0
 2151 001c C668     		ldr	r6, [r0, #12]
 2152              	.LVL283:
1909:FreeRTOS\src/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2153              		.loc 1 1909 0
 2154 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 2155              	.LVL284:
1910:FreeRTOS\src/queue.c **** 
 2156              		.loc 1 1910 0
 2157 0022 E660     		str	r6, [r4, #12]
 2158              	.LVL285:
1912:FreeRTOS\src/queue.c **** 		}
 2159              		.loc 1 1912 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 90


 2160 0024 0120     		movs	r0, #1
 2161 0026 00E0     		b	.L161
 2162              	.LVL286:
 2163              	.L162:
1916:FreeRTOS\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2164              		.loc 1 1916 0
 2165 0028 0020     		movs	r0, #0
 2166              	.LVL287:
 2167              	.L161:
 2168              	.LBB51:
 2169              	.LBB52:
 2170              		.loc 2 229 0
 2171              		.syntax unified
 2172              	@ 229 ".\FreeRTOS\include/portmacro.h" 1
 2173 002a 85F31188 			msr basepri, r5	
 2174              	@ 0 "" 2
 2175              	.LVL288:
 2176              		.thumb
 2177              		.syntax unified
 2178              	.LBE52:
 2179              	.LBE51:
1923:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2180              		.loc 1 1923 0
 2181 002e 70BD     		pop	{r4, r5, r6, pc}
 2182              		.cfi_endproc
 2183              	.LFE20:
 2184              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2185              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2186              		.align	2
 2187              		.global	uxQueueMessagesWaiting
 2188              		.thumb
 2189              		.thumb_func
 2190              		.type	uxQueueMessagesWaiting, %function
 2191              	uxQueueMessagesWaiting:
 2192              	.LFB21:
1927:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
 2193              		.loc 1 1927 0
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 0
 2196              		@ frame_needed = 0, uses_anonymous_args = 0
 2197              	.LVL289:
 2198 0000 10B5     		push	{r4, lr}
 2199              		.cfi_def_cfa_offset 8
 2200              		.cfi_offset 4, -8
 2201              		.cfi_offset 14, -4
 2202 0002 0446     		mov	r4, r0
1932:FreeRTOS\src/queue.c **** 	{
 2203              		.loc 1 1932 0
 2204 0004 FFF7FEFF 		bl	vPortEnterCritical
 2205              	.LVL290:
1934:FreeRTOS\src/queue.c **** 	}
 2206              		.loc 1 1934 0
 2207 0008 A46B     		ldr	r4, [r4, #56]
 2208              	.LVL291:
1936:FreeRTOS\src/queue.c **** 
 2209              		.loc 1 1936 0
 2210 000a FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 91


 2211              	.LVL292:
1939:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2212              		.loc 1 1939 0
 2213 000e 2046     		mov	r0, r4
 2214 0010 10BD     		pop	{r4, pc}
 2215              		.cfi_endproc
 2216              	.LFE21:
 2217              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2218 0012 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2219              		.align	2
 2220              		.global	uxQueueSpacesAvailable
 2221              		.thumb
 2222              		.thumb_func
 2223              		.type	uxQueueSpacesAvailable, %function
 2224              	uxQueueSpacesAvailable:
 2225              	.LFB22:
1943:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
 2226              		.loc 1 1943 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              	.LVL293:
 2231 0000 10B5     		push	{r4, lr}
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 4, -8
 2234              		.cfi_offset 14, -4
 2235 0002 0446     		mov	r4, r0
 2236              	.LVL294:
1949:FreeRTOS\src/queue.c **** 	{
 2237              		.loc 1 1949 0
 2238 0004 FFF7FEFF 		bl	vPortEnterCritical
 2239              	.LVL295:
1951:FreeRTOS\src/queue.c **** 	}
 2240              		.loc 1 1951 0
 2241 0008 E36B     		ldr	r3, [r4, #60]
 2242 000a A46B     		ldr	r4, [r4, #56]
 2243              	.LVL296:
 2244 000c 1C1B     		subs	r4, r3, r4
 2245              	.LVL297:
1953:FreeRTOS\src/queue.c **** 
 2246              		.loc 1 1953 0
 2247 000e FFF7FEFF 		bl	vPortExitCritical
 2248              	.LVL298:
1956:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2249              		.loc 1 1956 0
 2250 0012 2046     		mov	r0, r4
 2251 0014 10BD     		pop	{r4, pc}
 2252              		.cfi_endproc
 2253              	.LFE22:
 2254              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2255 0016 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2256              		.align	2
 2257              		.global	uxQueueMessagesWaitingFromISR
 2258              		.thumb
 2259              		.thumb_func
 2260              		.type	uxQueueMessagesWaitingFromISR, %function
 2261              	uxQueueMessagesWaitingFromISR:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 92


 2262              	.LFB23:
1960:FreeRTOS\src/queue.c **** UBaseType_t uxReturn;
 2263              		.loc 1 1960 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              		@ link register save eliminated.
 2268              	.LVL299:
1965:FreeRTOS\src/queue.c **** 
 2269              		.loc 1 1965 0
 2270 0000 806B     		ldr	r0, [r0, #56]
 2271              	.LVL300:
1968:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2272              		.loc 1 1968 0
 2273 0002 7047     		bx	lr
 2274              		.cfi_endproc
 2275              	.LFE23:
 2276              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 2277              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2278              		.align	2
 2279              		.global	xQueueIsQueueEmptyFromISR
 2280              		.thumb
 2281              		.thumb_func
 2282              		.type	xQueueIsQueueEmptyFromISR, %function
 2283              	xQueueIsQueueEmptyFromISR:
 2284              	.LFB30:
2309:FreeRTOS\src/queue.c **** BaseType_t xReturn;
 2285              		.loc 1 2309 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290              	.LVL301:
2314:FreeRTOS\src/queue.c **** 	{
 2291              		.loc 1 2314 0
 2292 0000 836B     		ldr	r3, [r0, #56]
 2293 0002 0BB9     		cbnz	r3, .L171
2316:FreeRTOS\src/queue.c **** 	}
 2294              		.loc 1 2316 0
 2295 0004 0120     		movs	r0, #1
 2296              	.LVL302:
 2297 0006 7047     		bx	lr
 2298              	.LVL303:
 2299              	.L171:
2320:FreeRTOS\src/queue.c **** 	}
 2300              		.loc 1 2320 0
 2301 0008 0020     		movs	r0, #0
 2302              	.LVL304:
2324:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
 2303              		.loc 1 2324 0
 2304 000a 7047     		bx	lr
 2305              		.cfi_endproc
 2306              	.LFE30:
 2307              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2308              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2309              		.align	2
 2310              		.global	xQueueIsQueueFullFromISR
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 93


 2311              		.thumb
 2312              		.thumb_func
 2313              		.type	xQueueIsQueueFullFromISR, %function
 2314              	xQueueIsQueueFullFromISR:
 2315              	.LFB32:
2346:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2347:FreeRTOS\src/queue.c **** 
2348:FreeRTOS\src/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2349:FreeRTOS\src/queue.c **** {
 2316              		.loc 1 2349 0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
 2321              	.LVL305:
2350:FreeRTOS\src/queue.c **** BaseType_t xReturn;
2351:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
2352:FreeRTOS\src/queue.c **** 
2353:FreeRTOS\src/queue.c **** 	configASSERT( pxQueue );
2354:FreeRTOS\src/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2322              		.loc 1 2354 0
 2323 0000 826B     		ldr	r2, [r0, #56]
 2324 0002 C36B     		ldr	r3, [r0, #60]
 2325 0004 9A42     		cmp	r2, r3
 2326 0006 01D1     		bne	.L174
2355:FreeRTOS\src/queue.c **** 	{
2356:FreeRTOS\src/queue.c **** 		xReturn = pdTRUE;
 2327              		.loc 1 2356 0
 2328 0008 0120     		movs	r0, #1
 2329              	.LVL306:
 2330 000a 7047     		bx	lr
 2331              	.LVL307:
 2332              	.L174:
2357:FreeRTOS\src/queue.c **** 	}
2358:FreeRTOS\src/queue.c **** 	else
2359:FreeRTOS\src/queue.c **** 	{
2360:FreeRTOS\src/queue.c **** 		xReturn = pdFALSE;
 2333              		.loc 1 2360 0
 2334 000c 0020     		movs	r0, #0
 2335              	.LVL308:
2361:FreeRTOS\src/queue.c **** 	}
2362:FreeRTOS\src/queue.c **** 
2363:FreeRTOS\src/queue.c **** 	return xReturn;
2364:FreeRTOS\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2336              		.loc 1 2364 0
 2337 000e 7047     		bx	lr
 2338              		.cfi_endproc
 2339              	.LFE32:
 2340              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2341              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2342              		.align	2
 2343              		.global	vQueueAddToRegistry
 2344              		.thumb
 2345              		.thumb_func
 2346              		.type	vQueueAddToRegistry, %function
 2347              	vQueueAddToRegistry:
 2348              	.LFB33:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 94


2365:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2366:FreeRTOS\src/queue.c **** 
2367:FreeRTOS\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2368:FreeRTOS\src/queue.c **** 
2369:FreeRTOS\src/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2370:FreeRTOS\src/queue.c **** 	{
2371:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
2372:FreeRTOS\src/queue.c **** 	Queue_t * const pxQueue = xQueue;
2373:FreeRTOS\src/queue.c **** 
2374:FreeRTOS\src/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2375:FreeRTOS\src/queue.c **** 		is required to prevent an interrupt removing something from the queue
2376:FreeRTOS\src/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2377:FreeRTOS\src/queue.c **** 		portDISABLE_INTERRUPTS();
2378:FreeRTOS\src/queue.c **** 		{
2379:FreeRTOS\src/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2380:FreeRTOS\src/queue.c **** 			{
2381:FreeRTOS\src/queue.c **** 				/* The queue is full - do we want to block or just leave without
2382:FreeRTOS\src/queue.c **** 				posting? */
2383:FreeRTOS\src/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2384:FreeRTOS\src/queue.c **** 				{
2385:FreeRTOS\src/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2386:FreeRTOS\src/queue.c **** 					return indicating that we need to block. */
2387:FreeRTOS\src/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2388:FreeRTOS\src/queue.c **** 					portENABLE_INTERRUPTS();
2389:FreeRTOS\src/queue.c **** 					return errQUEUE_BLOCKED;
2390:FreeRTOS\src/queue.c **** 				}
2391:FreeRTOS\src/queue.c **** 				else
2392:FreeRTOS\src/queue.c **** 				{
2393:FreeRTOS\src/queue.c **** 					portENABLE_INTERRUPTS();
2394:FreeRTOS\src/queue.c **** 					return errQUEUE_FULL;
2395:FreeRTOS\src/queue.c **** 				}
2396:FreeRTOS\src/queue.c **** 			}
2397:FreeRTOS\src/queue.c **** 		}
2398:FreeRTOS\src/queue.c **** 		portENABLE_INTERRUPTS();
2399:FreeRTOS\src/queue.c **** 
2400:FreeRTOS\src/queue.c **** 		portDISABLE_INTERRUPTS();
2401:FreeRTOS\src/queue.c **** 		{
2402:FreeRTOS\src/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2403:FreeRTOS\src/queue.c **** 			{
2404:FreeRTOS\src/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2405:FreeRTOS\src/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2406:FreeRTOS\src/queue.c **** 				xReturn = pdPASS;
2407:FreeRTOS\src/queue.c **** 
2408:FreeRTOS\src/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2409:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2410:FreeRTOS\src/queue.c **** 				{
2411:FreeRTOS\src/queue.c **** 					/* In this instance the co-routine could be placed directly
2412:FreeRTOS\src/queue.c **** 					into the ready list as we are within a critical section.
2413:FreeRTOS\src/queue.c **** 					Instead the same pending ready list mechanism is used as if
2414:FreeRTOS\src/queue.c **** 					the event were caused from within an interrupt. */
2415:FreeRTOS\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2416:FreeRTOS\src/queue.c **** 					{
2417:FreeRTOS\src/queue.c **** 						/* The co-routine waiting has a higher priority so record
2418:FreeRTOS\src/queue.c **** 						that a yield might be appropriate. */
2419:FreeRTOS\src/queue.c **** 						xReturn = errQUEUE_YIELD;
2420:FreeRTOS\src/queue.c **** 					}
2421:FreeRTOS\src/queue.c **** 					else
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 95


2422:FreeRTOS\src/queue.c **** 					{
2423:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2424:FreeRTOS\src/queue.c **** 					}
2425:FreeRTOS\src/queue.c **** 				}
2426:FreeRTOS\src/queue.c **** 				else
2427:FreeRTOS\src/queue.c **** 				{
2428:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2429:FreeRTOS\src/queue.c **** 				}
2430:FreeRTOS\src/queue.c **** 			}
2431:FreeRTOS\src/queue.c **** 			else
2432:FreeRTOS\src/queue.c **** 			{
2433:FreeRTOS\src/queue.c **** 				xReturn = errQUEUE_FULL;
2434:FreeRTOS\src/queue.c **** 			}
2435:FreeRTOS\src/queue.c **** 		}
2436:FreeRTOS\src/queue.c **** 		portENABLE_INTERRUPTS();
2437:FreeRTOS\src/queue.c **** 
2438:FreeRTOS\src/queue.c **** 		return xReturn;
2439:FreeRTOS\src/queue.c **** 	}
2440:FreeRTOS\src/queue.c **** 
2441:FreeRTOS\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
2442:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2443:FreeRTOS\src/queue.c **** 
2444:FreeRTOS\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2445:FreeRTOS\src/queue.c **** 
2446:FreeRTOS\src/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2447:FreeRTOS\src/queue.c **** 	{
2448:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
2449:FreeRTOS\src/queue.c **** 	Queue_t * const pxQueue = xQueue;
2450:FreeRTOS\src/queue.c **** 
2451:FreeRTOS\src/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2452:FreeRTOS\src/queue.c **** 		is required to prevent an interrupt adding something to the queue
2453:FreeRTOS\src/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2454:FreeRTOS\src/queue.c **** 		portDISABLE_INTERRUPTS();
2455:FreeRTOS\src/queue.c **** 		{
2456:FreeRTOS\src/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2457:FreeRTOS\src/queue.c **** 			{
2458:FreeRTOS\src/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2459:FreeRTOS\src/queue.c **** 				leave with nothing? */
2460:FreeRTOS\src/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2461:FreeRTOS\src/queue.c **** 				{
2462:FreeRTOS\src/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2463:FreeRTOS\src/queue.c **** 					indicating that we need to block. */
2464:FreeRTOS\src/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2465:FreeRTOS\src/queue.c **** 					portENABLE_INTERRUPTS();
2466:FreeRTOS\src/queue.c **** 					return errQUEUE_BLOCKED;
2467:FreeRTOS\src/queue.c **** 				}
2468:FreeRTOS\src/queue.c **** 				else
2469:FreeRTOS\src/queue.c **** 				{
2470:FreeRTOS\src/queue.c **** 					portENABLE_INTERRUPTS();
2471:FreeRTOS\src/queue.c **** 					return errQUEUE_FULL;
2472:FreeRTOS\src/queue.c **** 				}
2473:FreeRTOS\src/queue.c **** 			}
2474:FreeRTOS\src/queue.c **** 			else
2475:FreeRTOS\src/queue.c **** 			{
2476:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2477:FreeRTOS\src/queue.c **** 			}
2478:FreeRTOS\src/queue.c **** 		}
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 96


2479:FreeRTOS\src/queue.c **** 		portENABLE_INTERRUPTS();
2480:FreeRTOS\src/queue.c **** 
2481:FreeRTOS\src/queue.c **** 		portDISABLE_INTERRUPTS();
2482:FreeRTOS\src/queue.c **** 		{
2483:FreeRTOS\src/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2484:FreeRTOS\src/queue.c **** 			{
2485:FreeRTOS\src/queue.c **** 				/* Data is available from the queue. */
2486:FreeRTOS\src/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2487:FreeRTOS\src/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2488:FreeRTOS\src/queue.c **** 				{
2489:FreeRTOS\src/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2490:FreeRTOS\src/queue.c **** 				}
2491:FreeRTOS\src/queue.c **** 				else
2492:FreeRTOS\src/queue.c **** 				{
2493:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2494:FreeRTOS\src/queue.c **** 				}
2495:FreeRTOS\src/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2496:FreeRTOS\src/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2497:FreeRTOS\src/queue.c **** 
2498:FreeRTOS\src/queue.c **** 				xReturn = pdPASS;
2499:FreeRTOS\src/queue.c **** 
2500:FreeRTOS\src/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2501:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2502:FreeRTOS\src/queue.c **** 				{
2503:FreeRTOS\src/queue.c **** 					/* In this instance the co-routine could be placed directly
2504:FreeRTOS\src/queue.c **** 					into the ready list as we are within a critical section.
2505:FreeRTOS\src/queue.c **** 					Instead the same pending ready list mechanism is used as if
2506:FreeRTOS\src/queue.c **** 					the event were caused from within an interrupt. */
2507:FreeRTOS\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2508:FreeRTOS\src/queue.c **** 					{
2509:FreeRTOS\src/queue.c **** 						xReturn = errQUEUE_YIELD;
2510:FreeRTOS\src/queue.c **** 					}
2511:FreeRTOS\src/queue.c **** 					else
2512:FreeRTOS\src/queue.c **** 					{
2513:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2514:FreeRTOS\src/queue.c **** 					}
2515:FreeRTOS\src/queue.c **** 				}
2516:FreeRTOS\src/queue.c **** 				else
2517:FreeRTOS\src/queue.c **** 				{
2518:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2519:FreeRTOS\src/queue.c **** 				}
2520:FreeRTOS\src/queue.c **** 			}
2521:FreeRTOS\src/queue.c **** 			else
2522:FreeRTOS\src/queue.c **** 			{
2523:FreeRTOS\src/queue.c **** 				xReturn = pdFAIL;
2524:FreeRTOS\src/queue.c **** 			}
2525:FreeRTOS\src/queue.c **** 		}
2526:FreeRTOS\src/queue.c **** 		portENABLE_INTERRUPTS();
2527:FreeRTOS\src/queue.c **** 
2528:FreeRTOS\src/queue.c **** 		return xReturn;
2529:FreeRTOS\src/queue.c **** 	}
2530:FreeRTOS\src/queue.c **** 
2531:FreeRTOS\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
2532:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2533:FreeRTOS\src/queue.c **** 
2534:FreeRTOS\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2535:FreeRTOS\src/queue.c **** 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 97


2536:FreeRTOS\src/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2537:FreeRTOS\src/queue.c **** 	{
2538:FreeRTOS\src/queue.c **** 	Queue_t * const pxQueue = xQueue;
2539:FreeRTOS\src/queue.c **** 
2540:FreeRTOS\src/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2541:FreeRTOS\src/queue.c **** 		exit without doing anything. */
2542:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2543:FreeRTOS\src/queue.c **** 		{
2544:FreeRTOS\src/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2545:FreeRTOS\src/queue.c **** 
2546:FreeRTOS\src/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2547:FreeRTOS\src/queue.c **** 			co-routine has not already been woken. */
2548:FreeRTOS\src/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2549:FreeRTOS\src/queue.c **** 			{
2550:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2551:FreeRTOS\src/queue.c **** 				{
2552:FreeRTOS\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2553:FreeRTOS\src/queue.c **** 					{
2554:FreeRTOS\src/queue.c **** 						return pdTRUE;
2555:FreeRTOS\src/queue.c **** 					}
2556:FreeRTOS\src/queue.c **** 					else
2557:FreeRTOS\src/queue.c **** 					{
2558:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2559:FreeRTOS\src/queue.c **** 					}
2560:FreeRTOS\src/queue.c **** 				}
2561:FreeRTOS\src/queue.c **** 				else
2562:FreeRTOS\src/queue.c **** 				{
2563:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2564:FreeRTOS\src/queue.c **** 				}
2565:FreeRTOS\src/queue.c **** 			}
2566:FreeRTOS\src/queue.c **** 			else
2567:FreeRTOS\src/queue.c **** 			{
2568:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:FreeRTOS\src/queue.c **** 			}
2570:FreeRTOS\src/queue.c **** 		}
2571:FreeRTOS\src/queue.c **** 		else
2572:FreeRTOS\src/queue.c **** 		{
2573:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2574:FreeRTOS\src/queue.c **** 		}
2575:FreeRTOS\src/queue.c **** 
2576:FreeRTOS\src/queue.c **** 		return xCoRoutinePreviouslyWoken;
2577:FreeRTOS\src/queue.c **** 	}
2578:FreeRTOS\src/queue.c **** 
2579:FreeRTOS\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
2580:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2581:FreeRTOS\src/queue.c **** 
2582:FreeRTOS\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2583:FreeRTOS\src/queue.c **** 
2584:FreeRTOS\src/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2585:FreeRTOS\src/queue.c **** 	{
2586:FreeRTOS\src/queue.c **** 	BaseType_t xReturn;
2587:FreeRTOS\src/queue.c **** 	Queue_t * const pxQueue = xQueue;
2588:FreeRTOS\src/queue.c **** 
2589:FreeRTOS\src/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2590:FreeRTOS\src/queue.c **** 		not then just leave without doing anything. */
2591:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2592:FreeRTOS\src/queue.c **** 		{
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 98


2593:FreeRTOS\src/queue.c **** 			/* Copy the data from the queue. */
2594:FreeRTOS\src/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2595:FreeRTOS\src/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2596:FreeRTOS\src/queue.c **** 			{
2597:FreeRTOS\src/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2598:FreeRTOS\src/queue.c **** 			}
2599:FreeRTOS\src/queue.c **** 			else
2600:FreeRTOS\src/queue.c **** 			{
2601:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2602:FreeRTOS\src/queue.c **** 			}
2603:FreeRTOS\src/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2604:FreeRTOS\src/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2605:FreeRTOS\src/queue.c **** 
2606:FreeRTOS\src/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2607:FreeRTOS\src/queue.c **** 			{
2608:FreeRTOS\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2609:FreeRTOS\src/queue.c **** 				{
2610:FreeRTOS\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2611:FreeRTOS\src/queue.c **** 					{
2612:FreeRTOS\src/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2613:FreeRTOS\src/queue.c **** 					}
2614:FreeRTOS\src/queue.c **** 					else
2615:FreeRTOS\src/queue.c **** 					{
2616:FreeRTOS\src/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2617:FreeRTOS\src/queue.c **** 					}
2618:FreeRTOS\src/queue.c **** 				}
2619:FreeRTOS\src/queue.c **** 				else
2620:FreeRTOS\src/queue.c **** 				{
2621:FreeRTOS\src/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2622:FreeRTOS\src/queue.c **** 				}
2623:FreeRTOS\src/queue.c **** 			}
2624:FreeRTOS\src/queue.c **** 			else
2625:FreeRTOS\src/queue.c **** 			{
2626:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2627:FreeRTOS\src/queue.c **** 			}
2628:FreeRTOS\src/queue.c **** 
2629:FreeRTOS\src/queue.c **** 			xReturn = pdPASS;
2630:FreeRTOS\src/queue.c **** 		}
2631:FreeRTOS\src/queue.c **** 		else
2632:FreeRTOS\src/queue.c **** 		{
2633:FreeRTOS\src/queue.c **** 			xReturn = pdFAIL;
2634:FreeRTOS\src/queue.c **** 		}
2635:FreeRTOS\src/queue.c **** 
2636:FreeRTOS\src/queue.c **** 		return xReturn;
2637:FreeRTOS\src/queue.c **** 	}
2638:FreeRTOS\src/queue.c **** 
2639:FreeRTOS\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
2640:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2641:FreeRTOS\src/queue.c **** 
2642:FreeRTOS\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2643:FreeRTOS\src/queue.c **** 
2644:FreeRTOS\src/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2645:FreeRTOS\src/queue.c **** 	{
 2349              		.loc 1 2645 0
 2350              		.cfi_startproc
 2351              		@ args = 0, pretend = 0, frame = 0
 2352              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 99


 2353              		@ link register save eliminated.
 2354              	.LVL309:
2646:FreeRTOS\src/queue.c **** 	UBaseType_t ux;
2647:FreeRTOS\src/queue.c **** 
2648:FreeRTOS\src/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2649:FreeRTOS\src/queue.c **** 		a free slot. */
2650:FreeRTOS\src/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2355              		.loc 1 2650 0
 2356 0000 0023     		movs	r3, #0
 2357 0002 0BE0     		b	.L176
 2358              	.LVL310:
 2359              	.L179:
2651:FreeRTOS\src/queue.c **** 		{
2652:FreeRTOS\src/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2360              		.loc 1 2652 0
 2361 0004 074A     		ldr	r2, .L180
 2362 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2363 000a 32B9     		cbnz	r2, .L177
2653:FreeRTOS\src/queue.c **** 			{
2654:FreeRTOS\src/queue.c **** 				/* Store the information on this queue. */
2655:FreeRTOS\src/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2364              		.loc 1 2655 0
 2365 000c 054A     		ldr	r2, .L180
 2366 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2656:FreeRTOS\src/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2367              		.loc 1 2656 0
 2368 0012 02EBC303 		add	r3, r2, r3, lsl #3
 2369              	.LVL311:
 2370 0016 5860     		str	r0, [r3, #4]
2657:FreeRTOS\src/queue.c **** 
2658:FreeRTOS\src/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2659:FreeRTOS\src/queue.c **** 				break;
 2371              		.loc 1 2659 0
 2372 0018 7047     		bx	lr
 2373              	.LVL312:
 2374              	.L177:
2650:FreeRTOS\src/queue.c **** 		{
 2375              		.loc 1 2650 0 discriminator 2
 2376 001a 0133     		adds	r3, r3, #1
 2377              	.LVL313:
 2378              	.L176:
2650:FreeRTOS\src/queue.c **** 		{
 2379              		.loc 1 2650 0 is_stmt 0 discriminator 1
 2380 001c 092B     		cmp	r3, #9
 2381 001e F1D9     		bls	.L179
 2382 0020 7047     		bx	lr
 2383              	.L181:
 2384 0022 00BF     		.align	2
 2385              	.L180:
 2386 0024 00000000 		.word	xQueueRegistry
 2387              		.cfi_endproc
 2388              	.LFE33:
 2389              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2390              		.section	.text.pcQueueGetName,"ax",%progbits
 2391              		.align	2
 2392              		.global	pcQueueGetName
 2393              		.thumb
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 100


 2394              		.thumb_func
 2395              		.type	pcQueueGetName, %function
 2396              	pcQueueGetName:
 2397              	.LFB34:
2660:FreeRTOS\src/queue.c **** 			}
2661:FreeRTOS\src/queue.c **** 			else
2662:FreeRTOS\src/queue.c **** 			{
2663:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2664:FreeRTOS\src/queue.c **** 			}
2665:FreeRTOS\src/queue.c **** 		}
2666:FreeRTOS\src/queue.c **** 	}
2667:FreeRTOS\src/queue.c **** 
2668:FreeRTOS\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2669:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2670:FreeRTOS\src/queue.c **** 
2671:FreeRTOS\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2672:FreeRTOS\src/queue.c **** 
2673:FreeRTOS\src/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2674:FreeRTOS\src/queue.c **** 	{
 2398              		.loc 1 2674 0 is_stmt 1
 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 0
 2401              		@ frame_needed = 0, uses_anonymous_args = 0
 2402              		@ link register save eliminated.
 2403              	.LVL314:
2675:FreeRTOS\src/queue.c **** 	UBaseType_t ux;
2676:FreeRTOS\src/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2677:FreeRTOS\src/queue.c **** 
2678:FreeRTOS\src/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2679:FreeRTOS\src/queue.c **** 		removing entries from the registry while it is being searched. */
2680:FreeRTOS\src/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2404              		.loc 1 2680 0
 2405 0000 0023     		movs	r3, #0
 2406 0002 0AE0     		b	.L183
 2407              	.LVL315:
 2408              	.L186:
2681:FreeRTOS\src/queue.c **** 		{
2682:FreeRTOS\src/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2409              		.loc 1 2682 0
 2410 0004 074A     		ldr	r2, .L187
 2411 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2412 000a 5268     		ldr	r2, [r2, #4]
 2413 000c 8242     		cmp	r2, r0
 2414 000e 03D1     		bne	.L184
2683:FreeRTOS\src/queue.c **** 			{
2684:FreeRTOS\src/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2415              		.loc 1 2684 0
 2416 0010 044A     		ldr	r2, .L187
 2417 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2418              	.LVL316:
2685:FreeRTOS\src/queue.c **** 				break;
 2419              		.loc 1 2685 0
 2420 0016 7047     		bx	lr
 2421              	.LVL317:
 2422              	.L184:
2680:FreeRTOS\src/queue.c **** 		{
 2423              		.loc 1 2680 0 discriminator 2
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 101


 2424 0018 0133     		adds	r3, r3, #1
 2425              	.LVL318:
 2426              	.L183:
2680:FreeRTOS\src/queue.c **** 		{
 2427              		.loc 1 2680 0 is_stmt 0 discriminator 1
 2428 001a 092B     		cmp	r3, #9
 2429 001c F2D9     		bls	.L186
2676:FreeRTOS\src/queue.c **** 
 2430              		.loc 1 2676 0 is_stmt 1
 2431 001e 0020     		movs	r0, #0
 2432              	.LVL319:
2686:FreeRTOS\src/queue.c **** 			}
2687:FreeRTOS\src/queue.c **** 			else
2688:FreeRTOS\src/queue.c **** 			{
2689:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:FreeRTOS\src/queue.c **** 			}
2691:FreeRTOS\src/queue.c **** 		}
2692:FreeRTOS\src/queue.c **** 
2693:FreeRTOS\src/queue.c **** 		return pcReturn;
2694:FreeRTOS\src/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 2433              		.loc 1 2694 0
 2434 0020 7047     		bx	lr
 2435              	.L188:
 2436 0022 00BF     		.align	2
 2437              	.L187:
 2438 0024 00000000 		.word	xQueueRegistry
 2439              		.cfi_endproc
 2440              	.LFE34:
 2441              		.size	pcQueueGetName, .-pcQueueGetName
 2442              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2443              		.align	2
 2444              		.global	vQueueUnregisterQueue
 2445              		.thumb
 2446              		.thumb_func
 2447              		.type	vQueueUnregisterQueue, %function
 2448              	vQueueUnregisterQueue:
 2449              	.LFB35:
2695:FreeRTOS\src/queue.c **** 
2696:FreeRTOS\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2697:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2698:FreeRTOS\src/queue.c **** 
2699:FreeRTOS\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2700:FreeRTOS\src/queue.c **** 
2701:FreeRTOS\src/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2702:FreeRTOS\src/queue.c **** 	{
 2450              		.loc 1 2702 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              		@ link register save eliminated.
 2455              	.LVL320:
2703:FreeRTOS\src/queue.c **** 	UBaseType_t ux;
2704:FreeRTOS\src/queue.c **** 
2705:FreeRTOS\src/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2706:FreeRTOS\src/queue.c **** 		registry. */
2707:FreeRTOS\src/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2456              		.loc 1 2707 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 102


 2457 0000 0023     		movs	r3, #0
 2458 0002 0EE0     		b	.L190
 2459              	.LVL321:
 2460              	.L193:
2708:FreeRTOS\src/queue.c **** 		{
2709:FreeRTOS\src/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2461              		.loc 1 2709 0
 2462 0004 084A     		ldr	r2, .L194
 2463 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2464 000a 5268     		ldr	r2, [r2, #4]
 2465 000c 8242     		cmp	r2, r0
 2466 000e 07D1     		bne	.L191
2710:FreeRTOS\src/queue.c **** 			{
2711:FreeRTOS\src/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2712:FreeRTOS\src/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2467              		.loc 1 2712 0
 2468 0010 054A     		ldr	r2, .L194
 2469 0012 0021     		movs	r1, #0
 2470 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2713:FreeRTOS\src/queue.c **** 
2714:FreeRTOS\src/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2715:FreeRTOS\src/queue.c **** 				appear in the registry twice if it is added, removed, then
2716:FreeRTOS\src/queue.c **** 				added again. */
2717:FreeRTOS\src/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2471              		.loc 1 2717 0
 2472 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2473              	.LVL322:
 2474 001c 5960     		str	r1, [r3, #4]
2718:FreeRTOS\src/queue.c **** 				break;
 2475              		.loc 1 2718 0
 2476 001e 7047     		bx	lr
 2477              	.LVL323:
 2478              	.L191:
2707:FreeRTOS\src/queue.c **** 		{
 2479              		.loc 1 2707 0 discriminator 2
 2480 0020 0133     		adds	r3, r3, #1
 2481              	.LVL324:
 2482              	.L190:
2707:FreeRTOS\src/queue.c **** 		{
 2483              		.loc 1 2707 0 is_stmt 0 discriminator 1
 2484 0022 092B     		cmp	r3, #9
 2485 0024 EED9     		bls	.L193
 2486 0026 7047     		bx	lr
 2487              	.L195:
 2488              		.align	2
 2489              	.L194:
 2490 0028 00000000 		.word	xQueueRegistry
 2491              		.cfi_endproc
 2492              	.LFE35:
 2493              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2494              		.section	.text.vQueueDelete,"ax",%progbits
 2495              		.align	2
 2496              		.global	vQueueDelete
 2497              		.thumb
 2498              		.thumb_func
 2499              		.type	vQueueDelete, %function
 2500              	vQueueDelete:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 103


 2501              	.LFB24:
1972:FreeRTOS\src/queue.c **** Queue_t * const pxQueue = xQueue;
 2502              		.loc 1 1972 0 is_stmt 1
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
 2506              	.LVL325:
 2507 0000 10B5     		push	{r4, lr}
 2508              		.cfi_def_cfa_offset 8
 2509              		.cfi_offset 4, -8
 2510              		.cfi_offset 14, -4
 2511 0002 0446     		mov	r4, r0
 2512              	.LVL326:
1980:FreeRTOS\src/queue.c **** 	}
 2513              		.loc 1 1980 0
 2514 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2515              	.LVL327:
1988:FreeRTOS\src/queue.c **** 	}
 2516              		.loc 1 1988 0
 2517 0008 2046     		mov	r0, r4
 2518 000a FFF7FEFF 		bl	vPortFree
 2519              	.LVL328:
 2520 000e 10BD     		pop	{r4, pc}
 2521              		.cfi_endproc
 2522              	.LFE24:
 2523              		.size	vQueueDelete, .-vQueueDelete
 2524              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 2525              		.align	2
 2526              		.global	vQueueWaitForMessageRestricted
 2527              		.thumb
 2528              		.thumb_func
 2529              		.type	vQueueWaitForMessageRestricted, %function
 2530              	vQueueWaitForMessageRestricted:
 2531              	.LFB36:
2719:FreeRTOS\src/queue.c **** 			}
2720:FreeRTOS\src/queue.c **** 			else
2721:FreeRTOS\src/queue.c **** 			{
2722:FreeRTOS\src/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2723:FreeRTOS\src/queue.c **** 			}
2724:FreeRTOS\src/queue.c **** 		}
2725:FreeRTOS\src/queue.c **** 
2726:FreeRTOS\src/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2727:FreeRTOS\src/queue.c **** 
2728:FreeRTOS\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2729:FreeRTOS\src/queue.c **** /*-----------------------------------------------------------*/
2730:FreeRTOS\src/queue.c **** 
2731:FreeRTOS\src/queue.c **** #if ( configUSE_TIMERS == 1 )
2732:FreeRTOS\src/queue.c **** 
2733:FreeRTOS\src/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2734:FreeRTOS\src/queue.c **** 	{
 2532              		.loc 1 2734 0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              	.LVL329:
 2537 0000 70B5     		push	{r4, r5, r6, lr}
 2538              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 104


 2539              		.cfi_offset 4, -16
 2540              		.cfi_offset 5, -12
 2541              		.cfi_offset 6, -8
 2542              		.cfi_offset 14, -4
 2543 0002 0446     		mov	r4, r0
 2544 0004 0D46     		mov	r5, r1
 2545 0006 1646     		mov	r6, r2
 2546              	.LVL330:
2735:FreeRTOS\src/queue.c **** 	Queue_t * const pxQueue = xQueue;
2736:FreeRTOS\src/queue.c **** 
2737:FreeRTOS\src/queue.c **** 		/* This function should not be called by application code hence the
2738:FreeRTOS\src/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2739:FreeRTOS\src/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2740:FreeRTOS\src/queue.c **** 		It can result in vListInsert() being called on a list that can only
2741:FreeRTOS\src/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2742:FreeRTOS\src/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2743:FreeRTOS\src/queue.c **** 		section. */
2744:FreeRTOS\src/queue.c **** 
2745:FreeRTOS\src/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2746:FreeRTOS\src/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2747:FreeRTOS\src/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2748:FreeRTOS\src/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2749:FreeRTOS\src/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2750:FreeRTOS\src/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2751:FreeRTOS\src/queue.c **** 		prvLockQueue( pxQueue );
 2547              		.loc 1 2751 0
 2548 0008 FFF7FEFF 		bl	vPortEnterCritical
 2549              	.LVL331:
 2550 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2551 0010 5BB2     		sxtb	r3, r3
 2552 0012 B3F1FF3F 		cmp	r3, #-1
 2553 0016 02D1     		bne	.L199
 2554              		.loc 1 2751 0 is_stmt 0 discriminator 1
 2555 0018 0023     		movs	r3, #0
 2556 001a 84F84430 		strb	r3, [r4, #68]
 2557              	.L199:
 2558              		.loc 1 2751 0 discriminator 3
 2559 001e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2560 0022 5BB2     		sxtb	r3, r3
 2561 0024 B3F1FF3F 		cmp	r3, #-1
 2562 0028 02D1     		bne	.L200
 2563              		.loc 1 2751 0 discriminator 4
 2564 002a 0023     		movs	r3, #0
 2565 002c 84F84530 		strb	r3, [r4, #69]
 2566              	.L200:
 2567              		.loc 1 2751 0 discriminator 6
 2568 0030 FFF7FEFF 		bl	vPortExitCritical
 2569              	.LVL332:
2752:FreeRTOS\src/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 2570              		.loc 1 2752 0 is_stmt 1 discriminator 6
 2571 0034 A36B     		ldr	r3, [r4, #56]
 2572 0036 2BB9     		cbnz	r3, .L201
2753:FreeRTOS\src/queue.c **** 		{
2754:FreeRTOS\src/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2755:FreeRTOS\src/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
 2573              		.loc 1 2755 0
 2574 0038 3246     		mov	r2, r6
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 105


 2575 003a 2946     		mov	r1, r5
 2576 003c 04F12400 		add	r0, r4, #36
 2577 0040 FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 2578              	.LVL333:
 2579              	.L201:
2756:FreeRTOS\src/queue.c **** 		}
2757:FreeRTOS\src/queue.c **** 		else
2758:FreeRTOS\src/queue.c **** 		{
2759:FreeRTOS\src/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2760:FreeRTOS\src/queue.c **** 		}
2761:FreeRTOS\src/queue.c **** 		prvUnlockQueue( pxQueue );
 2580              		.loc 1 2761 0
 2581 0044 2046     		mov	r0, r4
 2582 0046 FFF7FEFF 		bl	prvUnlockQueue
 2583              	.LVL334:
 2584 004a 70BD     		pop	{r4, r5, r6, pc}
 2585              		.cfi_endproc
 2586              	.LFE36:
 2587              		.size	vQueueWaitForMessageRestricted, .-vQueueWaitForMessageRestricted
 2588              		.comm	xQueueRegistry,80,4
 2589              		.text
 2590              	.Letext0:
 2591              		.file 3 "d:\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\lib\\gcc\\arm-none
 2592              		.file 4 "d:\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 2593              		.file 5 "d:\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 2594              		.file 6 ".\\FreeRTOS\\include/list.h"
 2595              		.file 7 ".\\FreeRTOS\\include/task.h"
 2596              		.file 8 ".\\FreeRTOS\\include/queue.h"
 2597              		.file 9 ".\\FreeRTOS\\include/portable.h"
 2598              		.section	.debug_info,"",%progbits
 2599              	.Ldebug_info0:
 2600 0000 C4190000 		.4byte	0x19c4
 2601 0004 0400     		.2byte	0x4
 2602 0006 00000000 		.4byte	.Ldebug_abbrev0
 2603 000a 04       		.byte	0x4
 2604 000b 01       		.uleb128 0x1
 2605 000c 3E030000 		.4byte	.LASF153
 2606 0010 0C       		.byte	0xc
 2607 0011 6D060000 		.4byte	.LASF154
 2608 0015 1F010000 		.4byte	.LASF155
 2609 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2610 001d 00000000 		.4byte	0
 2611 0021 00000000 		.4byte	.Ldebug_line0
 2612 0025 02       		.uleb128 0x2
 2613 0026 DA030000 		.4byte	.LASF3
 2614 002a 03       		.byte	0x3
 2615 002b D8       		.byte	0xd8
 2616 002c 30000000 		.4byte	0x30
 2617 0030 03       		.uleb128 0x3
 2618 0031 04       		.byte	0x4
 2619 0032 07       		.byte	0x7
 2620 0033 C4000000 		.4byte	.LASF0
 2621 0037 04       		.uleb128 0x4
 2622 0038 04       		.byte	0x4
 2623 0039 05       		.byte	0x5
 2624 003a 696E7400 		.ascii	"int\000"
 2625 003e 03       		.uleb128 0x3
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 106


 2626 003f 08       		.byte	0x8
 2627 0040 05       		.byte	0x5
 2628 0041 F5050000 		.4byte	.LASF1
 2629 0045 03       		.uleb128 0x3
 2630 0046 08       		.byte	0x8
 2631 0047 04       		.byte	0x4
 2632 0048 57070000 		.4byte	.LASF2
 2633 004c 02       		.uleb128 0x2
 2634 004d 40070000 		.4byte	.LASF4
 2635 0051 04       		.byte	0x4
 2636 0052 1B       		.byte	0x1b
 2637 0053 57000000 		.4byte	0x57
 2638 0057 03       		.uleb128 0x3
 2639 0058 01       		.byte	0x1
 2640 0059 06       		.byte	0x6
 2641 005a 180A0000 		.4byte	.LASF5
 2642 005e 02       		.uleb128 0x2
 2643 005f 90080000 		.4byte	.LASF6
 2644 0063 04       		.byte	0x4
 2645 0064 1D       		.byte	0x1d
 2646 0065 69000000 		.4byte	0x69
 2647 0069 03       		.uleb128 0x3
 2648 006a 01       		.byte	0x1
 2649 006b 08       		.byte	0x8
 2650 006c 2B090000 		.4byte	.LASF7
 2651 0070 03       		.uleb128 0x3
 2652 0071 02       		.byte	0x2
 2653 0072 05       		.byte	0x5
 2654 0073 ED070000 		.4byte	.LASF8
 2655 0077 03       		.uleb128 0x3
 2656 0078 02       		.byte	0x2
 2657 0079 07       		.byte	0x7
 2658 007a 240A0000 		.4byte	.LASF9
 2659 007e 03       		.uleb128 0x3
 2660 007f 04       		.byte	0x4
 2661 0080 05       		.byte	0x5
 2662 0081 02080000 		.4byte	.LASF10
 2663 0085 02       		.uleb128 0x2
 2664 0086 39090000 		.4byte	.LASF11
 2665 008a 04       		.byte	0x4
 2666 008b 41       		.byte	0x41
 2667 008c 90000000 		.4byte	0x90
 2668 0090 03       		.uleb128 0x3
 2669 0091 04       		.byte	0x4
 2670 0092 07       		.byte	0x7
 2671 0093 C4080000 		.4byte	.LASF12
 2672 0097 03       		.uleb128 0x3
 2673 0098 08       		.byte	0x8
 2674 0099 07       		.byte	0x7
 2675 009a 99020000 		.4byte	.LASF13
 2676 009e 03       		.uleb128 0x3
 2677 009f 04       		.byte	0x4
 2678 00a0 07       		.byte	0x7
 2679 00a1 AA080000 		.4byte	.LASF14
 2680 00a5 05       		.uleb128 0x5
 2681 00a6 04       		.byte	0x4
 2682 00a7 03       		.uleb128 0x3
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 107


 2683 00a8 01       		.byte	0x1
 2684 00a9 08       		.byte	0x8
 2685 00aa D6040000 		.4byte	.LASF15
 2686 00ae 06       		.uleb128 0x6
 2687 00af 04       		.byte	0x4
 2688 00b0 B4000000 		.4byte	0xb4
 2689 00b4 07       		.uleb128 0x7
 2690 00b5 A7000000 		.4byte	0xa7
 2691 00b9 06       		.uleb128 0x6
 2692 00ba 04       		.byte	0x4
 2693 00bb BF000000 		.4byte	0xbf
 2694 00bf 08       		.uleb128 0x8
 2695 00c0 02       		.uleb128 0x2
 2696 00c1 4E020000 		.4byte	.LASF16
 2697 00c5 05       		.byte	0x5
 2698 00c6 14       		.byte	0x14
 2699 00c7 4C000000 		.4byte	0x4c
 2700 00cb 02       		.uleb128 0x2
 2701 00cc A1050000 		.4byte	.LASF17
 2702 00d0 05       		.byte	0x5
 2703 00d1 18       		.byte	0x18
 2704 00d2 5E000000 		.4byte	0x5e
 2705 00d6 02       		.uleb128 0x2
 2706 00d7 45020000 		.4byte	.LASF18
 2707 00db 05       		.byte	0x5
 2708 00dc 30       		.byte	0x30
 2709 00dd 85000000 		.4byte	0x85
 2710 00e1 02       		.uleb128 0x2
 2711 00e2 16060000 		.4byte	.LASF19
 2712 00e6 02       		.byte	0x2
 2713 00e7 38       		.byte	0x38
 2714 00e8 7E000000 		.4byte	0x7e
 2715 00ec 02       		.uleb128 0x2
 2716 00ed 10050000 		.4byte	.LASF20
 2717 00f1 02       		.byte	0x2
 2718 00f2 39       		.byte	0x39
 2719 00f3 90000000 		.4byte	0x90
 2720 00f7 02       		.uleb128 0x2
 2721 00f8 35070000 		.4byte	.LASF21
 2722 00fc 02       		.byte	0x2
 2723 00fd 3F       		.byte	0x3f
 2724 00fe D6000000 		.4byte	0xd6
 2725 0102 06       		.uleb128 0x6
 2726 0103 04       		.byte	0x4
 2727 0104 CB000000 		.4byte	0xcb
 2728 0108 09       		.uleb128 0x9
 2729 0109 EE000000 		.4byte	.LASF27
 2730 010d 14       		.byte	0x14
 2731 010e 06       		.byte	0x6
 2732 010f 8C       		.byte	0x8c
 2733 0110 51010000 		.4byte	0x151
 2734 0114 0A       		.uleb128 0xa
 2735 0115 F7070000 		.4byte	.LASF22
 2736 0119 06       		.byte	0x6
 2737 011a 8F       		.byte	0x8f
 2738 011b F7000000 		.4byte	0xf7
 2739 011f 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 108


 2740 0120 0A       		.uleb128 0xa
 2741 0121 5C060000 		.4byte	.LASF23
 2742 0125 06       		.byte	0x6
 2743 0126 90       		.byte	0x90
 2744 0127 51010000 		.4byte	0x151
 2745 012b 04       		.byte	0x4
 2746 012c 0A       		.uleb128 0xa
 2747 012d EE020000 		.4byte	.LASF24
 2748 0131 06       		.byte	0x6
 2749 0132 91       		.byte	0x91
 2750 0133 51010000 		.4byte	0x151
 2751 0137 08       		.byte	0x8
 2752 0138 0A       		.uleb128 0xa
 2753 0139 9A090000 		.4byte	.LASF25
 2754 013d 06       		.byte	0x6
 2755 013e 92       		.byte	0x92
 2756 013f A5000000 		.4byte	0xa5
 2757 0143 0C       		.byte	0xc
 2758 0144 0A       		.uleb128 0xa
 2759 0145 91070000 		.4byte	.LASF26
 2760 0149 06       		.byte	0x6
 2761 014a 93       		.byte	0x93
 2762 014b 88010000 		.4byte	0x188
 2763 014f 10       		.byte	0x10
 2764 0150 00       		.byte	0
 2765 0151 06       		.uleb128 0x6
 2766 0152 04       		.byte	0x4
 2767 0153 08010000 		.4byte	0x108
 2768 0157 09       		.uleb128 0x9
 2769 0158 0E040000 		.4byte	.LASF28
 2770 015c 14       		.byte	0x14
 2771 015d 06       		.byte	0x6
 2772 015e A4       		.byte	0xa4
 2773 015f 88010000 		.4byte	0x188
 2774 0163 0A       		.uleb128 0xa
 2775 0164 00000000 		.4byte	.LASF29
 2776 0168 06       		.byte	0x6
 2777 0169 A7       		.byte	0xa7
 2778 016a D5010000 		.4byte	0x1d5
 2779 016e 00       		.byte	0
 2780 016f 0A       		.uleb128 0xa
 2781 0170 D1000000 		.4byte	.LASF30
 2782 0174 06       		.byte	0x6
 2783 0175 A8       		.byte	0xa8
 2784 0176 DA010000 		.4byte	0x1da
 2785 017a 04       		.byte	0x4
 2786 017b 0A       		.uleb128 0xa
 2787 017c 4B050000 		.4byte	.LASF31
 2788 0180 06       		.byte	0x6
 2789 0181 A9       		.byte	0xa9
 2790 0182 CA010000 		.4byte	0x1ca
 2791 0186 08       		.byte	0x8
 2792 0187 00       		.byte	0
 2793 0188 06       		.uleb128 0x6
 2794 0189 04       		.byte	0x4
 2795 018a 57010000 		.4byte	0x157
 2796 018e 02       		.uleb128 0x2
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 109


 2797 018f DB040000 		.4byte	.LASF32
 2798 0193 06       		.byte	0x6
 2799 0194 96       		.byte	0x96
 2800 0195 08010000 		.4byte	0x108
 2801 0199 09       		.uleb128 0x9
 2802 019a FE030000 		.4byte	.LASF33
 2803 019e 0C       		.byte	0xc
 2804 019f 06       		.byte	0x6
 2805 01a0 98       		.byte	0x98
 2806 01a1 CA010000 		.4byte	0x1ca
 2807 01a5 0A       		.uleb128 0xa
 2808 01a6 F7070000 		.4byte	.LASF22
 2809 01aa 06       		.byte	0x6
 2810 01ab 9B       		.byte	0x9b
 2811 01ac F7000000 		.4byte	0xf7
 2812 01b0 00       		.byte	0
 2813 01b1 0A       		.uleb128 0xa
 2814 01b2 5C060000 		.4byte	.LASF23
 2815 01b6 06       		.byte	0x6
 2816 01b7 9C       		.byte	0x9c
 2817 01b8 51010000 		.4byte	0x151
 2818 01bc 04       		.byte	0x4
 2819 01bd 0A       		.uleb128 0xa
 2820 01be EE020000 		.4byte	.LASF24
 2821 01c2 06       		.byte	0x6
 2822 01c3 9D       		.byte	0x9d
 2823 01c4 51010000 		.4byte	0x151
 2824 01c8 08       		.byte	0x8
 2825 01c9 00       		.byte	0
 2826 01ca 02       		.uleb128 0x2
 2827 01cb 72050000 		.4byte	.LASF34
 2828 01cf 06       		.byte	0x6
 2829 01d0 9F       		.byte	0x9f
 2830 01d1 99010000 		.4byte	0x199
 2831 01d5 0B       		.uleb128 0xb
 2832 01d6 EC000000 		.4byte	0xec
 2833 01da 06       		.uleb128 0x6
 2834 01db 04       		.byte	0x4
 2835 01dc 8E010000 		.4byte	0x18e
 2836 01e0 02       		.uleb128 0x2
 2837 01e1 13070000 		.4byte	.LASF35
 2838 01e5 06       		.byte	0x6
 2839 01e6 AB       		.byte	0xab
 2840 01e7 57010000 		.4byte	0x157
 2841 01eb 02       		.uleb128 0x2
 2842 01ec CB060000 		.4byte	.LASF36
 2843 01f0 07       		.byte	0x7
 2844 01f1 3E       		.byte	0x3e
 2845 01f2 F6010000 		.4byte	0x1f6
 2846 01f6 06       		.uleb128 0x6
 2847 01f7 04       		.byte	0x4
 2848 01f8 FC010000 		.4byte	0x1fc
 2849 01fc 0C       		.uleb128 0xc
 2850 01fd 30000000 		.4byte	.LASF156
 2851 0201 09       		.uleb128 0x9
 2852 0202 D9000000 		.4byte	.LASF37
 2853 0206 08       		.byte	0x8
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 110


 2854 0207 07       		.byte	0x7
 2855 0208 5E       		.byte	0x5e
 2856 0209 26020000 		.4byte	0x226
 2857 020d 0A       		.uleb128 0xa
 2858 020e 95010000 		.4byte	.LASF38
 2859 0212 07       		.byte	0x7
 2860 0213 60       		.byte	0x60
 2861 0214 E1000000 		.4byte	0xe1
 2862 0218 00       		.byte	0
 2863 0219 0A       		.uleb128 0xa
 2864 021a 38060000 		.4byte	.LASF39
 2865 021e 07       		.byte	0x7
 2866 021f 61       		.byte	0x61
 2867 0220 F7000000 		.4byte	0xf7
 2868 0224 04       		.byte	0x4
 2869 0225 00       		.byte	0
 2870 0226 02       		.uleb128 0x2
 2871 0227 8D060000 		.4byte	.LASF40
 2872 022b 07       		.byte	0x7
 2873 022c 62       		.byte	0x62
 2874 022d 01020000 		.4byte	0x201
 2875 0231 02       		.uleb128 0x2
 2876 0232 3D050000 		.4byte	.LASF41
 2877 0236 08       		.byte	0x8
 2878 0237 30       		.byte	0x30
 2879 0238 3C020000 		.4byte	0x23c
 2880 023c 06       		.uleb128 0x6
 2881 023d 04       		.byte	0x4
 2882 023e 42020000 		.4byte	0x242
 2883 0242 09       		.uleb128 0x9
 2884 0243 89020000 		.4byte	.LASF42
 2885 0247 48       		.byte	0x48
 2886 0248 01       		.byte	0x1
 2887 0249 61       		.byte	0x61
 2888 024a C5020000 		.4byte	0x2c5
 2889 024e 0A       		.uleb128 0xa
 2890 024f BC090000 		.4byte	.LASF43
 2891 0253 01       		.byte	0x1
 2892 0254 63       		.byte	0x63
 2893 0255 EA020000 		.4byte	0x2ea
 2894 0259 00       		.byte	0
 2895 025a 0A       		.uleb128 0xa
 2896 025b 2B070000 		.4byte	.LASF44
 2897 025f 01       		.byte	0x1
 2898 0260 64       		.byte	0x64
 2899 0261 EA020000 		.4byte	0x2ea
 2900 0265 04       		.byte	0x4
 2901 0266 0D       		.uleb128 0xd
 2902 0267 7500     		.ascii	"u\000"
 2903 0269 01       		.byte	0x1
 2904 026a 6A       		.byte	0x6a
 2905 026b 2B030000 		.4byte	0x32b
 2906 026f 08       		.byte	0x8
 2907 0270 0A       		.uleb128 0xa
 2908 0271 62010000 		.4byte	.LASF45
 2909 0275 01       		.byte	0x1
 2910 0276 6C       		.byte	0x6c
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 111


 2911 0277 E0010000 		.4byte	0x1e0
 2912 027b 10       		.byte	0x10
 2913 027c 0A       		.uleb128 0xa
 2914 027d 77000000 		.4byte	.LASF46
 2915 0281 01       		.byte	0x1
 2916 0282 6D       		.byte	0x6d
 2917 0283 E0010000 		.4byte	0x1e0
 2918 0287 24       		.byte	0x24
 2919 0288 0A       		.uleb128 0xa
 2920 0289 F9020000 		.4byte	.LASF47
 2921 028d 01       		.byte	0x1
 2922 028e 6F       		.byte	0x6f
 2923 028f D5010000 		.4byte	0x1d5
 2924 0293 38       		.byte	0x38
 2925 0294 0A       		.uleb128 0xa
 2926 0295 C5070000 		.4byte	.LASF48
 2927 0299 01       		.byte	0x1
 2928 029a 70       		.byte	0x70
 2929 029b EC000000 		.4byte	0xec
 2930 029f 3C       		.byte	0x3c
 2931 02a0 0A       		.uleb128 0xa
 2932 02a1 96040000 		.4byte	.LASF49
 2933 02a5 01       		.byte	0x1
 2934 02a6 71       		.byte	0x71
 2935 02a7 EC000000 		.4byte	0xec
 2936 02ab 40       		.byte	0x40
 2937 02ac 0A       		.uleb128 0xa
 2938 02ad 5C0A0000 		.4byte	.LASF50
 2939 02b1 01       		.byte	0x1
 2940 02b2 73       		.byte	0x73
 2941 02b3 4A030000 		.4byte	0x34a
 2942 02b7 44       		.byte	0x44
 2943 02b8 0A       		.uleb128 0xa
 2944 02b9 8D010000 		.4byte	.LASF51
 2945 02bd 01       		.byte	0x1
 2946 02be 74       		.byte	0x74
 2947 02bf 4A030000 		.4byte	0x34a
 2948 02c3 45       		.byte	0x45
 2949 02c4 00       		.byte	0
 2950 02c5 09       		.uleb128 0x9
 2951 02c6 F5040000 		.4byte	.LASF52
 2952 02ca 08       		.byte	0x8
 2953 02cb 01       		.byte	0x1
 2954 02cc 43       		.byte	0x43
 2955 02cd EA020000 		.4byte	0x2ea
 2956 02d1 0A       		.uleb128 0xa
 2957 02d2 89080000 		.4byte	.LASF53
 2958 02d6 01       		.byte	0x1
 2959 02d7 45       		.byte	0x45
 2960 02d8 EA020000 		.4byte	0x2ea
 2961 02dc 00       		.byte	0
 2962 02dd 0A       		.uleb128 0xa
 2963 02de F7010000 		.4byte	.LASF54
 2964 02e2 01       		.byte	0x1
 2965 02e3 46       		.byte	0x46
 2966 02e4 EA020000 		.4byte	0x2ea
 2967 02e8 04       		.byte	0x4
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 112


 2968 02e9 00       		.byte	0
 2969 02ea 06       		.uleb128 0x6
 2970 02eb 04       		.byte	0x4
 2971 02ec C0000000 		.4byte	0xc0
 2972 02f0 02       		.uleb128 0x2
 2973 02f1 AC070000 		.4byte	.LASF55
 2974 02f5 01       		.byte	0x1
 2975 02f6 47       		.byte	0x47
 2976 02f7 C5020000 		.4byte	0x2c5
 2977 02fb 09       		.uleb128 0x9
 2978 02fc 22000000 		.4byte	.LASF56
 2979 0300 08       		.byte	0x8
 2980 0301 01       		.byte	0x1
 2981 0302 49       		.byte	0x49
 2982 0303 20030000 		.4byte	0x320
 2983 0307 0A       		.uleb128 0xa
 2984 0308 450A0000 		.4byte	.LASF57
 2985 030c 01       		.byte	0x1
 2986 030d 4B       		.byte	0x4b
 2987 030e EB010000 		.4byte	0x1eb
 2988 0312 00       		.byte	0
 2989 0313 0A       		.uleb128 0xa
 2990 0314 EB080000 		.4byte	.LASF58
 2991 0318 01       		.byte	0x1
 2992 0319 4C       		.byte	0x4c
 2993 031a EC000000 		.4byte	0xec
 2994 031e 04       		.byte	0x4
 2995 031f 00       		.byte	0
 2996 0320 02       		.uleb128 0x2
 2997 0321 44000000 		.4byte	.LASF59
 2998 0325 01       		.byte	0x1
 2999 0326 4D       		.byte	0x4d
 3000 0327 FB020000 		.4byte	0x2fb
 3001 032b 0E       		.uleb128 0xe
 3002 032c 08       		.byte	0x8
 3003 032d 01       		.byte	0x1
 3004 032e 66       		.byte	0x66
 3005 032f 4A030000 		.4byte	0x34a
 3006 0333 0F       		.uleb128 0xf
 3007 0334 82020000 		.4byte	.LASF60
 3008 0338 01       		.byte	0x1
 3009 0339 68       		.byte	0x68
 3010 033a F0020000 		.4byte	0x2f0
 3011 033e 0F       		.uleb128 0xf
 3012 033f 0B030000 		.4byte	.LASF61
 3013 0343 01       		.byte	0x1
 3014 0344 69       		.byte	0x69
 3015 0345 20030000 		.4byte	0x320
 3016 0349 00       		.byte	0
 3017 034a 0B       		.uleb128 0xb
 3018 034b C0000000 		.4byte	0xc0
 3019 034f 02       		.uleb128 0x2
 3020 0350 3E0A0000 		.4byte	.LASF62
 3021 0354 01       		.byte	0x1
 3022 0355 83       		.byte	0x83
 3023 0356 42020000 		.4byte	0x242
 3024 035a 02       		.uleb128 0x2
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 113


 3025 035b B7010000 		.4byte	.LASF63
 3026 035f 01       		.byte	0x1
 3027 0360 87       		.byte	0x87
 3028 0361 4F030000 		.4byte	0x34f
 3029 0365 09       		.uleb128 0x9
 3030 0366 F9000000 		.4byte	.LASF64
 3031 036a 08       		.byte	0x8
 3032 036b 01       		.byte	0x1
 3033 036c 94       		.byte	0x94
 3034 036d 8A030000 		.4byte	0x38a
 3035 0371 0A       		.uleb128 0xa
 3036 0372 F2030000 		.4byte	.LASF65
 3037 0376 01       		.byte	0x1
 3038 0377 96       		.byte	0x96
 3039 0378 AE000000 		.4byte	0xae
 3040 037c 00       		.byte	0
 3041 037d 0A       		.uleb128 0xa
 3042 037e EA030000 		.4byte	.LASF66
 3043 0382 01       		.byte	0x1
 3044 0383 97       		.byte	0x97
 3045 0384 31020000 		.4byte	0x231
 3046 0388 04       		.byte	0x4
 3047 0389 00       		.byte	0
 3048 038a 02       		.uleb128 0x2
 3049 038b A9050000 		.4byte	.LASF67
 3050 038f 01       		.byte	0x1
 3051 0390 98       		.byte	0x98
 3052 0391 65030000 		.4byte	0x365
 3053 0395 02       		.uleb128 0x2
 3054 0396 D6010000 		.4byte	.LASF68
 3055 039a 01       		.byte	0x1
 3056 039b 9D       		.byte	0x9d
 3057 039c 8A030000 		.4byte	0x38a
 3058 03a0 10       		.uleb128 0x10
 3059 03a1 E2050000 		.4byte	.LASF157
 3060 03a5 02       		.byte	0x2
 3061 03a6 CF       		.byte	0xcf
 3062 03a7 D6000000 		.4byte	0xd6
 3063 03ab 03       		.byte	0x3
 3064 03ac C7030000 		.4byte	0x3c7
 3065 03b0 11       		.uleb128 0x11
 3066 03b1 70020000 		.4byte	.LASF69
 3067 03b5 02       		.byte	0x2
 3068 03b6 D1       		.byte	0xd1
 3069 03b7 D6000000 		.4byte	0xd6
 3070 03bb 11       		.uleb128 0x11
 3071 03bc 03050000 		.4byte	.LASF70
 3072 03c0 02       		.byte	0x2
 3073 03c1 D1       		.byte	0xd1
 3074 03c2 D6000000 		.4byte	0xd6
 3075 03c6 00       		.byte	0
 3076 03c7 12       		.uleb128 0x12
 3077 03c8 2D040000 		.4byte	.LASF158
 3078 03cc 02       		.byte	0x2
 3079 03cd E3       		.byte	0xe3
 3080 03ce 03       		.byte	0x3
 3081 03cf DF030000 		.4byte	0x3df
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 114


 3082 03d3 13       		.uleb128 0x13
 3083 03d4 D8060000 		.4byte	.LASF159
 3084 03d8 02       		.byte	0x2
 3085 03d9 E3       		.byte	0xe3
 3086 03da D6000000 		.4byte	0xd6
 3087 03de 00       		.byte	0
 3088 03df 14       		.uleb128 0x14
 3089 03e0 C9020000 		.4byte	.LASF71
 3090 03e4 01       		.byte	0x1
 3091 03e5 FD07     		.2byte	0x7fd
 3092 03e7 EC000000 		.4byte	0xec
 3093 03eb 00000000 		.4byte	.LFB25
 3094 03ef 12000000 		.4byte	.LFE25-.LFB25
 3095 03f3 01       		.uleb128 0x1
 3096 03f4 9C       		.byte	0x9c
 3097 03f5 1A040000 		.4byte	0x41a
 3098 03f9 15       		.uleb128 0x15
 3099 03fa 9A080000 		.4byte	.LASF73
 3100 03fe 01       		.byte	0x1
 3101 03ff FD07     		.2byte	0x7fd
 3102 0401 25040000 		.4byte	0x425
 3103 0405 00000000 		.4byte	.LLST0
 3104 0409 16       		.uleb128 0x16
 3105 040a E7060000 		.4byte	.LASF74
 3106 040e 01       		.byte	0x1
 3107 040f FF07     		.2byte	0x7ff
 3108 0411 EC000000 		.4byte	0xec
 3109 0415 3A000000 		.4byte	.LLST1
 3110 0419 00       		.byte	0
 3111 041a 06       		.uleb128 0x6
 3112 041b 04       		.byte	0x4
 3113 041c 20040000 		.4byte	0x420
 3114 0420 07       		.uleb128 0x7
 3115 0421 5A030000 		.4byte	0x35a
 3116 0425 07       		.uleb128 0x7
 3117 0426 1A040000 		.4byte	0x41a
 3118 042a 14       		.uleb128 0x14
 3119 042b E6040000 		.4byte	.LASF72
 3120 042f 01       		.byte	0x1
 3121 0430 1709     		.2byte	0x917
 3122 0432 E1000000 		.4byte	0xe1
 3123 0436 00000000 		.4byte	.LFB31
 3124 043a 1E000000 		.4byte	.LFE31-.LFB31
 3125 043e 01       		.uleb128 0x1
 3126 043f 9C       		.byte	0x9c
 3127 0440 75040000 		.4byte	0x475
 3128 0444 15       		.uleb128 0x15
 3129 0445 9A080000 		.4byte	.LASF73
 3130 0449 01       		.byte	0x1
 3131 044a 1709     		.2byte	0x917
 3132 044c 1A040000 		.4byte	0x41a
 3133 0450 58000000 		.4byte	.LLST2
 3134 0454 17       		.uleb128 0x17
 3135 0455 A2080000 		.4byte	.LASF75
 3136 0459 01       		.byte	0x1
 3137 045a 1909     		.2byte	0x919
 3138 045c E1000000 		.4byte	0xe1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 115


 3139 0460 01       		.uleb128 0x1
 3140 0461 54       		.byte	0x54
 3141 0462 18       		.uleb128 0x18
 3142 0463 08000000 		.4byte	.LVL6
 3143 0467 EA180000 		.4byte	0x18ea
 3144 046b 18       		.uleb128 0x18
 3145 046c 1A000000 		.4byte	.LVL10
 3146 0470 F5180000 		.4byte	0x18f5
 3147 0474 00       		.byte	0
 3148 0475 14       		.uleb128 0x14
 3149 0476 B0020000 		.4byte	.LASF76
 3150 047a 01       		.byte	0x1
 3151 047b EF08     		.2byte	0x8ef
 3152 047d E1000000 		.4byte	0xe1
 3153 0481 00000000 		.4byte	.LFB29
 3154 0485 1A000000 		.4byte	.LFE29-.LFB29
 3155 0489 01       		.uleb128 0x1
 3156 048a 9C       		.byte	0x9c
 3157 048b C0040000 		.4byte	0x4c0
 3158 048f 15       		.uleb128 0x15
 3159 0490 9A080000 		.4byte	.LASF73
 3160 0494 01       		.byte	0x1
 3161 0495 EF08     		.2byte	0x8ef
 3162 0497 1A040000 		.4byte	0x41a
 3163 049b 9D000000 		.4byte	.LLST3
 3164 049f 17       		.uleb128 0x17
 3165 04a0 A2080000 		.4byte	.LASF75
 3166 04a4 01       		.byte	0x1
 3167 04a5 F108     		.2byte	0x8f1
 3168 04a7 E1000000 		.4byte	0xe1
 3169 04ab 01       		.uleb128 0x1
 3170 04ac 54       		.byte	0x54
 3171 04ad 18       		.uleb128 0x18
 3172 04ae 08000000 		.4byte	.LVL12
 3173 04b2 EA180000 		.4byte	0x18ea
 3174 04b6 18       		.uleb128 0x18
 3175 04b7 16000000 		.4byte	.LVL16
 3176 04bb F5180000 		.4byte	0x18f5
 3177 04bf 00       		.byte	0
 3178 04c0 14       		.uleb128 0x14
 3179 04c1 3D040000 		.4byte	.LASF77
 3180 04c5 01       		.byte	0x1
 3181 04c6 1608     		.2byte	0x816
 3182 04c8 E1000000 		.4byte	0xe1
 3183 04cc 00000000 		.4byte	.LFB26
 3184 04d0 76000000 		.4byte	.LFE26-.LFB26
 3185 04d4 01       		.uleb128 0x1
 3186 04d5 9C       		.byte	0x9c
 3187 04d6 46050000 		.4byte	0x546
 3188 04da 15       		.uleb128 0x15
 3189 04db 9A080000 		.4byte	.LASF73
 3190 04df 01       		.byte	0x1
 3191 04e0 1608     		.2byte	0x816
 3192 04e2 4C050000 		.4byte	0x54c
 3193 04e6 E2000000 		.4byte	.LLST4
 3194 04ea 15       		.uleb128 0x15
 3195 04eb 2C080000 		.4byte	.LASF78
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 116


 3196 04ef 01       		.byte	0x1
 3197 04f0 1608     		.2byte	0x816
 3198 04f2 B9000000 		.4byte	0xb9
 3199 04f6 42010000 		.4byte	.LLST5
 3200 04fa 15       		.uleb128 0x15
 3201 04fb 520A0000 		.4byte	.LASF79
 3202 04ff 01       		.byte	0x1
 3203 0500 1608     		.2byte	0x816
 3204 0502 51050000 		.4byte	0x551
 3205 0506 AE010000 		.4byte	.LLST6
 3206 050a 16       		.uleb128 0x16
 3207 050b A2080000 		.4byte	.LASF75
 3208 050f 01       		.byte	0x1
 3209 0510 1808     		.2byte	0x818
 3210 0512 E1000000 		.4byte	0xe1
 3211 0516 CC010000 		.4byte	.LLST7
 3212 051a 16       		.uleb128 0x16
 3213 051b F9020000 		.4byte	.LASF47
 3214 051f 01       		.byte	0x1
 3215 0520 1908     		.2byte	0x819
 3216 0522 EC000000 		.4byte	0xec
 3217 0526 02020000 		.4byte	.LLST8
 3218 052a 18       		.uleb128 0x18
 3219 052b 16000000 		.4byte	.LVL22
 3220 052f 00190000 		.4byte	0x1900
 3221 0533 18       		.uleb128 0x18
 3222 0534 24000000 		.4byte	.LVL25
 3223 0538 0C190000 		.4byte	0x190c
 3224 053c 18       		.uleb128 0x18
 3225 053d 40000000 		.4byte	.LVL28
 3226 0541 0C190000 		.4byte	0x190c
 3227 0545 00       		.byte	0
 3228 0546 06       		.uleb128 0x6
 3229 0547 04       		.byte	0x4
 3230 0548 5A030000 		.4byte	0x35a
 3231 054c 07       		.uleb128 0x7
 3232 054d 46050000 		.4byte	0x546
 3233 0551 07       		.uleb128 0x7
 3234 0552 E1000000 		.4byte	0xe1
 3235 0556 19       		.uleb128 0x19
 3236 0557 54090000 		.4byte	.LASF81
 3237 055b 01       		.byte	0x1
 3238 055c 6508     		.2byte	0x865
 3239 055e 00000000 		.4byte	.LFB27
 3240 0562 24000000 		.4byte	.LFE27-.LFB27
 3241 0566 01       		.uleb128 0x1
 3242 0567 9C       		.byte	0x9c
 3243 0568 9D050000 		.4byte	0x59d
 3244 056c 15       		.uleb128 0x15
 3245 056d 9A080000 		.4byte	.LASF73
 3246 0571 01       		.byte	0x1
 3247 0572 6508     		.2byte	0x865
 3248 0574 4C050000 		.4byte	0x54c
 3249 0578 22020000 		.4byte	.LLST9
 3250 057c 15       		.uleb128 0x15
 3251 057d C0020000 		.4byte	.LASF80
 3252 0581 01       		.byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 117


 3253 0582 6508     		.2byte	0x865
 3254 0584 9D050000 		.4byte	0x59d
 3255 0588 4E020000 		.4byte	.LLST10
 3256 058c 1A       		.uleb128 0x1a
 3257 058d 20000000 		.4byte	.LVL38
 3258 0591 0C190000 		.4byte	0x190c
 3259 0595 1B       		.uleb128 0x1b
 3260 0596 01       		.uleb128 0x1
 3261 0597 50       		.byte	0x50
 3262 0598 02       		.uleb128 0x2
 3263 0599 74       		.byte	0x74
 3264 059a 00       		.sleb128 0
 3265 059b 00       		.byte	0
 3266 059c 00       		.byte	0
 3267 059d 07       		.uleb128 0x7
 3268 059e A5000000 		.4byte	0xa5
 3269 05a2 19       		.uleb128 0x19
 3270 05a3 DC090000 		.4byte	.LASF82
 3271 05a7 01       		.byte	0x1
 3272 05a8 7708     		.2byte	0x877
 3273 05aa 00000000 		.4byte	.LFB28
 3274 05ae 66000000 		.4byte	.LFE28-.LFB28
 3275 05b2 01       		.uleb128 0x1
 3276 05b3 9C       		.byte	0x9c
 3277 05b4 63060000 		.4byte	0x663
 3278 05b8 15       		.uleb128 0x15
 3279 05b9 9A080000 		.4byte	.LASF73
 3280 05bd 01       		.byte	0x1
 3281 05be 7708     		.2byte	0x877
 3282 05c0 4C050000 		.4byte	0x54c
 3283 05c4 77020000 		.4byte	.LLST11
 3284 05c8 1C       		.uleb128 0x1c
 3285 05c9 08000000 		.4byte	.LBB23
 3286 05cd 28000000 		.4byte	.LBE23-.LBB23
 3287 05d1 03060000 		.4byte	0x603
 3288 05d5 16       		.uleb128 0x16
 3289 05d6 8D010000 		.4byte	.LASF51
 3290 05da 01       		.byte	0x1
 3291 05db 8108     		.2byte	0x881
 3292 05dd C0000000 		.4byte	0xc0
 3293 05e1 95020000 		.4byte	.LLST12
 3294 05e5 1D       		.uleb128 0x1d
 3295 05e6 1C000000 		.4byte	.LVL43
 3296 05ea 15190000 		.4byte	0x1915
 3297 05ee F9050000 		.4byte	0x5f9
 3298 05f2 1B       		.uleb128 0x1b
 3299 05f3 01       		.uleb128 0x1
 3300 05f4 50       		.byte	0x50
 3301 05f5 02       		.uleb128 0x2
 3302 05f6 75       		.byte	0x75
 3303 05f7 24       		.sleb128 36
 3304 05f8 00       		.byte	0
 3305 05f9 18       		.uleb128 0x18
 3306 05fa 22000000 		.4byte	.LVL44
 3307 05fe 21190000 		.4byte	0x1921
 3308 0602 00       		.byte	0
 3309 0603 1C       		.uleb128 0x1c
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 118


 3310 0604 38000000 		.4byte	.LBB24
 3311 0608 28000000 		.4byte	.LBE24-.LBB24
 3312 060c 3E060000 		.4byte	0x63e
 3313 0610 16       		.uleb128 0x16
 3314 0611 5C0A0000 		.4byte	.LASF50
 3315 0615 01       		.byte	0x1
 3316 0616 D208     		.2byte	0x8d2
 3317 0618 C0000000 		.4byte	0xc0
 3318 061c B3020000 		.4byte	.LLST13
 3319 0620 1D       		.uleb128 0x1d
 3320 0621 4C000000 		.4byte	.LVL51
 3321 0625 15190000 		.4byte	0x1915
 3322 0629 34060000 		.4byte	0x634
 3323 062d 1B       		.uleb128 0x1b
 3324 062e 01       		.uleb128 0x1
 3325 062f 50       		.byte	0x50
 3326 0630 02       		.uleb128 0x2
 3327 0631 75       		.byte	0x75
 3328 0632 10       		.sleb128 16
 3329 0633 00       		.byte	0
 3330 0634 18       		.uleb128 0x18
 3331 0635 52000000 		.4byte	.LVL52
 3332 0639 21190000 		.4byte	0x1921
 3333 063d 00       		.byte	0
 3334 063e 18       		.uleb128 0x18
 3335 063f 08000000 		.4byte	.LVL41
 3336 0643 EA180000 		.4byte	0x18ea
 3337 0647 18       		.uleb128 0x18
 3338 0648 34000000 		.4byte	.LVL47
 3339 064c F5180000 		.4byte	0x18f5
 3340 0650 18       		.uleb128 0x18
 3341 0651 38000000 		.4byte	.LVL48
 3342 0655 EA180000 		.4byte	0x18ea
 3343 0659 18       		.uleb128 0x18
 3344 065a 64000000 		.4byte	.LVL55
 3345 065e F5180000 		.4byte	0x18f5
 3346 0662 00       		.byte	0
 3347 0663 1E       		.uleb128 0x1e
 3348 0664 EB090000 		.4byte	.LASF89
 3349 0668 01       		.byte	0x1
 3350 0669 FF       		.byte	0xff
 3351 066a E1000000 		.4byte	0xe1
 3352 066e 00000000 		.4byte	.LFB5
 3353 0672 6C000000 		.4byte	.LFE5-.LFB5
 3354 0676 01       		.uleb128 0x1
 3355 0677 9C       		.byte	0x9c
 3356 0678 F9060000 		.4byte	0x6f9
 3357 067c 1F       		.uleb128 0x1f
 3358 067d 82020000 		.4byte	.LASF60
 3359 0681 01       		.byte	0x1
 3360 0682 FF       		.byte	0xff
 3361 0683 31020000 		.4byte	0x231
 3362 0687 D1020000 		.4byte	.LLST14
 3363 068b 1F       		.uleb128 0x1f
 3364 068c 63060000 		.4byte	.LASF83
 3365 0690 01       		.byte	0x1
 3366 0691 FF       		.byte	0xff
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 119


 3367 0692 E1000000 		.4byte	0xe1
 3368 0696 FD020000 		.4byte	.LLST15
 3369 069a 16       		.uleb128 0x16
 3370 069b 9A080000 		.4byte	.LASF73
 3371 069f 01       		.byte	0x1
 3372 06a0 0101     		.2byte	0x101
 3373 06a2 4C050000 		.4byte	0x54c
 3374 06a6 29030000 		.4byte	.LLST16
 3375 06aa 18       		.uleb128 0x18
 3376 06ab 0A000000 		.4byte	.LVL58
 3377 06af EA180000 		.4byte	0x18ea
 3378 06b3 1D       		.uleb128 0x1d
 3379 06b4 3C000000 		.4byte	.LVL59
 3380 06b8 15190000 		.4byte	0x1915
 3381 06bc C7060000 		.4byte	0x6c7
 3382 06c0 1B       		.uleb128 0x1b
 3383 06c1 01       		.uleb128 0x1
 3384 06c2 50       		.byte	0x50
 3385 06c3 02       		.uleb128 0x2
 3386 06c4 74       		.byte	0x74
 3387 06c5 10       		.sleb128 16
 3388 06c6 00       		.byte	0
 3389 06c7 1D       		.uleb128 0x1d
 3390 06c8 58000000 		.4byte	.LVL60
 3391 06cc 2D190000 		.4byte	0x192d
 3392 06d0 DB060000 		.4byte	0x6db
 3393 06d4 1B       		.uleb128 0x1b
 3394 06d5 01       		.uleb128 0x1
 3395 06d6 50       		.byte	0x50
 3396 06d7 02       		.uleb128 0x2
 3397 06d8 74       		.byte	0x74
 3398 06d9 10       		.sleb128 16
 3399 06da 00       		.byte	0
 3400 06db 1D       		.uleb128 0x1d
 3401 06dc 60000000 		.4byte	.LVL61
 3402 06e0 2D190000 		.4byte	0x192d
 3403 06e4 EF060000 		.4byte	0x6ef
 3404 06e8 1B       		.uleb128 0x1b
 3405 06e9 01       		.uleb128 0x1
 3406 06ea 50       		.byte	0x50
 3407 06eb 02       		.uleb128 0x2
 3408 06ec 74       		.byte	0x74
 3409 06ed 24       		.sleb128 36
 3410 06ee 00       		.byte	0
 3411 06ef 18       		.uleb128 0x18
 3412 06f0 64000000 		.4byte	.LVL62
 3413 06f4 F5180000 		.4byte	0x18f5
 3414 06f8 00       		.byte	0
 3415 06f9 19       		.uleb128 0x19
 3416 06fa 2F020000 		.4byte	.LASF84
 3417 06fe 01       		.byte	0x1
 3418 06ff AD01     		.2byte	0x1ad
 3419 0701 00000000 		.4byte	.LFB7
 3420 0705 1C000000 		.4byte	.LFE7-.LFB7
 3421 0709 01       		.uleb128 0x1
 3422 070a 9C       		.byte	0x9c
 3423 070b 75070000 		.4byte	0x775
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 120


 3424 070f 15       		.uleb128 0x15
 3425 0710 49070000 		.4byte	.LASF85
 3426 0714 01       		.byte	0x1
 3427 0715 AD01     		.2byte	0x1ad
 3428 0717 75070000 		.4byte	0x775
 3429 071b 55030000 		.4byte	.LLST17
 3430 071f 15       		.uleb128 0x15
 3431 0720 96040000 		.4byte	.LASF49
 3432 0724 01       		.byte	0x1
 3433 0725 AD01     		.2byte	0x1ad
 3434 0727 75070000 		.4byte	0x775
 3435 072b 82030000 		.4byte	.LLST18
 3436 072f 15       		.uleb128 0x15
 3437 0730 21060000 		.4byte	.LASF86
 3438 0734 01       		.byte	0x1
 3439 0735 AD01     		.2byte	0x1ad
 3440 0737 02010000 		.4byte	0x102
 3441 073b A0030000 		.4byte	.LLST19
 3442 073f 15       		.uleb128 0x15
 3443 0740 07070000 		.4byte	.LASF87
 3444 0744 01       		.byte	0x1
 3445 0745 AD01     		.2byte	0x1ad
 3446 0747 7A070000 		.4byte	0x77a
 3447 074b C1030000 		.4byte	.LLST20
 3448 074f 20       		.uleb128 0x20
 3449 0750 E3000000 		.4byte	.LASF88
 3450 0754 01       		.byte	0x1
 3451 0755 AD01     		.2byte	0x1ad
 3452 0757 46050000 		.4byte	0x546
 3453 075b 02       		.uleb128 0x2
 3454 075c 91       		.byte	0x91
 3455 075d 00       		.sleb128 0
 3456 075e 1A       		.uleb128 0x1a
 3457 075f 1A000000 		.4byte	.LVL68
 3458 0763 63060000 		.4byte	0x663
 3459 0767 1B       		.uleb128 0x1b
 3460 0768 01       		.uleb128 0x1
 3461 0769 50       		.byte	0x50
 3462 076a 03       		.uleb128 0x3
 3463 076b 91       		.byte	0x91
 3464 076c 00       		.sleb128 0
 3465 076d 06       		.byte	0x6
 3466 076e 1B       		.uleb128 0x1b
 3467 076f 01       		.uleb128 0x1
 3468 0770 51       		.byte	0x51
 3469 0771 01       		.uleb128 0x1
 3470 0772 31       		.byte	0x31
 3471 0773 00       		.byte	0
 3472 0774 00       		.byte	0
 3473 0775 07       		.uleb128 0x7
 3474 0776 EC000000 		.4byte	0xec
 3475 077a 07       		.uleb128 0x7
 3476 077b CB000000 		.4byte	0xcb
 3477 077f 21       		.uleb128 0x21
 3478 0780 BC050000 		.4byte	.LASF90
 3479 0784 01       		.byte	0x1
 3480 0785 7001     		.2byte	0x170
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 121


 3481 0787 31020000 		.4byte	0x231
 3482 078b 00000000 		.4byte	.LFB6
 3483 078f 34000000 		.4byte	.LFE6-.LFB6
 3484 0793 01       		.uleb128 0x1
 3485 0794 9C       		.byte	0x9c
 3486 0795 2D080000 		.4byte	0x82d
 3487 0799 15       		.uleb128 0x15
 3488 079a 49070000 		.4byte	.LASF85
 3489 079e 01       		.byte	0x1
 3490 079f 7001     		.2byte	0x170
 3491 07a1 75070000 		.4byte	0x775
 3492 07a5 E2030000 		.4byte	.LLST21
 3493 07a9 15       		.uleb128 0x15
 3494 07aa 96040000 		.4byte	.LASF49
 3495 07ae 01       		.byte	0x1
 3496 07af 7001     		.2byte	0x170
 3497 07b1 75070000 		.4byte	0x775
 3498 07b5 16040000 		.4byte	.LLST22
 3499 07b9 15       		.uleb128 0x15
 3500 07ba 07070000 		.4byte	.LASF87
 3501 07be 01       		.byte	0x1
 3502 07bf 7001     		.2byte	0x170
 3503 07c1 7A070000 		.4byte	0x77a
 3504 07c5 34040000 		.4byte	.LLST23
 3505 07c9 16       		.uleb128 0x16
 3506 07ca E3000000 		.4byte	.LASF88
 3507 07ce 01       		.byte	0x1
 3508 07cf 7201     		.2byte	0x172
 3509 07d1 46050000 		.4byte	0x546
 3510 07d5 55040000 		.4byte	.LLST24
 3511 07d9 16       		.uleb128 0x16
 3512 07da 0B080000 		.4byte	.LASF91
 3513 07de 01       		.byte	0x1
 3514 07df 7301     		.2byte	0x173
 3515 07e1 25000000 		.4byte	0x25
 3516 07e5 73040000 		.4byte	.LLST25
 3517 07e9 16       		.uleb128 0x16
 3518 07ea 21060000 		.4byte	.LASF86
 3519 07ee 01       		.byte	0x1
 3520 07ef 7401     		.2byte	0x174
 3521 07f1 02010000 		.4byte	0x102
 3522 07f5 9F040000 		.4byte	.LLST26
 3523 07f9 18       		.uleb128 0x18
 3524 07fa 1A000000 		.4byte	.LVL74
 3525 07fe 39190000 		.4byte	0x1939
 3526 0802 1A       		.uleb128 0x1a
 3527 0803 2E000000 		.4byte	.LVL78
 3528 0807 F9060000 		.4byte	0x6f9
 3529 080b 1B       		.uleb128 0x1b
 3530 080c 01       		.uleb128 0x1
 3531 080d 50       		.byte	0x50
 3532 080e 02       		.uleb128 0x2
 3533 080f 75       		.byte	0x75
 3534 0810 00       		.sleb128 0
 3535 0811 1B       		.uleb128 0x1b
 3536 0812 01       		.uleb128 0x1
 3537 0813 51       		.byte	0x51
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 122


 3538 0814 02       		.uleb128 0x2
 3539 0815 76       		.byte	0x76
 3540 0816 00       		.sleb128 0
 3541 0817 1B       		.uleb128 0x1b
 3542 0818 01       		.uleb128 0x1
 3543 0819 52       		.byte	0x52
 3544 081a 03       		.uleb128 0x3
 3545 081b 74       		.byte	0x74
 3546 081c C800     		.sleb128 72
 3547 081e 1B       		.uleb128 0x1b
 3548 081f 01       		.uleb128 0x1
 3549 0820 53       		.byte	0x53
 3550 0821 02       		.uleb128 0x2
 3551 0822 77       		.byte	0x77
 3552 0823 00       		.sleb128 0
 3553 0824 1B       		.uleb128 0x1b
 3554 0825 02       		.uleb128 0x2
 3555 0826 7D       		.byte	0x7d
 3556 0827 00       		.sleb128 0
 3557 0828 02       		.uleb128 0x2
 3558 0829 74       		.byte	0x74
 3559 082a 00       		.sleb128 0
 3560 082b 00       		.byte	0
 3561 082c 00       		.byte	0
 3562 082d 21       		.uleb128 0x21
 3563 082e 7D0A0000 		.4byte	.LASF92
 3564 0832 01       		.byte	0x1
 3565 0833 D102     		.2byte	0x2d1
 3566 0835 31020000 		.4byte	0x231
 3567 0839 00000000 		.4byte	.LFB12
 3568 083d 16000000 		.4byte	.LFE12-.LFB12
 3569 0841 01       		.uleb128 0x1
 3570 0842 9C       		.byte	0x9c
 3571 0843 93080000 		.4byte	0x893
 3572 0847 15       		.uleb128 0x15
 3573 0848 82060000 		.4byte	.LASF93
 3574 084c 01       		.byte	0x1
 3575 084d D102     		.2byte	0x2d1
 3576 084f 75070000 		.4byte	0x775
 3577 0853 CE040000 		.4byte	.LLST27
 3578 0857 15       		.uleb128 0x15
 3579 0858 A1040000 		.4byte	.LASF94
 3580 085c 01       		.byte	0x1
 3581 085d D102     		.2byte	0x2d1
 3582 085f 75070000 		.4byte	0x775
 3583 0863 EF040000 		.4byte	.LLST28
 3584 0867 16       		.uleb128 0x16
 3585 0868 EA030000 		.4byte	.LASF66
 3586 086c 01       		.byte	0x1
 3587 086d D302     		.2byte	0x2d3
 3588 086f 31020000 		.4byte	0x231
 3589 0873 0D050000 		.4byte	.LLST29
 3590 0877 1A       		.uleb128 0x1a
 3591 0878 0C000000 		.4byte	.LVL81
 3592 087c 7F070000 		.4byte	0x77f
 3593 0880 1B       		.uleb128 0x1b
 3594 0881 01       		.uleb128 0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 123


 3595 0882 50       		.byte	0x50
 3596 0883 03       		.uleb128 0x3
 3597 0884 F3       		.byte	0xf3
 3598 0885 01       		.uleb128 0x1
 3599 0886 50       		.byte	0x50
 3600 0887 1B       		.uleb128 0x1b
 3601 0888 01       		.uleb128 0x1
 3602 0889 51       		.byte	0x51
 3603 088a 01       		.uleb128 0x1
 3604 088b 30       		.byte	0x30
 3605 088c 1B       		.uleb128 0x1b
 3606 088d 01       		.uleb128 0x1
 3607 088e 52       		.byte	0x52
 3608 088f 01       		.uleb128 0x1
 3609 0890 32       		.byte	0x32
 3610 0891 00       		.byte	0
 3611 0892 00       		.byte	0
 3612 0893 21       		.uleb128 0x21
 3613 0894 50040000 		.4byte	.LASF95
 3614 0898 01       		.byte	0x1
 3615 0899 EB02     		.2byte	0x2eb
 3616 089b E1000000 		.4byte	0xe1
 3617 089f 00000000 		.4byte	.LFB13
 3618 08a3 08010000 		.4byte	.LFE13-.LFB13
 3619 08a7 01       		.uleb128 0x1
 3620 08a8 9C       		.byte	0x9c
 3621 08a9 4D0A0000 		.4byte	0xa4d
 3622 08ad 15       		.uleb128 0x15
 3623 08ae 82020000 		.4byte	.LASF60
 3624 08b2 01       		.byte	0x1
 3625 08b3 EB02     		.2byte	0x2eb
 3626 08b5 31020000 		.4byte	0x231
 3627 08b9 2B050000 		.4byte	.LLST30
 3628 08bd 15       		.uleb128 0x15
 3629 08be 2C080000 		.4byte	.LASF78
 3630 08c2 01       		.byte	0x1
 3631 08c3 EB02     		.2byte	0x2eb
 3632 08c5 4D0A0000 		.4byte	0xa4d
 3633 08c9 57050000 		.4byte	.LLST31
 3634 08cd 15       		.uleb128 0x15
 3635 08ce 8D090000 		.4byte	.LASF96
 3636 08d2 01       		.byte	0x1
 3637 08d3 EB02     		.2byte	0x2eb
 3638 08d5 F7000000 		.4byte	0xf7
 3639 08d9 83050000 		.4byte	.LLST32
 3640 08dd 15       		.uleb128 0x15
 3641 08de BF010000 		.4byte	.LASF97
 3642 08e2 01       		.byte	0x1
 3643 08e3 EB02     		.2byte	0x2eb
 3644 08e5 51050000 		.4byte	0x551
 3645 08e9 C6050000 		.4byte	.LLST33
 3646 08ed 16       		.uleb128 0x16
 3647 08ee CC030000 		.4byte	.LASF98
 3648 08f2 01       		.byte	0x1
 3649 08f3 ED02     		.2byte	0x2ed
 3650 08f5 E1000000 		.4byte	0xe1
 3651 08f9 F2050000 		.4byte	.LLST34
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 124


 3652 08fd 16       		.uleb128 0x16
 3653 08fe 61020000 		.4byte	.LASF99
 3654 0902 01       		.byte	0x1
 3655 0903 ED02     		.2byte	0x2ed
 3656 0905 E1000000 		.4byte	0xe1
 3657 0909 28060000 		.4byte	.LLST35
 3658 090d 17       		.uleb128 0x17
 3659 090e E1030000 		.4byte	.LASF100
 3660 0912 01       		.byte	0x1
 3661 0913 EE02     		.2byte	0x2ee
 3662 0915 26020000 		.4byte	0x226
 3663 0919 02       		.uleb128 0x2
 3664 091a 91       		.byte	0x91
 3665 091b 60       		.sleb128 -32
 3666 091c 16       		.uleb128 0x16
 3667 091d 9A080000 		.4byte	.LASF73
 3668 0921 01       		.byte	0x1
 3669 0922 EF02     		.2byte	0x2ef
 3670 0924 4C050000 		.4byte	0x54c
 3671 0928 46060000 		.4byte	.LLST36
 3672 092c 18       		.uleb128 0x18
 3673 092d 12000000 		.4byte	.LVL86
 3674 0931 EA180000 		.4byte	0x18ea
 3675 0935 1D       		.uleb128 0x1d
 3676 0936 28000000 		.4byte	.LVL87
 3677 093a C0040000 		.4byte	0x4c0
 3678 093e 55090000 		.4byte	0x955
 3679 0942 1B       		.uleb128 0x1b
 3680 0943 01       		.uleb128 0x1
 3681 0944 50       		.byte	0x50
 3682 0945 02       		.uleb128 0x2
 3683 0946 74       		.byte	0x74
 3684 0947 00       		.sleb128 0
 3685 0948 1B       		.uleb128 0x1b
 3686 0949 01       		.uleb128 0x1
 3687 094a 51       		.byte	0x51
 3688 094b 02       		.uleb128 0x2
 3689 094c 77       		.byte	0x77
 3690 094d 00       		.sleb128 0
 3691 094e 1B       		.uleb128 0x1b
 3692 094f 01       		.uleb128 0x1
 3693 0950 52       		.byte	0x52
 3694 0951 02       		.uleb128 0x2
 3695 0952 76       		.byte	0x76
 3696 0953 00       		.sleb128 0
 3697 0954 00       		.byte	0
 3698 0955 1D       		.uleb128 0x1d
 3699 0956 34000000 		.4byte	.LVL89
 3700 095a 15190000 		.4byte	0x1915
 3701 095e 69090000 		.4byte	0x969
 3702 0962 1B       		.uleb128 0x1b
 3703 0963 01       		.uleb128 0x1
 3704 0964 50       		.byte	0x50
 3705 0965 02       		.uleb128 0x2
 3706 0966 74       		.byte	0x74
 3707 0967 24       		.sleb128 36
 3708 0968 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 125


 3709 0969 18       		.uleb128 0x18
 3710 096a 5E000000 		.4byte	.LVL92
 3711 096e F5180000 		.4byte	0x18f5
 3712 0972 18       		.uleb128 0x18
 3713 0973 6A000000 		.4byte	.LVL93
 3714 0977 F5180000 		.4byte	0x18f5
 3715 097b 1D       		.uleb128 0x1d
 3716 097c 76000000 		.4byte	.LVL94
 3717 0980 44190000 		.4byte	0x1944
 3718 0984 8F090000 		.4byte	0x98f
 3719 0988 1B       		.uleb128 0x1b
 3720 0989 01       		.uleb128 0x1
 3721 098a 50       		.byte	0x50
 3722 098b 02       		.uleb128 0x2
 3723 098c 91       		.byte	0x91
 3724 098d 60       		.sleb128 -32
 3725 098e 00       		.byte	0
 3726 098f 18       		.uleb128 0x18
 3727 0990 7C000000 		.4byte	.LVL96
 3728 0994 F5180000 		.4byte	0x18f5
 3729 0998 18       		.uleb128 0x18
 3730 0999 80000000 		.4byte	.LVL97
 3731 099d 50190000 		.4byte	0x1950
 3732 09a1 18       		.uleb128 0x18
 3733 09a2 84000000 		.4byte	.LVL98
 3734 09a6 EA180000 		.4byte	0x18ea
 3735 09aa 18       		.uleb128 0x18
 3736 09ab AC000000 		.4byte	.LVL99
 3737 09af F5180000 		.4byte	0x18f5
 3738 09b3 1D       		.uleb128 0x1d
 3739 09b4 B4000000 		.4byte	.LVL101
 3740 09b8 5C190000 		.4byte	0x195c
 3741 09bc CD090000 		.4byte	0x9cd
 3742 09c0 1B       		.uleb128 0x1b
 3743 09c1 01       		.uleb128 0x1
 3744 09c2 50       		.byte	0x50
 3745 09c3 02       		.uleb128 0x2
 3746 09c4 91       		.byte	0x91
 3747 09c5 60       		.sleb128 -32
 3748 09c6 1B       		.uleb128 0x1b
 3749 09c7 01       		.uleb128 0x1
 3750 09c8 51       		.byte	0x51
 3751 09c9 02       		.uleb128 0x2
 3752 09ca 91       		.byte	0x91
 3753 09cb 5C       		.sleb128 -36
 3754 09cc 00       		.byte	0
 3755 09cd 1D       		.uleb128 0x1d
 3756 09ce BC000000 		.4byte	.LVL102
 3757 09d2 2A040000 		.4byte	0x42a
 3758 09d6 E1090000 		.4byte	0x9e1
 3759 09da 1B       		.uleb128 0x1b
 3760 09db 01       		.uleb128 0x1
 3761 09dc 50       		.byte	0x50
 3762 09dd 02       		.uleb128 0x2
 3763 09de 74       		.byte	0x74
 3764 09df 00       		.sleb128 0
 3765 09e0 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 126


 3766 09e1 1D       		.uleb128 0x1d
 3767 09e2 C8000000 		.4byte	.LVL103
 3768 09e6 68190000 		.4byte	0x1968
 3769 09ea F5090000 		.4byte	0x9f5
 3770 09ee 1B       		.uleb128 0x1b
 3771 09ef 01       		.uleb128 0x1
 3772 09f0 50       		.byte	0x50
 3773 09f1 02       		.uleb128 0x2
 3774 09f2 74       		.byte	0x74
 3775 09f3 10       		.sleb128 16
 3776 09f4 00       		.byte	0
 3777 09f5 1D       		.uleb128 0x1d
 3778 09f6 CE000000 		.4byte	.LVL104
 3779 09fa A2050000 		.4byte	0x5a2
 3780 09fe 090A0000 		.4byte	0xa09
 3781 0a02 1B       		.uleb128 0x1b
 3782 0a03 01       		.uleb128 0x1
 3783 0a04 50       		.byte	0x50
 3784 0a05 02       		.uleb128 0x2
 3785 0a06 74       		.byte	0x74
 3786 0a07 00       		.sleb128 0
 3787 0a08 00       		.byte	0
 3788 0a09 18       		.uleb128 0x18
 3789 0a0a D2000000 		.4byte	.LVL105
 3790 0a0e 74190000 		.4byte	0x1974
 3791 0a12 1D       		.uleb128 0x1d
 3792 0a13 EE000000 		.4byte	.LVL106
 3793 0a17 A2050000 		.4byte	0x5a2
 3794 0a1b 260A0000 		.4byte	0xa26
 3795 0a1f 1B       		.uleb128 0x1b
 3796 0a20 01       		.uleb128 0x1
 3797 0a21 50       		.byte	0x50
 3798 0a22 02       		.uleb128 0x2
 3799 0a23 74       		.byte	0x74
 3800 0a24 00       		.sleb128 0
 3801 0a25 00       		.byte	0
 3802 0a26 18       		.uleb128 0x18
 3803 0a27 F2000000 		.4byte	.LVL107
 3804 0a2b 74190000 		.4byte	0x1974
 3805 0a2f 1D       		.uleb128 0x1d
 3806 0a30 FA000000 		.4byte	.LVL108
 3807 0a34 A2050000 		.4byte	0x5a2
 3808 0a38 430A0000 		.4byte	0xa43
 3809 0a3c 1B       		.uleb128 0x1b
 3810 0a3d 01       		.uleb128 0x1
 3811 0a3e 50       		.byte	0x50
 3812 0a3f 02       		.uleb128 0x2
 3813 0a40 74       		.byte	0x74
 3814 0a41 00       		.sleb128 0
 3815 0a42 00       		.byte	0
 3816 0a43 18       		.uleb128 0x18
 3817 0a44 FE000000 		.4byte	.LVL109
 3818 0a48 74190000 		.4byte	0x1974
 3819 0a4c 00       		.byte	0
 3820 0a4d 07       		.uleb128 0x7
 3821 0a4e B9000000 		.4byte	0xb9
 3822 0a52 19       		.uleb128 0x19
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 127


 3823 0a53 03060000 		.4byte	.LASF101
 3824 0a57 01       		.byte	0x1
 3825 0a58 D901     		.2byte	0x1d9
 3826 0a5a 00000000 		.4byte	.LFB8
 3827 0a5e 18000000 		.4byte	.LFE8-.LFB8
 3828 0a62 01       		.uleb128 0x1
 3829 0a63 9C       		.byte	0x9c
 3830 0a64 990A0000 		.4byte	0xa99
 3831 0a68 15       		.uleb128 0x15
 3832 0a69 E3000000 		.4byte	.LASF88
 3833 0a6d 01       		.byte	0x1
 3834 0a6e D901     		.2byte	0x1d9
 3835 0a70 46050000 		.4byte	0x546
 3836 0a74 72060000 		.4byte	.LLST37
 3837 0a78 1A       		.uleb128 0x1a
 3838 0a79 14000000 		.4byte	.LVL112
 3839 0a7d 93080000 		.4byte	0x893
 3840 0a81 1B       		.uleb128 0x1b
 3841 0a82 01       		.uleb128 0x1
 3842 0a83 50       		.byte	0x50
 3843 0a84 03       		.uleb128 0x3
 3844 0a85 F3       		.byte	0xf3
 3845 0a86 01       		.uleb128 0x1
 3846 0a87 50       		.byte	0x50
 3847 0a88 1B       		.uleb128 0x1b
 3848 0a89 01       		.uleb128 0x1
 3849 0a8a 51       		.byte	0x51
 3850 0a8b 01       		.uleb128 0x1
 3851 0a8c 30       		.byte	0x30
 3852 0a8d 1B       		.uleb128 0x1b
 3853 0a8e 01       		.uleb128 0x1
 3854 0a8f 52       		.byte	0x52
 3855 0a90 01       		.uleb128 0x1
 3856 0a91 30       		.byte	0x30
 3857 0a92 1B       		.uleb128 0x1b
 3858 0a93 01       		.uleb128 0x1
 3859 0a94 53       		.byte	0x53
 3860 0a95 01       		.uleb128 0x1
 3861 0a96 30       		.byte	0x30
 3862 0a97 00       		.byte	0
 3863 0a98 00       		.byte	0
 3864 0a99 21       		.uleb128 0x21
 3865 0a9a D0050000 		.4byte	.LASF102
 3866 0a9e 01       		.byte	0x1
 3867 0a9f F701     		.2byte	0x1f7
 3868 0aa1 31020000 		.4byte	0x231
 3869 0aa5 00000000 		.4byte	.LFB9
 3870 0aa9 16000000 		.4byte	.LFE9-.LFB9
 3871 0aad 01       		.uleb128 0x1
 3872 0aae 9C       		.byte	0x9c
 3873 0aaf 160B0000 		.4byte	0xb16
 3874 0ab3 15       		.uleb128 0x15
 3875 0ab4 07070000 		.4byte	.LASF87
 3876 0ab8 01       		.byte	0x1
 3877 0ab9 F701     		.2byte	0x1f7
 3878 0abb 7A070000 		.4byte	0x77a
 3879 0abf 9E060000 		.4byte	.LLST38
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 128


 3880 0ac3 16       		.uleb128 0x16
 3881 0ac4 63060000 		.4byte	.LASF83
 3882 0ac8 01       		.byte	0x1
 3883 0ac9 F901     		.2byte	0x1f9
 3884 0acb 31020000 		.4byte	0x231
 3885 0acf BF060000 		.4byte	.LLST39
 3886 0ad3 22       		.uleb128 0x22
 3887 0ad4 C8040000 		.4byte	.LASF103
 3888 0ad8 01       		.byte	0x1
 3889 0ad9 FA01     		.2byte	0x1fa
 3890 0adb 75070000 		.4byte	0x775
 3891 0adf 01       		.byte	0x1
 3892 0ae0 22       		.uleb128 0x22
 3893 0ae1 55020000 		.4byte	.LASF104
 3894 0ae5 01       		.byte	0x1
 3895 0ae6 FA01     		.2byte	0x1fa
 3896 0ae8 75070000 		.4byte	0x775
 3897 0aec 00       		.byte	0
 3898 0aed 1D       		.uleb128 0x1d
 3899 0aee 0C000000 		.4byte	.LVL117
 3900 0af2 7F070000 		.4byte	0x77f
 3901 0af6 050B0000 		.4byte	0xb05
 3902 0afa 1B       		.uleb128 0x1b
 3903 0afb 01       		.uleb128 0x1
 3904 0afc 50       		.byte	0x50
 3905 0afd 01       		.uleb128 0x1
 3906 0afe 31       		.byte	0x31
 3907 0aff 1B       		.uleb128 0x1b
 3908 0b00 01       		.uleb128 0x1
 3909 0b01 51       		.byte	0x51
 3910 0b02 01       		.uleb128 0x1
 3911 0b03 30       		.byte	0x30
 3912 0b04 00       		.byte	0
 3913 0b05 1A       		.uleb128 0x1a
 3914 0b06 12000000 		.4byte	.LVL119
 3915 0b0a 520A0000 		.4byte	0xa52
 3916 0b0e 1B       		.uleb128 0x1b
 3917 0b0f 01       		.uleb128 0x1
 3918 0b10 50       		.byte	0x50
 3919 0b11 02       		.uleb128 0x2
 3920 0b12 74       		.byte	0x74
 3921 0b13 00       		.sleb128 0
 3922 0b14 00       		.byte	0
 3923 0b15 00       		.byte	0
 3924 0b16 21       		.uleb128 0x21
 3925 0b17 C3090000 		.4byte	.LASF105
 3926 0b1b 01       		.byte	0x1
 3927 0b1c 5402     		.2byte	0x254
 3928 0b1e E1000000 		.4byte	0xe1
 3929 0b22 00000000 		.4byte	.LFB10
 3930 0b26 2C000000 		.4byte	.LFE10-.LFB10
 3931 0b2a 01       		.uleb128 0x1
 3932 0b2b 9C       		.byte	0x9c
 3933 0b2c 780B0000 		.4byte	0xb78
 3934 0b30 15       		.uleb128 0x15
 3935 0b31 31060000 		.4byte	.LASF106
 3936 0b35 01       		.byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 129


 3937 0b36 5402     		.2byte	0x254
 3938 0b38 31020000 		.4byte	0x231
 3939 0b3c DD060000 		.4byte	.LLST40
 3940 0b40 17       		.uleb128 0x17
 3941 0b41 A2080000 		.4byte	.LASF75
 3942 0b45 01       		.byte	0x1
 3943 0b46 5602     		.2byte	0x256
 3944 0b48 E1000000 		.4byte	0xe1
 3945 0b4c 01       		.uleb128 0x1
 3946 0b4d 50       		.byte	0x50
 3947 0b4e 16       		.uleb128 0x16
 3948 0b4f A8000000 		.4byte	.LASF107
 3949 0b53 01       		.byte	0x1
 3950 0b54 5702     		.2byte	0x257
 3951 0b56 4C050000 		.4byte	0x54c
 3952 0b5a FB060000 		.4byte	.LLST41
 3953 0b5e 18       		.uleb128 0x18
 3954 0b5f 0A000000 		.4byte	.LVL122
 3955 0b63 80190000 		.4byte	0x1980
 3956 0b67 1A       		.uleb128 0x1a
 3957 0b68 20000000 		.4byte	.LVL123
 3958 0b6c 93080000 		.4byte	0x893
 3959 0b70 1B       		.uleb128 0x1b
 3960 0b71 01       		.uleb128 0x1
 3961 0b72 50       		.byte	0x50
 3962 0b73 02       		.uleb128 0x2
 3963 0b74 74       		.byte	0x74
 3964 0b75 00       		.sleb128 0
 3965 0b76 00       		.byte	0
 3966 0b77 00       		.byte	0
 3967 0b78 21       		.uleb128 0x21
 3968 0b79 14040000 		.4byte	.LASF108
 3969 0b7d 01       		.byte	0x1
 3970 0b7e BD03     		.2byte	0x3bd
 3971 0b80 E1000000 		.4byte	0xe1
 3972 0b84 00000000 		.4byte	.LFB14
 3973 0b88 6E000000 		.4byte	.LFE14-.LFB14
 3974 0b8c 01       		.uleb128 0x1
 3975 0b8d 9C       		.byte	0x9c
 3976 0b8e 850C0000 		.4byte	0xc85
 3977 0b92 15       		.uleb128 0x15
 3978 0b93 82020000 		.4byte	.LASF60
 3979 0b97 01       		.byte	0x1
 3980 0b98 BD03     		.2byte	0x3bd
 3981 0b9a 31020000 		.4byte	0x231
 3982 0b9e 19070000 		.4byte	.LLST42
 3983 0ba2 15       		.uleb128 0x15
 3984 0ba3 2C080000 		.4byte	.LASF78
 3985 0ba7 01       		.byte	0x1
 3986 0ba8 BD03     		.2byte	0x3bd
 3987 0baa 4D0A0000 		.4byte	0xa4d
 3988 0bae 69070000 		.4byte	.LLST43
 3989 0bb2 15       		.uleb128 0x15
 3990 0bb3 8E000000 		.4byte	.LASF109
 3991 0bb7 01       		.byte	0x1
 3992 0bb8 BD03     		.2byte	0x3bd
 3993 0bba 8B0C0000 		.4byte	0xc8b
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 130


 3994 0bbe A3070000 		.4byte	.LLST44
 3995 0bc2 15       		.uleb128 0x15
 3996 0bc3 BF010000 		.4byte	.LASF97
 3997 0bc7 01       		.byte	0x1
 3998 0bc8 BD03     		.2byte	0x3bd
 3999 0bca 51050000 		.4byte	0x551
 4000 0bce E5070000 		.4byte	.LLST45
 4001 0bd2 17       		.uleb128 0x17
 4002 0bd3 A2080000 		.4byte	.LASF75
 4003 0bd7 01       		.byte	0x1
 4004 0bd8 BF03     		.2byte	0x3bf
 4005 0bda E1000000 		.4byte	0xe1
 4006 0bde 01       		.uleb128 0x1
 4007 0bdf 50       		.byte	0x50
 4008 0be0 23       		.uleb128 0x23
 4009 0be1 18020000 		.4byte	.LASF110
 4010 0be5 01       		.byte	0x1
 4011 0be6 C003     		.2byte	0x3c0
 4012 0be8 EC000000 		.4byte	0xec
 4013 0bec 16       		.uleb128 0x16
 4014 0bed 9A080000 		.4byte	.LASF73
 4015 0bf1 01       		.byte	0x1
 4016 0bf2 C103     		.2byte	0x3c1
 4017 0bf4 4C050000 		.4byte	0x54c
 4018 0bf8 1F080000 		.4byte	.LLST46
 4019 0bfc 24       		.uleb128 0x24
 4020 0bfd A0030000 		.4byte	0x3a0
 4021 0c01 02000000 		.4byte	.LBB25
 4022 0c05 14000000 		.4byte	.LBE25-.LBB25
 4023 0c09 01       		.byte	0x1
 4024 0c0a DC03     		.2byte	0x3dc
 4025 0c0c 250C0000 		.4byte	0xc25
 4026 0c10 25       		.uleb128 0x25
 4027 0c11 02000000 		.4byte	.LBB26
 4028 0c15 14000000 		.4byte	.LBE26-.LBB26
 4029 0c19 26       		.uleb128 0x26
 4030 0c1a B0030000 		.4byte	0x3b0
 4031 0c1e 26       		.uleb128 0x26
 4032 0c1f BB030000 		.4byte	0x3bb
 4033 0c23 00       		.byte	0
 4034 0c24 00       		.byte	0
 4035 0c25 27       		.uleb128 0x27
 4036 0c26 00000000 		.4byte	.Ldebug_ranges0+0
 4037 0c2a 6A0C0000 		.4byte	0xc6a
 4038 0c2e 16       		.uleb128 0x16
 4039 0c2f 8D010000 		.4byte	.LASF51
 4040 0c33 01       		.byte	0x1
 4041 0c34 E003     		.2byte	0x3e0
 4042 0c36 900C0000 		.4byte	0xc90
 4043 0c3a 6F080000 		.4byte	.LLST47
 4044 0c3e 1D       		.uleb128 0x1d
 4045 0c3f 32000000 		.4byte	.LVL131
 4046 0c43 C0040000 		.4byte	0x4c0
 4047 0c47 590C0000 		.4byte	0xc59
 4048 0c4b 1B       		.uleb128 0x1b
 4049 0c4c 01       		.uleb128 0x1
 4050 0c4d 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 131


 4051 0c4e 02       		.uleb128 0x2
 4052 0c4f 75       		.byte	0x75
 4053 0c50 00       		.sleb128 0
 4054 0c51 1B       		.uleb128 0x1b
 4055 0c52 01       		.uleb128 0x1
 4056 0c53 52       		.byte	0x52
 4057 0c54 03       		.uleb128 0x3
 4058 0c55 F3       		.byte	0xf3
 4059 0c56 01       		.uleb128 0x1
 4060 0c57 53       		.byte	0x53
 4061 0c58 00       		.byte	0
 4062 0c59 1A       		.uleb128 0x1a
 4063 0c5a 44000000 		.4byte	.LVL132
 4064 0c5e 15190000 		.4byte	0x1915
 4065 0c62 1B       		.uleb128 0x1b
 4066 0c63 01       		.uleb128 0x1
 4067 0c64 50       		.byte	0x50
 4068 0c65 02       		.uleb128 0x2
 4069 0c66 75       		.byte	0x75
 4070 0c67 24       		.sleb128 36
 4071 0c68 00       		.byte	0
 4072 0c69 00       		.byte	0
 4073 0c6a 28       		.uleb128 0x28
 4074 0c6b C7030000 		.4byte	0x3c7
 4075 0c6f 68000000 		.4byte	.LBB29
 4076 0c73 04000000 		.4byte	.LBE29-.LBB29
 4077 0c77 01       		.byte	0x1
 4078 0c78 4E04     		.2byte	0x44e
 4079 0c7a 29       		.uleb128 0x29
 4080 0c7b D3030000 		.4byte	0x3d3
 4081 0c7f 9A080000 		.4byte	.LLST48
 4082 0c83 00       		.byte	0
 4083 0c84 00       		.byte	0
 4084 0c85 06       		.uleb128 0x6
 4085 0c86 04       		.byte	0x4
 4086 0c87 E1000000 		.4byte	0xe1
 4087 0c8b 07       		.uleb128 0x7
 4088 0c8c 850C0000 		.4byte	0xc85
 4089 0c90 07       		.uleb128 0x7
 4090 0c91 C0000000 		.4byte	0xc0
 4091 0c95 21       		.uleb128 0x21
 4092 0c96 1C050000 		.4byte	.LASF111
 4093 0c9a 01       		.byte	0x1
 4094 0c9b 5404     		.2byte	0x454
 4095 0c9d E1000000 		.4byte	0xe1
 4096 0ca1 00000000 		.4byte	.LFB15
 4097 0ca5 64000000 		.4byte	.LFE15-.LFB15
 4098 0ca9 01       		.uleb128 0x1
 4099 0caa 9C       		.byte	0x9c
 4100 0cab 840D0000 		.4byte	0xd84
 4101 0caf 15       		.uleb128 0x15
 4102 0cb0 82020000 		.4byte	.LASF60
 4103 0cb4 01       		.byte	0x1
 4104 0cb5 5404     		.2byte	0x454
 4105 0cb7 31020000 		.4byte	0x231
 4106 0cbb AD080000 		.4byte	.LLST49
 4107 0cbf 15       		.uleb128 0x15
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 132


 4108 0cc0 8E000000 		.4byte	.LASF109
 4109 0cc4 01       		.byte	0x1
 4110 0cc5 5404     		.2byte	0x454
 4111 0cc7 8B0C0000 		.4byte	0xc8b
 4112 0ccb 26090000 		.4byte	.LLST50
 4113 0ccf 17       		.uleb128 0x17
 4114 0cd0 A2080000 		.4byte	.LASF75
 4115 0cd4 01       		.byte	0x1
 4116 0cd5 5604     		.2byte	0x456
 4117 0cd7 E1000000 		.4byte	0xe1
 4118 0cdb 01       		.uleb128 0x1
 4119 0cdc 50       		.byte	0x50
 4120 0cdd 23       		.uleb128 0x23
 4121 0cde 18020000 		.4byte	.LASF110
 4122 0ce2 01       		.byte	0x1
 4123 0ce3 5704     		.2byte	0x457
 4124 0ce5 EC000000 		.4byte	0xec
 4125 0ce9 16       		.uleb128 0x16
 4126 0cea 9A080000 		.4byte	.LASF73
 4127 0cee 01       		.byte	0x1
 4128 0cef 5804     		.2byte	0x458
 4129 0cf1 4C050000 		.4byte	0x54c
 4130 0cf5 68090000 		.4byte	.LLST51
 4131 0cf9 24       		.uleb128 0x24
 4132 0cfa A0030000 		.4byte	0x3a0
 4133 0cfe 02000000 		.4byte	.LBB31
 4134 0d02 14000000 		.4byte	.LBE31-.LBB31
 4135 0d06 01       		.byte	0x1
 4136 0d07 7B04     		.2byte	0x47b
 4137 0d09 220D0000 		.4byte	0xd22
 4138 0d0d 25       		.uleb128 0x25
 4139 0d0e 02000000 		.4byte	.LBB32
 4140 0d12 14000000 		.4byte	.LBE32-.LBB32
 4141 0d16 26       		.uleb128 0x26
 4142 0d17 B0030000 		.4byte	0x3b0
 4143 0d1b 26       		.uleb128 0x26
 4144 0d1c BB030000 		.4byte	0x3bb
 4145 0d20 00       		.byte	0
 4146 0d21 00       		.byte	0
 4147 0d22 1C       		.uleb128 0x1c
 4148 0d23 16000000 		.4byte	.LBB33
 4149 0d27 48000000 		.4byte	.LBE33-.LBB33
 4150 0d2b 690D0000 		.4byte	0xd69
 4151 0d2f 16       		.uleb128 0x16
 4152 0d30 F9020000 		.4byte	.LASF47
 4153 0d34 01       		.byte	0x1
 4154 0d35 7D04     		.2byte	0x47d
 4155 0d37 75070000 		.4byte	0x775
 4156 0d3b E1090000 		.4byte	.LLST52
 4157 0d3f 2A       		.uleb128 0x2a
 4158 0d40 18000000 		.4byte	.Ldebug_ranges0+0x18
 4159 0d44 16       		.uleb128 0x16
 4160 0d45 8D010000 		.4byte	.LASF51
 4161 0d49 01       		.byte	0x1
 4162 0d4a 8404     		.2byte	0x484
 4163 0d4c 900C0000 		.4byte	0xc90
 4164 0d50 260A0000 		.4byte	.LLST53
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 133


 4165 0d54 1A       		.uleb128 0x1a
 4166 0d55 3A000000 		.4byte	.LVL147
 4167 0d59 15190000 		.4byte	0x1915
 4168 0d5d 1B       		.uleb128 0x1b
 4169 0d5e 01       		.uleb128 0x1
 4170 0d5f 50       		.byte	0x50
 4171 0d60 05       		.uleb128 0x5
 4172 0d61 F3       		.byte	0xf3
 4173 0d62 01       		.uleb128 0x1
 4174 0d63 50       		.byte	0x50
 4175 0d64 23       		.byte	0x23
 4176 0d65 24       		.uleb128 0x24
 4177 0d66 00       		.byte	0
 4178 0d67 00       		.byte	0
 4179 0d68 00       		.byte	0
 4180 0d69 28       		.uleb128 0x28
 4181 0d6a C7030000 		.4byte	0x3c7
 4182 0d6e 5E000000 		.4byte	.LBB36
 4183 0d72 04000000 		.4byte	.LBE36-.LBB36
 4184 0d76 01       		.byte	0x1
 4185 0d77 F304     		.2byte	0x4f3
 4186 0d79 29       		.uleb128 0x29
 4187 0d7a D3030000 		.4byte	0x3d3
 4188 0d7e 510A0000 		.4byte	.LLST54
 4189 0d82 00       		.byte	0
 4190 0d83 00       		.byte	0
 4191 0d84 21       		.uleb128 0x21
 4192 0d85 54000000 		.4byte	.LASF112
 4193 0d89 01       		.byte	0x1
 4194 0d8a F904     		.2byte	0x4f9
 4195 0d8c E1000000 		.4byte	0xe1
 4196 0d90 00000000 		.4byte	.LFB16
 4197 0d94 F8000000 		.4byte	.LFE16-.LFB16
 4198 0d98 01       		.uleb128 0x1
 4199 0d99 9C       		.byte	0x9c
 4200 0d9a 420F0000 		.4byte	0xf42
 4201 0d9e 15       		.uleb128 0x15
 4202 0d9f 82020000 		.4byte	.LASF60
 4203 0da3 01       		.byte	0x1
 4204 0da4 F904     		.2byte	0x4f9
 4205 0da6 31020000 		.4byte	0x231
 4206 0daa 640A0000 		.4byte	.LLST55
 4207 0dae 15       		.uleb128 0x15
 4208 0daf C0020000 		.4byte	.LASF80
 4209 0db3 01       		.byte	0x1
 4210 0db4 F904     		.2byte	0x4f9
 4211 0db6 9D050000 		.4byte	0x59d
 4212 0dba 900A0000 		.4byte	.LLST56
 4213 0dbe 15       		.uleb128 0x15
 4214 0dbf 8D090000 		.4byte	.LASF96
 4215 0dc3 01       		.byte	0x1
 4216 0dc4 F904     		.2byte	0x4f9
 4217 0dc6 F7000000 		.4byte	0xf7
 4218 0dca BC0A0000 		.4byte	.LLST57
 4219 0dce 16       		.uleb128 0x16
 4220 0dcf CC030000 		.4byte	.LASF98
 4221 0dd3 01       		.byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 134


 4222 0dd4 FB04     		.2byte	0x4fb
 4223 0dd6 E1000000 		.4byte	0xe1
 4224 0dda FF0A0000 		.4byte	.LLST58
 4225 0dde 17       		.uleb128 0x17
 4226 0ddf E1030000 		.4byte	.LASF100
 4227 0de3 01       		.byte	0x1
 4228 0de4 FC04     		.2byte	0x4fc
 4229 0de6 26020000 		.4byte	0x226
 4230 0dea 02       		.uleb128 0x2
 4231 0deb 91       		.byte	0x91
 4232 0dec 60       		.sleb128 -32
 4233 0ded 16       		.uleb128 0x16
 4234 0dee 9A080000 		.4byte	.LASF73
 4235 0df2 01       		.byte	0x1
 4236 0df3 FD04     		.2byte	0x4fd
 4237 0df5 4C050000 		.4byte	0x54c
 4238 0df9 350B0000 		.4byte	.LLST59
 4239 0dfd 1C       		.uleb128 0x1c
 4240 0dfe 10000000 		.4byte	.LBB38
 4241 0e02 4C000000 		.4byte	.LBE38-.LBB38
 4242 0e06 6B0E0000 		.4byte	0xe6b
 4243 0e0a 16       		.uleb128 0x16
 4244 0e0b F9020000 		.4byte	.LASF47
 4245 0e0f 01       		.byte	0x1
 4246 0e10 1505     		.2byte	0x515
 4247 0e12 75070000 		.4byte	0x775
 4248 0e16 610B0000 		.4byte	.LLST60
 4249 0e1a 1D       		.uleb128 0x1d
 4250 0e1b 1C000000 		.4byte	.LVL164
 4251 0e1f 56050000 		.4byte	0x556
 4252 0e23 340E0000 		.4byte	0xe34
 4253 0e27 1B       		.uleb128 0x1b
 4254 0e28 01       		.uleb128 0x1
 4255 0e29 50       		.byte	0x50
 4256 0e2a 02       		.uleb128 0x2
 4257 0e2b 74       		.byte	0x74
 4258 0e2c 00       		.sleb128 0
 4259 0e2d 1B       		.uleb128 0x1b
 4260 0e2e 01       		.uleb128 0x1
 4261 0e2f 51       		.byte	0x51
 4262 0e30 02       		.uleb128 0x2
 4263 0e31 77       		.byte	0x77
 4264 0e32 00       		.sleb128 0
 4265 0e33 00       		.byte	0
 4266 0e34 1D       		.uleb128 0x1d
 4267 0e35 2C000000 		.4byte	.LVL166
 4268 0e39 15190000 		.4byte	0x1915
 4269 0e3d 480E0000 		.4byte	0xe48
 4270 0e41 1B       		.uleb128 0x1b
 4271 0e42 01       		.uleb128 0x1
 4272 0e43 50       		.byte	0x50
 4273 0e44 02       		.uleb128 0x2
 4274 0e45 74       		.byte	0x74
 4275 0e46 10       		.sleb128 16
 4276 0e47 00       		.byte	0
 4277 0e48 18       		.uleb128 0x18
 4278 0e49 42000000 		.4byte	.LVL167
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 135


 4279 0e4d F5180000 		.4byte	0x18f5
 4280 0e51 18       		.uleb128 0x18
 4281 0e52 4E000000 		.4byte	.LVL169
 4282 0e56 F5180000 		.4byte	0x18f5
 4283 0e5a 1A       		.uleb128 0x1a
 4284 0e5b 5A000000 		.4byte	.LVL170
 4285 0e5f 44190000 		.4byte	0x1944
 4286 0e63 1B       		.uleb128 0x1b
 4287 0e64 01       		.uleb128 0x1
 4288 0e65 50       		.byte	0x50
 4289 0e66 02       		.uleb128 0x2
 4290 0e67 91       		.byte	0x91
 4291 0e68 60       		.sleb128 -32
 4292 0e69 00       		.byte	0
 4293 0e6a 00       		.byte	0
 4294 0e6b 18       		.uleb128 0x18
 4295 0e6c 10000000 		.4byte	.LVL162
 4296 0e70 EA180000 		.4byte	0x18ea
 4297 0e74 18       		.uleb128 0x18
 4298 0e75 60000000 		.4byte	.LVL172
 4299 0e79 F5180000 		.4byte	0x18f5
 4300 0e7d 18       		.uleb128 0x18
 4301 0e7e 64000000 		.4byte	.LVL173
 4302 0e82 50190000 		.4byte	0x1950
 4303 0e86 18       		.uleb128 0x18
 4304 0e87 68000000 		.4byte	.LVL174
 4305 0e8b EA180000 		.4byte	0x18ea
 4306 0e8f 18       		.uleb128 0x18
 4307 0e90 90000000 		.4byte	.LVL175
 4308 0e94 F5180000 		.4byte	0x18f5
 4309 0e98 1D       		.uleb128 0x1d
 4310 0e99 98000000 		.4byte	.LVL177
 4311 0e9d 5C190000 		.4byte	0x195c
 4312 0ea1 B20E0000 		.4byte	0xeb2
 4313 0ea5 1B       		.uleb128 0x1b
 4314 0ea6 01       		.uleb128 0x1
 4315 0ea7 50       		.byte	0x50
 4316 0ea8 02       		.uleb128 0x2
 4317 0ea9 91       		.byte	0x91
 4318 0eaa 60       		.sleb128 -32
 4319 0eab 1B       		.uleb128 0x1b
 4320 0eac 01       		.uleb128 0x1
 4321 0ead 51       		.byte	0x51
 4322 0eae 02       		.uleb128 0x2
 4323 0eaf 91       		.byte	0x91
 4324 0eb0 5C       		.sleb128 -36
 4325 0eb1 00       		.byte	0
 4326 0eb2 1D       		.uleb128 0x1d
 4327 0eb3 A0000000 		.4byte	.LVL178
 4328 0eb7 75040000 		.4byte	0x475
 4329 0ebb C60E0000 		.4byte	0xec6
 4330 0ebf 1B       		.uleb128 0x1b
 4331 0ec0 01       		.uleb128 0x1
 4332 0ec1 50       		.byte	0x50
 4333 0ec2 02       		.uleb128 0x2
 4334 0ec3 74       		.byte	0x74
 4335 0ec4 00       		.sleb128 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 136


 4336 0ec5 00       		.byte	0
 4337 0ec6 1D       		.uleb128 0x1d
 4338 0ec7 AC000000 		.4byte	.LVL179
 4339 0ecb 68190000 		.4byte	0x1968
 4340 0ecf DA0E0000 		.4byte	0xeda
 4341 0ed3 1B       		.uleb128 0x1b
 4342 0ed4 01       		.uleb128 0x1
 4343 0ed5 50       		.byte	0x50
 4344 0ed6 02       		.uleb128 0x2
 4345 0ed7 74       		.byte	0x74
 4346 0ed8 24       		.sleb128 36
 4347 0ed9 00       		.byte	0
 4348 0eda 1D       		.uleb128 0x1d
 4349 0edb B2000000 		.4byte	.LVL180
 4350 0edf A2050000 		.4byte	0x5a2
 4351 0ee3 EE0E0000 		.4byte	0xeee
 4352 0ee7 1B       		.uleb128 0x1b
 4353 0ee8 01       		.uleb128 0x1
 4354 0ee9 50       		.byte	0x50
 4355 0eea 02       		.uleb128 0x2
 4356 0eeb 74       		.byte	0x74
 4357 0eec 00       		.sleb128 0
 4358 0eed 00       		.byte	0
 4359 0eee 18       		.uleb128 0x18
 4360 0eef B6000000 		.4byte	.LVL181
 4361 0ef3 74190000 		.4byte	0x1974
 4362 0ef7 1D       		.uleb128 0x1d
 4363 0ef8 D2000000 		.4byte	.LVL182
 4364 0efc A2050000 		.4byte	0x5a2
 4365 0f00 0B0F0000 		.4byte	0xf0b
 4366 0f04 1B       		.uleb128 0x1b
 4367 0f05 01       		.uleb128 0x1
 4368 0f06 50       		.byte	0x50
 4369 0f07 02       		.uleb128 0x2
 4370 0f08 74       		.byte	0x74
 4371 0f09 00       		.sleb128 0
 4372 0f0a 00       		.byte	0
 4373 0f0b 18       		.uleb128 0x18
 4374 0f0c D6000000 		.4byte	.LVL183
 4375 0f10 74190000 		.4byte	0x1974
 4376 0f14 1D       		.uleb128 0x1d
 4377 0f15 DE000000 		.4byte	.LVL184
 4378 0f19 A2050000 		.4byte	0x5a2
 4379 0f1d 280F0000 		.4byte	0xf28
 4380 0f21 1B       		.uleb128 0x1b
 4381 0f22 01       		.uleb128 0x1
 4382 0f23 50       		.byte	0x50
 4383 0f24 02       		.uleb128 0x2
 4384 0f25 74       		.byte	0x74
 4385 0f26 00       		.sleb128 0
 4386 0f27 00       		.byte	0
 4387 0f28 18       		.uleb128 0x18
 4388 0f29 E2000000 		.4byte	.LVL185
 4389 0f2d 74190000 		.4byte	0x1974
 4390 0f31 1A       		.uleb128 0x1a
 4391 0f32 E8000000 		.4byte	.LVL186
 4392 0f36 75040000 		.4byte	0x475
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 137


 4393 0f3a 1B       		.uleb128 0x1b
 4394 0f3b 01       		.uleb128 0x1
 4395 0f3c 50       		.byte	0x50
 4396 0f3d 02       		.uleb128 0x2
 4397 0f3e 74       		.byte	0x74
 4398 0f3f 00       		.sleb128 0
 4399 0f40 00       		.byte	0
 4400 0f41 00       		.byte	0
 4401 0f42 21       		.uleb128 0x21
 4402 0f43 B0000000 		.4byte	.LASF113
 4403 0f47 01       		.byte	0x1
 4404 0f48 8605     		.2byte	0x586
 4405 0f4a E1000000 		.4byte	0xe1
 4406 0f4e 00000000 		.4byte	.LFB17
 4407 0f52 28010000 		.4byte	.LFE17-.LFB17
 4408 0f56 01       		.uleb128 0x1
 4409 0f57 9C       		.byte	0x9c
 4410 0f58 5B110000 		.4byte	0x115b
 4411 0f5c 15       		.uleb128 0x15
 4412 0f5d 82020000 		.4byte	.LASF60
 4413 0f61 01       		.byte	0x1
 4414 0f62 8605     		.2byte	0x586
 4415 0f64 31020000 		.4byte	0x231
 4416 0f68 8C0B0000 		.4byte	.LLST61
 4417 0f6c 15       		.uleb128 0x15
 4418 0f6d 8D090000 		.4byte	.LASF96
 4419 0f71 01       		.byte	0x1
 4420 0f72 8605     		.2byte	0x586
 4421 0f74 F7000000 		.4byte	0xf7
 4422 0f78 B80B0000 		.4byte	.LLST62
 4423 0f7c 16       		.uleb128 0x16
 4424 0f7d CC030000 		.4byte	.LASF98
 4425 0f81 01       		.byte	0x1
 4426 0f82 8805     		.2byte	0x588
 4427 0f84 E1000000 		.4byte	0xe1
 4428 0f88 FB0B0000 		.4byte	.LLST63
 4429 0f8c 17       		.uleb128 0x17
 4430 0f8d E1030000 		.4byte	.LASF100
 4431 0f91 01       		.byte	0x1
 4432 0f92 8905     		.2byte	0x589
 4433 0f94 26020000 		.4byte	0x226
 4434 0f98 02       		.uleb128 0x2
 4435 0f99 91       		.byte	0x91
 4436 0f9a 68       		.sleb128 -24
 4437 0f9b 16       		.uleb128 0x16
 4438 0f9c 9A080000 		.4byte	.LASF73
 4439 0fa0 01       		.byte	0x1
 4440 0fa1 8A05     		.2byte	0x58a
 4441 0fa3 4C050000 		.4byte	0x54c
 4442 0fa7 310C0000 		.4byte	.LLST64
 4443 0fab 16       		.uleb128 0x16
 4444 0fac 63070000 		.4byte	.LASF114
 4445 0fb0 01       		.byte	0x1
 4446 0fb1 8D05     		.2byte	0x58d
 4447 0fb3 E1000000 		.4byte	0xe1
 4448 0fb7 5D0C0000 		.4byte	.LLST65
 4449 0fbb 1C       		.uleb128 0x1c
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 138


 4450 0fbc 10000000 		.4byte	.LBB39
 4451 0fc0 4E000000 		.4byte	.LBE39-.LBB39
 4452 0fc4 18100000 		.4byte	0x1018
 4453 0fc8 16       		.uleb128 0x16
 4454 0fc9 1A070000 		.4byte	.LASF115
 4455 0fcd 01       		.byte	0x1
 4456 0fce A805     		.2byte	0x5a8
 4457 0fd0 75070000 		.4byte	0x775
 4458 0fd4 920C0000 		.4byte	.LLST66
 4459 0fd8 18       		.uleb128 0x18
 4460 0fd9 20000000 		.4byte	.LVL196
 4461 0fdd 8C190000 		.4byte	0x198c
 4462 0fe1 1D       		.uleb128 0x1d
 4463 0fe2 2E000000 		.4byte	.LVL197
 4464 0fe6 15190000 		.4byte	0x1915
 4465 0fea F50F0000 		.4byte	0xff5
 4466 0fee 1B       		.uleb128 0x1b
 4467 0fef 01       		.uleb128 0x1
 4468 0ff0 50       		.byte	0x50
 4469 0ff1 02       		.uleb128 0x2
 4470 0ff2 74       		.byte	0x74
 4471 0ff3 10       		.sleb128 16
 4472 0ff4 00       		.byte	0
 4473 0ff5 18       		.uleb128 0x18
 4474 0ff6 44000000 		.4byte	.LVL198
 4475 0ffa F5180000 		.4byte	0x18f5
 4476 0ffe 18       		.uleb128 0x18
 4477 0fff 50000000 		.4byte	.LVL201
 4478 1003 F5180000 		.4byte	0x18f5
 4479 1007 1A       		.uleb128 0x1a
 4480 1008 5C000000 		.4byte	.LVL202
 4481 100c 44190000 		.4byte	0x1944
 4482 1010 1B       		.uleb128 0x1b
 4483 1011 01       		.uleb128 0x1
 4484 1012 50       		.byte	0x50
 4485 1013 02       		.uleb128 0x2
 4486 1014 91       		.byte	0x91
 4487 1015 68       		.sleb128 -24
 4488 1016 00       		.byte	0
 4489 1017 00       		.byte	0
 4490 1018 1C       		.uleb128 0x1c
 4491 1019 08010000 		.4byte	.LBB40
 4492 101d 0E000000 		.4byte	.LBE40-.LBB40
 4493 1021 53100000 		.4byte	0x1053
 4494 1025 16       		.uleb128 0x16
 4495 1026 12090000 		.4byte	.LASF116
 4496 102a 01       		.byte	0x1
 4497 102b 4506     		.2byte	0x645
 4498 102d EC000000 		.4byte	0xec
 4499 1031 CD0C0000 		.4byte	.LLST67
 4500 1035 1D       		.uleb128 0x1d
 4501 1036 0E010000 		.4byte	.LVL224
 4502 103a DF030000 		.4byte	0x3df
 4503 103e 49100000 		.4byte	0x1049
 4504 1042 1B       		.uleb128 0x1b
 4505 1043 01       		.uleb128 0x1
 4506 1044 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 139


 4507 1045 02       		.uleb128 0x2
 4508 1046 74       		.byte	0x74
 4509 1047 00       		.sleb128 0
 4510 1048 00       		.byte	0
 4511 1049 18       		.uleb128 0x18
 4512 104a 16010000 		.4byte	.LVL226
 4513 104e 98190000 		.4byte	0x1998
 4514 1052 00       		.byte	0
 4515 1053 18       		.uleb128 0x18
 4516 1054 10000000 		.4byte	.LVL192
 4517 1058 EA180000 		.4byte	0x18ea
 4518 105c 18       		.uleb128 0x18
 4519 105d 62000000 		.4byte	.LVL204
 4520 1061 F5180000 		.4byte	0x18f5
 4521 1065 18       		.uleb128 0x18
 4522 1066 66000000 		.4byte	.LVL205
 4523 106a 50190000 		.4byte	0x1950
 4524 106e 18       		.uleb128 0x18
 4525 106f 6A000000 		.4byte	.LVL206
 4526 1073 EA180000 		.4byte	0x18ea
 4527 1077 18       		.uleb128 0x18
 4528 1078 92000000 		.4byte	.LVL207
 4529 107c F5180000 		.4byte	0x18f5
 4530 1080 1D       		.uleb128 0x1d
 4531 1081 9A000000 		.4byte	.LVL209
 4532 1085 5C190000 		.4byte	0x195c
 4533 1089 9A100000 		.4byte	0x109a
 4534 108d 1B       		.uleb128 0x1b
 4535 108e 01       		.uleb128 0x1
 4536 108f 50       		.byte	0x50
 4537 1090 02       		.uleb128 0x2
 4538 1091 91       		.byte	0x91
 4539 1092 68       		.sleb128 -24
 4540 1093 1B       		.uleb128 0x1b
 4541 1094 01       		.uleb128 0x1
 4542 1095 51       		.byte	0x51
 4543 1096 02       		.uleb128 0x2
 4544 1097 91       		.byte	0x91
 4545 1098 64       		.sleb128 -28
 4546 1099 00       		.byte	0
 4547 109a 1D       		.uleb128 0x1d
 4548 109b A2000000 		.4byte	.LVL210
 4549 109f 75040000 		.4byte	0x475
 4550 10a3 AE100000 		.4byte	0x10ae
 4551 10a7 1B       		.uleb128 0x1b
 4552 10a8 01       		.uleb128 0x1
 4553 10a9 50       		.byte	0x50
 4554 10aa 02       		.uleb128 0x2
 4555 10ab 74       		.byte	0x74
 4556 10ac 00       		.sleb128 0
 4557 10ad 00       		.byte	0
 4558 10ae 18       		.uleb128 0x18
 4559 10af AC000000 		.4byte	.LVL211
 4560 10b3 EA180000 		.4byte	0x18ea
 4561 10b7 18       		.uleb128 0x18
 4562 10b8 B2000000 		.4byte	.LVL212
 4563 10bc A4190000 		.4byte	0x19a4
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 140


 4564 10c0 18       		.uleb128 0x18
 4565 10c1 B8000000 		.4byte	.LVL214
 4566 10c5 F5180000 		.4byte	0x18f5
 4567 10c9 1D       		.uleb128 0x1d
 4568 10ca C2000000 		.4byte	.LVL215
 4569 10ce 68190000 		.4byte	0x1968
 4570 10d2 DD100000 		.4byte	0x10dd
 4571 10d6 1B       		.uleb128 0x1b
 4572 10d7 01       		.uleb128 0x1
 4573 10d8 50       		.byte	0x50
 4574 10d9 02       		.uleb128 0x2
 4575 10da 74       		.byte	0x74
 4576 10db 24       		.sleb128 36
 4577 10dc 00       		.byte	0
 4578 10dd 1D       		.uleb128 0x1d
 4579 10de C8000000 		.4byte	.LVL216
 4580 10e2 A2050000 		.4byte	0x5a2
 4581 10e6 F1100000 		.4byte	0x10f1
 4582 10ea 1B       		.uleb128 0x1b
 4583 10eb 01       		.uleb128 0x1
 4584 10ec 50       		.byte	0x50
 4585 10ed 02       		.uleb128 0x2
 4586 10ee 74       		.byte	0x74
 4587 10ef 00       		.sleb128 0
 4588 10f0 00       		.byte	0
 4589 10f1 18       		.uleb128 0x18
 4590 10f2 CC000000 		.4byte	.LVL217
 4591 10f6 74190000 		.4byte	0x1974
 4592 10fa 1D       		.uleb128 0x1d
 4593 10fb E8000000 		.4byte	.LVL218
 4594 10ff A2050000 		.4byte	0x5a2
 4595 1103 0E110000 		.4byte	0x110e
 4596 1107 1B       		.uleb128 0x1b
 4597 1108 01       		.uleb128 0x1
 4598 1109 50       		.byte	0x50
 4599 110a 02       		.uleb128 0x2
 4600 110b 74       		.byte	0x74
 4601 110c 00       		.sleb128 0
 4602 110d 00       		.byte	0
 4603 110e 18       		.uleb128 0x18
 4604 110f EC000000 		.4byte	.LVL219
 4605 1113 74190000 		.4byte	0x1974
 4606 1117 1D       		.uleb128 0x1d
 4607 1118 F4000000 		.4byte	.LVL220
 4608 111c A2050000 		.4byte	0x5a2
 4609 1120 2B110000 		.4byte	0x112b
 4610 1124 1B       		.uleb128 0x1b
 4611 1125 01       		.uleb128 0x1
 4612 1126 50       		.byte	0x50
 4613 1127 02       		.uleb128 0x2
 4614 1128 74       		.byte	0x74
 4615 1129 00       		.sleb128 0
 4616 112a 00       		.byte	0
 4617 112b 18       		.uleb128 0x18
 4618 112c F8000000 		.4byte	.LVL221
 4619 1130 74190000 		.4byte	0x1974
 4620 1134 1D       		.uleb128 0x1d
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 141


 4621 1135 FE000000 		.4byte	.LVL222
 4622 1139 75040000 		.4byte	0x475
 4623 113d 48110000 		.4byte	0x1148
 4624 1141 1B       		.uleb128 0x1b
 4625 1142 01       		.uleb128 0x1
 4626 1143 50       		.byte	0x50
 4627 1144 02       		.uleb128 0x2
 4628 1145 74       		.byte	0x74
 4629 1146 00       		.sleb128 0
 4630 1147 00       		.byte	0
 4631 1148 18       		.uleb128 0x18
 4632 1149 08010000 		.4byte	.LVL223
 4633 114d EA180000 		.4byte	0x18ea
 4634 1151 18       		.uleb128 0x18
 4635 1152 1A010000 		.4byte	.LVL227
 4636 1156 F5180000 		.4byte	0x18f5
 4637 115a 00       		.byte	0
 4638 115b 21       		.uleb128 0x21
 4639 115c 78070000 		.4byte	.LASF117
 4640 1160 01       		.byte	0x1
 4641 1161 8B02     		.2byte	0x28b
 4642 1163 E1000000 		.4byte	0xe1
 4643 1167 00000000 		.4byte	.LFB11
 4644 116b 30000000 		.4byte	.LFE11-.LFB11
 4645 116f 01       		.uleb128 0x1
 4646 1170 9C       		.byte	0x9c
 4647 1171 D5110000 		.4byte	0x11d5
 4648 1175 15       		.uleb128 0x15
 4649 1176 31060000 		.4byte	.LASF106
 4650 117a 01       		.byte	0x1
 4651 117b 8B02     		.2byte	0x28b
 4652 117d 31020000 		.4byte	0x231
 4653 1181 EB0C0000 		.4byte	.LLST68
 4654 1185 15       		.uleb128 0x15
 4655 1186 8D090000 		.4byte	.LASF96
 4656 118a 01       		.byte	0x1
 4657 118b 8B02     		.2byte	0x28b
 4658 118d F7000000 		.4byte	0xf7
 4659 1191 090D0000 		.4byte	.LLST69
 4660 1195 16       		.uleb128 0x16
 4661 1196 A2080000 		.4byte	.LASF75
 4662 119a 01       		.byte	0x1
 4663 119b 8D02     		.2byte	0x28d
 4664 119d E1000000 		.4byte	0xe1
 4665 11a1 270D0000 		.4byte	.LLST70
 4666 11a5 16       		.uleb128 0x16
 4667 11a6 A8000000 		.4byte	.LASF107
 4668 11aa 01       		.byte	0x1
 4669 11ab 8E02     		.2byte	0x28e
 4670 11ad 4C050000 		.4byte	0x54c
 4671 11b1 510D0000 		.4byte	.LLST71
 4672 11b5 18       		.uleb128 0x18
 4673 11b6 0C000000 		.4byte	.LVL231
 4674 11ba 80190000 		.4byte	0x1980
 4675 11be 1A       		.uleb128 0x1a
 4676 11bf 22000000 		.4byte	.LVL234
 4677 11c3 420F0000 		.4byte	0xf42
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 142


 4678 11c7 1B       		.uleb128 0x1b
 4679 11c8 01       		.uleb128 0x1
 4680 11c9 50       		.byte	0x50
 4681 11ca 02       		.uleb128 0x2
 4682 11cb 74       		.byte	0x74
 4683 11cc 00       		.sleb128 0
 4684 11cd 1B       		.uleb128 0x1b
 4685 11ce 01       		.uleb128 0x1
 4686 11cf 51       		.byte	0x51
 4687 11d0 02       		.uleb128 0x2
 4688 11d1 76       		.byte	0x76
 4689 11d2 00       		.sleb128 0
 4690 11d3 00       		.byte	0
 4691 11d4 00       		.byte	0
 4692 11d5 21       		.uleb128 0x21
 4693 11d6 33030000 		.4byte	.LASF118
 4694 11da 01       		.byte	0x1
 4695 11db 6006     		.2byte	0x660
 4696 11dd E1000000 		.4byte	0xe1
 4697 11e1 00000000 		.4byte	.LFB18
 4698 11e5 F8000000 		.4byte	.LFE18-.LFB18
 4699 11e9 01       		.uleb128 0x1
 4700 11ea 9C       		.byte	0x9c
 4701 11eb A3130000 		.4byte	0x13a3
 4702 11ef 15       		.uleb128 0x15
 4703 11f0 82020000 		.4byte	.LASF60
 4704 11f4 01       		.byte	0x1
 4705 11f5 6006     		.2byte	0x660
 4706 11f7 31020000 		.4byte	0x231
 4707 11fb 6F0D0000 		.4byte	.LLST72
 4708 11ff 15       		.uleb128 0x15
 4709 1200 C0020000 		.4byte	.LASF80
 4710 1204 01       		.byte	0x1
 4711 1205 6006     		.2byte	0x660
 4712 1207 9D050000 		.4byte	0x59d
 4713 120b 9B0D0000 		.4byte	.LLST73
 4714 120f 15       		.uleb128 0x15
 4715 1210 8D090000 		.4byte	.LASF96
 4716 1214 01       		.byte	0x1
 4717 1215 6006     		.2byte	0x660
 4718 1217 F7000000 		.4byte	0xf7
 4719 121b C70D0000 		.4byte	.LLST74
 4720 121f 16       		.uleb128 0x16
 4721 1220 CC030000 		.4byte	.LASF98
 4722 1224 01       		.byte	0x1
 4723 1225 6206     		.2byte	0x662
 4724 1227 E1000000 		.4byte	0xe1
 4725 122b 0A0E0000 		.4byte	.LLST75
 4726 122f 17       		.uleb128 0x17
 4727 1230 E1030000 		.4byte	.LASF100
 4728 1234 01       		.byte	0x1
 4729 1235 6306     		.2byte	0x663
 4730 1237 26020000 		.4byte	0x226
 4731 123b 02       		.uleb128 0x2
 4732 123c 91       		.byte	0x91
 4733 123d 68       		.sleb128 -24
 4734 123e 16       		.uleb128 0x16
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 143


 4735 123f B4060000 		.4byte	.LASF119
 4736 1243 01       		.byte	0x1
 4737 1244 6406     		.2byte	0x664
 4738 1246 EA020000 		.4byte	0x2ea
 4739 124a 4B0E0000 		.4byte	.LLST76
 4740 124e 16       		.uleb128 0x16
 4741 124f 9A080000 		.4byte	.LASF73
 4742 1253 01       		.byte	0x1
 4743 1254 6506     		.2byte	0x665
 4744 1256 4C050000 		.4byte	0x54c
 4745 125a 5E0E0000 		.4byte	.LLST77
 4746 125e 1C       		.uleb128 0x1c
 4747 125f 10000000 		.4byte	.LBB41
 4748 1263 4C000000 		.4byte	.LBE41-.LBB41
 4749 1267 CC120000 		.4byte	0x12cc
 4750 126b 16       		.uleb128 0x16
 4751 126c F9020000 		.4byte	.LASF47
 4752 1270 01       		.byte	0x1
 4753 1271 7D06     		.2byte	0x67d
 4754 1273 75070000 		.4byte	0x775
 4755 1277 8A0E0000 		.4byte	.LLST78
 4756 127b 1D       		.uleb128 0x1d
 4757 127c 1E000000 		.4byte	.LVL242
 4758 1280 56050000 		.4byte	0x556
 4759 1284 95120000 		.4byte	0x1295
 4760 1288 1B       		.uleb128 0x1b
 4761 1289 01       		.uleb128 0x1
 4762 128a 50       		.byte	0x50
 4763 128b 02       		.uleb128 0x2
 4764 128c 74       		.byte	0x74
 4765 128d 00       		.sleb128 0
 4766 128e 1B       		.uleb128 0x1b
 4767 128f 01       		.uleb128 0x1
 4768 1290 51       		.byte	0x51
 4769 1291 02       		.uleb128 0x2
 4770 1292 76       		.byte	0x76
 4771 1293 00       		.sleb128 0
 4772 1294 00       		.byte	0
 4773 1295 1D       		.uleb128 0x1d
 4774 1296 2C000000 		.4byte	.LVL243
 4775 129a 15190000 		.4byte	0x1915
 4776 129e A9120000 		.4byte	0x12a9
 4777 12a2 1B       		.uleb128 0x1b
 4778 12a3 01       		.uleb128 0x1
 4779 12a4 50       		.byte	0x50
 4780 12a5 02       		.uleb128 0x2
 4781 12a6 74       		.byte	0x74
 4782 12a7 24       		.sleb128 36
 4783 12a8 00       		.byte	0
 4784 12a9 18       		.uleb128 0x18
 4785 12aa 42000000 		.4byte	.LVL244
 4786 12ae F5180000 		.4byte	0x18f5
 4787 12b2 18       		.uleb128 0x18
 4788 12b3 4E000000 		.4byte	.LVL247
 4789 12b7 F5180000 		.4byte	0x18f5
 4790 12bb 1A       		.uleb128 0x1a
 4791 12bc 5A000000 		.4byte	.LVL248
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 144


 4792 12c0 44190000 		.4byte	0x1944
 4793 12c4 1B       		.uleb128 0x1b
 4794 12c5 01       		.uleb128 0x1
 4795 12c6 50       		.byte	0x50
 4796 12c7 02       		.uleb128 0x2
 4797 12c8 91       		.byte	0x91
 4798 12c9 68       		.sleb128 -24
 4799 12ca 00       		.byte	0
 4800 12cb 00       		.byte	0
 4801 12cc 18       		.uleb128 0x18
 4802 12cd 10000000 		.4byte	.LVL239
 4803 12d1 EA180000 		.4byte	0x18ea
 4804 12d5 18       		.uleb128 0x18
 4805 12d6 60000000 		.4byte	.LVL250
 4806 12da F5180000 		.4byte	0x18f5
 4807 12de 18       		.uleb128 0x18
 4808 12df 64000000 		.4byte	.LVL251
 4809 12e3 50190000 		.4byte	0x1950
 4810 12e7 18       		.uleb128 0x18
 4811 12e8 68000000 		.4byte	.LVL252
 4812 12ec EA180000 		.4byte	0x18ea
 4813 12f0 18       		.uleb128 0x18
 4814 12f1 90000000 		.4byte	.LVL253
 4815 12f5 F5180000 		.4byte	0x18f5
 4816 12f9 1D       		.uleb128 0x1d
 4817 12fa 98000000 		.4byte	.LVL255
 4818 12fe 5C190000 		.4byte	0x195c
 4819 1302 13130000 		.4byte	0x1313
 4820 1306 1B       		.uleb128 0x1b
 4821 1307 01       		.uleb128 0x1
 4822 1308 50       		.byte	0x50
 4823 1309 02       		.uleb128 0x2
 4824 130a 91       		.byte	0x91
 4825 130b 68       		.sleb128 -24
 4826 130c 1B       		.uleb128 0x1b
 4827 130d 01       		.uleb128 0x1
 4828 130e 51       		.byte	0x51
 4829 130f 02       		.uleb128 0x2
 4830 1310 91       		.byte	0x91
 4831 1311 64       		.sleb128 -28
 4832 1312 00       		.byte	0
 4833 1313 1D       		.uleb128 0x1d
 4834 1314 A0000000 		.4byte	.LVL256
 4835 1318 75040000 		.4byte	0x475
 4836 131c 27130000 		.4byte	0x1327
 4837 1320 1B       		.uleb128 0x1b
 4838 1321 01       		.uleb128 0x1
 4839 1322 50       		.byte	0x50
 4840 1323 02       		.uleb128 0x2
 4841 1324 74       		.byte	0x74
 4842 1325 00       		.sleb128 0
 4843 1326 00       		.byte	0
 4844 1327 1D       		.uleb128 0x1d
 4845 1328 AC000000 		.4byte	.LVL257
 4846 132c 68190000 		.4byte	0x1968
 4847 1330 3B130000 		.4byte	0x133b
 4848 1334 1B       		.uleb128 0x1b
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 145


 4849 1335 01       		.uleb128 0x1
 4850 1336 50       		.byte	0x50
 4851 1337 02       		.uleb128 0x2
 4852 1338 74       		.byte	0x74
 4853 1339 24       		.sleb128 36
 4854 133a 00       		.byte	0
 4855 133b 1D       		.uleb128 0x1d
 4856 133c B2000000 		.4byte	.LVL258
 4857 1340 A2050000 		.4byte	0x5a2
 4858 1344 4F130000 		.4byte	0x134f
 4859 1348 1B       		.uleb128 0x1b
 4860 1349 01       		.uleb128 0x1
 4861 134a 50       		.byte	0x50
 4862 134b 02       		.uleb128 0x2
 4863 134c 74       		.byte	0x74
 4864 134d 00       		.sleb128 0
 4865 134e 00       		.byte	0
 4866 134f 18       		.uleb128 0x18
 4867 1350 B6000000 		.4byte	.LVL259
 4868 1354 74190000 		.4byte	0x1974
 4869 1358 1D       		.uleb128 0x1d
 4870 1359 D2000000 		.4byte	.LVL260
 4871 135d A2050000 		.4byte	0x5a2
 4872 1361 6C130000 		.4byte	0x136c
 4873 1365 1B       		.uleb128 0x1b
 4874 1366 01       		.uleb128 0x1
 4875 1367 50       		.byte	0x50
 4876 1368 02       		.uleb128 0x2
 4877 1369 74       		.byte	0x74
 4878 136a 00       		.sleb128 0
 4879 136b 00       		.byte	0
 4880 136c 18       		.uleb128 0x18
 4881 136d D6000000 		.4byte	.LVL261
 4882 1371 74190000 		.4byte	0x1974
 4883 1375 1D       		.uleb128 0x1d
 4884 1376 DE000000 		.4byte	.LVL262
 4885 137a A2050000 		.4byte	0x5a2
 4886 137e 89130000 		.4byte	0x1389
 4887 1382 1B       		.uleb128 0x1b
 4888 1383 01       		.uleb128 0x1
 4889 1384 50       		.byte	0x50
 4890 1385 02       		.uleb128 0x2
 4891 1386 74       		.byte	0x74
 4892 1387 00       		.sleb128 0
 4893 1388 00       		.byte	0
 4894 1389 18       		.uleb128 0x18
 4895 138a E2000000 		.4byte	.LVL263
 4896 138e 74190000 		.4byte	0x1974
 4897 1392 1A       		.uleb128 0x1a
 4898 1393 E8000000 		.4byte	.LVL264
 4899 1397 75040000 		.4byte	0x475
 4900 139b 1B       		.uleb128 0x1b
 4901 139c 01       		.uleb128 0x1
 4902 139d 50       		.byte	0x50
 4903 139e 02       		.uleb128 0x2
 4904 139f 74       		.byte	0x74
 4905 13a0 00       		.sleb128 0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 146


 4906 13a1 00       		.byte	0
 4907 13a2 00       		.byte	0
 4908 13a3 21       		.uleb128 0x21
 4909 13a4 62000000 		.4byte	.LASF120
 4910 13a8 01       		.byte	0x1
 4911 13a9 F506     		.2byte	0x6f5
 4912 13ab E1000000 		.4byte	0xe1
 4913 13af 00000000 		.4byte	.LFB19
 4914 13b3 72000000 		.4byte	.LFE19-.LFB19
 4915 13b7 01       		.uleb128 0x1
 4916 13b8 9C       		.byte	0x9c
 4917 13b9 BA140000 		.4byte	0x14ba
 4918 13bd 15       		.uleb128 0x15
 4919 13be 82020000 		.4byte	.LASF60
 4920 13c2 01       		.byte	0x1
 4921 13c3 F506     		.2byte	0x6f5
 4922 13c5 31020000 		.4byte	0x231
 4923 13c9 A80E0000 		.4byte	.LLST79
 4924 13cd 15       		.uleb128 0x15
 4925 13ce C0020000 		.4byte	.LASF80
 4926 13d2 01       		.byte	0x1
 4927 13d3 F506     		.2byte	0x6f5
 4928 13d5 9D050000 		.4byte	0x59d
 4929 13d9 F80E0000 		.4byte	.LLST80
 4930 13dd 15       		.uleb128 0x15
 4931 13de 8E000000 		.4byte	.LASF109
 4932 13e2 01       		.byte	0x1
 4933 13e3 F506     		.2byte	0x6f5
 4934 13e5 8B0C0000 		.4byte	0xc8b
 4935 13e9 320F0000 		.4byte	.LLST81
 4936 13ed 17       		.uleb128 0x17
 4937 13ee A2080000 		.4byte	.LASF75
 4938 13f2 01       		.byte	0x1
 4939 13f3 F706     		.2byte	0x6f7
 4940 13f5 E1000000 		.4byte	0xe1
 4941 13f9 01       		.uleb128 0x1
 4942 13fa 50       		.byte	0x50
 4943 13fb 23       		.uleb128 0x23
 4944 13fc 18020000 		.4byte	.LASF110
 4945 1400 01       		.byte	0x1
 4946 1401 F806     		.2byte	0x6f8
 4947 1403 EC000000 		.4byte	0xec
 4948 1407 16       		.uleb128 0x16
 4949 1408 9A080000 		.4byte	.LASF73
 4950 140c 01       		.byte	0x1
 4951 140d F906     		.2byte	0x6f9
 4952 140f 4C050000 		.4byte	0x54c
 4953 1413 740F0000 		.4byte	.LLST82
 4954 1417 24       		.uleb128 0x24
 4955 1418 A0030000 		.4byte	0x3a0
 4956 141c 04000000 		.4byte	.LBB42
 4957 1420 14000000 		.4byte	.LBE42-.LBB42
 4958 1424 01       		.byte	0x1
 4959 1425 0E07     		.2byte	0x70e
 4960 1427 40140000 		.4byte	0x1440
 4961 142b 25       		.uleb128 0x25
 4962 142c 04000000 		.4byte	.LBB43
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 147


 4963 1430 14000000 		.4byte	.LBE43-.LBB43
 4964 1434 26       		.uleb128 0x26
 4965 1435 B0030000 		.4byte	0x3b0
 4966 1439 26       		.uleb128 0x26
 4967 143a BB030000 		.4byte	0x3bb
 4968 143e 00       		.byte	0
 4969 143f 00       		.byte	0
 4970 1440 1C       		.uleb128 0x1c
 4971 1441 18000000 		.4byte	.LBB44
 4972 1445 52000000 		.4byte	.LBE44-.LBB44
 4973 1449 9F140000 		.4byte	0x149f
 4974 144d 16       		.uleb128 0x16
 4975 144e F9020000 		.4byte	.LASF47
 4976 1452 01       		.byte	0x1
 4977 1453 1007     		.2byte	0x710
 4978 1455 75070000 		.4byte	0x775
 4979 1459 C40F0000 		.4byte	.LLST83
 4980 145d 2A       		.uleb128 0x2a
 4981 145e 30000000 		.4byte	.Ldebug_ranges0+0x30
 4982 1462 16       		.uleb128 0x16
 4983 1463 5C0A0000 		.4byte	.LASF50
 4984 1467 01       		.byte	0x1
 4985 1468 1507     		.2byte	0x715
 4986 146a 900C0000 		.4byte	0xc90
 4987 146e FC0F0000 		.4byte	.LLST84
 4988 1472 1D       		.uleb128 0x1d
 4989 1473 2A000000 		.4byte	.LVL271
 4990 1477 56050000 		.4byte	0x556
 4991 147b 8D140000 		.4byte	0x148d
 4992 147f 1B       		.uleb128 0x1b
 4993 1480 01       		.uleb128 0x1
 4994 1481 50       		.byte	0x50
 4995 1482 02       		.uleb128 0x2
 4996 1483 77       		.byte	0x77
 4997 1484 00       		.sleb128 0
 4998 1485 1B       		.uleb128 0x1b
 4999 1486 01       		.uleb128 0x1
 5000 1487 51       		.byte	0x51
 5001 1488 03       		.uleb128 0x3
 5002 1489 F3       		.byte	0xf3
 5003 148a 01       		.uleb128 0x1
 5004 148b 51       		.byte	0x51
 5005 148c 00       		.byte	0
 5006 148d 1A       		.uleb128 0x1a
 5007 148e 40000000 		.4byte	.LVL273
 5008 1492 15190000 		.4byte	0x1915
 5009 1496 1B       		.uleb128 0x1b
 5010 1497 01       		.uleb128 0x1
 5011 1498 50       		.byte	0x50
 5012 1499 02       		.uleb128 0x2
 5013 149a 77       		.byte	0x77
 5014 149b 10       		.sleb128 16
 5015 149c 00       		.byte	0
 5016 149d 00       		.byte	0
 5017 149e 00       		.byte	0
 5018 149f 28       		.uleb128 0x28
 5019 14a0 C7030000 		.4byte	0x3c7
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 148


 5020 14a4 6A000000 		.4byte	.LBB47
 5021 14a8 04000000 		.4byte	.LBE47-.LBB47
 5022 14ac 01       		.byte	0x1
 5023 14ad 4A07     		.2byte	0x74a
 5024 14af 29       		.uleb128 0x29
 5025 14b0 D3030000 		.4byte	0x3d3
 5026 14b4 27100000 		.4byte	.LLST85
 5027 14b8 00       		.byte	0
 5028 14b9 00       		.byte	0
 5029 14ba 21       		.uleb128 0x21
 5030 14bb 00090000 		.4byte	.LASF121
 5031 14bf 01       		.byte	0x1
 5032 14c0 5007     		.2byte	0x750
 5033 14c2 E1000000 		.4byte	0xe1
 5034 14c6 00000000 		.4byte	.LFB20
 5035 14ca 30000000 		.4byte	.LFE20-.LFB20
 5036 14ce 01       		.uleb128 0x1
 5037 14cf 9C       		.byte	0x9c
 5038 14d0 8F150000 		.4byte	0x158f
 5039 14d4 15       		.uleb128 0x15
 5040 14d5 82020000 		.4byte	.LASF60
 5041 14d9 01       		.byte	0x1
 5042 14da 5007     		.2byte	0x750
 5043 14dc 31020000 		.4byte	0x231
 5044 14e0 3A100000 		.4byte	.LLST86
 5045 14e4 15       		.uleb128 0x15
 5046 14e5 C0020000 		.4byte	.LASF80
 5047 14e9 01       		.byte	0x1
 5048 14ea 5007     		.2byte	0x750
 5049 14ec 9D050000 		.4byte	0x59d
 5050 14f0 71100000 		.4byte	.LLST87
 5051 14f4 16       		.uleb128 0x16
 5052 14f5 A2080000 		.4byte	.LASF75
 5053 14f9 01       		.byte	0x1
 5054 14fa 5207     		.2byte	0x752
 5055 14fc E1000000 		.4byte	0xe1
 5056 1500 AB100000 		.4byte	.LLST88
 5057 1504 23       		.uleb128 0x23
 5058 1505 18020000 		.4byte	.LASF110
 5059 1509 01       		.byte	0x1
 5060 150a 5307     		.2byte	0x753
 5061 150c EC000000 		.4byte	0xec
 5062 1510 16       		.uleb128 0x16
 5063 1511 B4060000 		.4byte	.LASF119
 5064 1515 01       		.byte	0x1
 5065 1516 5407     		.2byte	0x754
 5066 1518 EA020000 		.4byte	0x2ea
 5067 151c CA100000 		.4byte	.LLST89
 5068 1520 16       		.uleb128 0x16
 5069 1521 9A080000 		.4byte	.LASF73
 5070 1525 01       		.byte	0x1
 5071 1526 5507     		.2byte	0x755
 5072 1528 4C050000 		.4byte	0x54c
 5073 152c DD100000 		.4byte	.LLST90
 5074 1530 24       		.uleb128 0x24
 5075 1531 A0030000 		.4byte	0x3a0
 5076 1535 02000000 		.4byte	.LBB49
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 149


 5077 1539 14000000 		.4byte	.LBE49-.LBB49
 5078 153d 01       		.byte	0x1
 5079 153e 6B07     		.2byte	0x76b
 5080 1540 59150000 		.4byte	0x1559
 5081 1544 25       		.uleb128 0x25
 5082 1545 02000000 		.4byte	.LBB50
 5083 1549 14000000 		.4byte	.LBE50-.LBB50
 5084 154d 26       		.uleb128 0x26
 5085 154e B0030000 		.4byte	0x3b0
 5086 1552 26       		.uleb128 0x26
 5087 1553 BB030000 		.4byte	0x3bb
 5088 1557 00       		.byte	0
 5089 1558 00       		.byte	0
 5090 1559 24       		.uleb128 0x24
 5091 155a C7030000 		.4byte	0x3c7
 5092 155e 2A000000 		.4byte	.LBB51
 5093 1562 04000000 		.4byte	.LBE51-.LBB51
 5094 1566 01       		.byte	0x1
 5095 1567 8007     		.2byte	0x780
 5096 1569 77150000 		.4byte	0x1577
 5097 156d 29       		.uleb128 0x29
 5098 156e D3030000 		.4byte	0x3d3
 5099 1572 14110000 		.4byte	.LLST91
 5100 1576 00       		.byte	0
 5101 1577 1A       		.uleb128 0x1a
 5102 1578 22000000 		.4byte	.LVL284
 5103 157c 56050000 		.4byte	0x556
 5104 1580 1B       		.uleb128 0x1b
 5105 1581 01       		.uleb128 0x1
 5106 1582 50       		.byte	0x50
 5107 1583 02       		.uleb128 0x2
 5108 1584 74       		.byte	0x74
 5109 1585 00       		.sleb128 0
 5110 1586 1B       		.uleb128 0x1b
 5111 1587 01       		.uleb128 0x1
 5112 1588 51       		.byte	0x51
 5113 1589 03       		.uleb128 0x3
 5114 158a F3       		.byte	0xf3
 5115 158b 01       		.uleb128 0x1
 5116 158c 51       		.byte	0x51
 5117 158d 00       		.byte	0
 5118 158e 00       		.byte	0
 5119 158f 21       		.uleb128 0x21
 5120 1590 72080000 		.4byte	.LASF122
 5121 1594 01       		.byte	0x1
 5122 1595 8607     		.2byte	0x786
 5123 1597 EC000000 		.4byte	0xec
 5124 159b 00000000 		.4byte	.LFB21
 5125 159f 12000000 		.4byte	.LFE21-.LFB21
 5126 15a3 01       		.uleb128 0x1
 5127 15a4 9C       		.byte	0x9c
 5128 15a5 DA150000 		.4byte	0x15da
 5129 15a9 15       		.uleb128 0x15
 5130 15aa 82020000 		.4byte	.LASF60
 5131 15ae 01       		.byte	0x1
 5132 15af 8607     		.2byte	0x786
 5133 15b1 DA150000 		.4byte	0x15da
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 150


 5134 15b5 27110000 		.4byte	.LLST92
 5135 15b9 17       		.uleb128 0x17
 5136 15ba CD010000 		.4byte	.LASF123
 5137 15be 01       		.byte	0x1
 5138 15bf 8807     		.2byte	0x788
 5139 15c1 EC000000 		.4byte	0xec
 5140 15c5 01       		.uleb128 0x1
 5141 15c6 54       		.byte	0x54
 5142 15c7 18       		.uleb128 0x18
 5143 15c8 08000000 		.4byte	.LVL290
 5144 15cc EA180000 		.4byte	0x18ea
 5145 15d0 18       		.uleb128 0x18
 5146 15d1 0E000000 		.4byte	.LVL292
 5147 15d5 F5180000 		.4byte	0x18f5
 5148 15d9 00       		.byte	0
 5149 15da 07       		.uleb128 0x7
 5150 15db 31020000 		.4byte	0x231
 5151 15df 21       		.uleb128 0x21
 5152 15e0 76010000 		.4byte	.LASF124
 5153 15e4 01       		.byte	0x1
 5154 15e5 9607     		.2byte	0x796
 5155 15e7 EC000000 		.4byte	0xec
 5156 15eb 00000000 		.4byte	.LFB22
 5157 15ef 16000000 		.4byte	.LFE22-.LFB22
 5158 15f3 01       		.uleb128 0x1
 5159 15f4 9C       		.byte	0x9c
 5160 15f5 3A160000 		.4byte	0x163a
 5161 15f9 15       		.uleb128 0x15
 5162 15fa 82020000 		.4byte	.LASF60
 5163 15fe 01       		.byte	0x1
 5164 15ff 9607     		.2byte	0x796
 5165 1601 DA150000 		.4byte	0x15da
 5166 1605 53110000 		.4byte	.LLST93
 5167 1609 17       		.uleb128 0x17
 5168 160a CD010000 		.4byte	.LASF123
 5169 160e 01       		.byte	0x1
 5170 160f 9807     		.2byte	0x798
 5171 1611 EC000000 		.4byte	0xec
 5172 1615 01       		.uleb128 0x1
 5173 1616 54       		.byte	0x54
 5174 1617 16       		.uleb128 0x16
 5175 1618 9A080000 		.4byte	.LASF73
 5176 161c 01       		.byte	0x1
 5177 161d 9907     		.2byte	0x799
 5178 161f 4C050000 		.4byte	0x54c
 5179 1623 7F110000 		.4byte	.LLST94
 5180 1627 18       		.uleb128 0x18
 5181 1628 08000000 		.4byte	.LVL295
 5182 162c EA180000 		.4byte	0x18ea
 5183 1630 18       		.uleb128 0x18
 5184 1631 12000000 		.4byte	.LVL298
 5185 1635 F5180000 		.4byte	0x18f5
 5186 1639 00       		.byte	0
 5187 163a 21       		.uleb128 0x21
 5188 163b 54050000 		.4byte	.LASF125
 5189 163f 01       		.byte	0x1
 5190 1640 A707     		.2byte	0x7a7
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 151


 5191 1642 EC000000 		.4byte	0xec
 5192 1646 00000000 		.4byte	.LFB23
 5193 164a 04000000 		.4byte	.LFE23-.LFB23
 5194 164e 01       		.uleb128 0x1
 5195 164f 9C       		.byte	0x9c
 5196 1650 83160000 		.4byte	0x1683
 5197 1654 15       		.uleb128 0x15
 5198 1655 82020000 		.4byte	.LASF60
 5199 1659 01       		.byte	0x1
 5200 165a A707     		.2byte	0x7a7
 5201 165c DA150000 		.4byte	0x15da
 5202 1660 AB110000 		.4byte	.LLST95
 5203 1664 17       		.uleb128 0x17
 5204 1665 CD010000 		.4byte	.LASF123
 5205 1669 01       		.byte	0x1
 5206 166a A907     		.2byte	0x7a9
 5207 166c EC000000 		.4byte	0xec
 5208 1670 01       		.uleb128 0x1
 5209 1671 50       		.byte	0x50
 5210 1672 16       		.uleb128 0x16
 5211 1673 9A080000 		.4byte	.LASF73
 5212 1677 01       		.byte	0x1
 5213 1678 AA07     		.2byte	0x7aa
 5214 167a 4C050000 		.4byte	0x54c
 5215 167e CC110000 		.4byte	.LLST96
 5216 1682 00       		.byte	0
 5217 1683 21       		.uleb128 0x21
 5218 1684 FE090000 		.4byte	.LASF126
 5219 1688 01       		.byte	0x1
 5220 1689 0409     		.2byte	0x904
 5221 168b E1000000 		.4byte	0xe1
 5222 168f 00000000 		.4byte	.LFB30
 5223 1693 0C000000 		.4byte	.LFE30-.LFB30
 5224 1697 01       		.uleb128 0x1
 5225 1698 9C       		.byte	0x9c
 5226 1699 CC160000 		.4byte	0x16cc
 5227 169d 15       		.uleb128 0x15
 5228 169e 82020000 		.4byte	.LASF60
 5229 16a2 01       		.byte	0x1
 5230 16a3 0409     		.2byte	0x904
 5231 16a5 DA150000 		.4byte	0x15da
 5232 16a9 ED110000 		.4byte	.LLST97
 5233 16ad 17       		.uleb128 0x17
 5234 16ae A2080000 		.4byte	.LASF75
 5235 16b2 01       		.byte	0x1
 5236 16b3 0609     		.2byte	0x906
 5237 16b5 E1000000 		.4byte	0xe1
 5238 16b9 01       		.uleb128 0x1
 5239 16ba 50       		.byte	0x50
 5240 16bb 16       		.uleb128 0x16
 5241 16bc 9A080000 		.4byte	.LASF73
 5242 16c0 01       		.byte	0x1
 5243 16c1 0709     		.2byte	0x907
 5244 16c3 4C050000 		.4byte	0x54c
 5245 16c7 27120000 		.4byte	.LLST98
 5246 16cb 00       		.byte	0
 5247 16cc 21       		.uleb128 0x21
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 152


 5248 16cd 59080000 		.4byte	.LASF127
 5249 16d1 01       		.byte	0x1
 5250 16d2 2C09     		.2byte	0x92c
 5251 16d4 E1000000 		.4byte	0xe1
 5252 16d8 00000000 		.4byte	.LFB32
 5253 16dc 10000000 		.4byte	.LFE32-.LFB32
 5254 16e0 01       		.uleb128 0x1
 5255 16e1 9C       		.byte	0x9c
 5256 16e2 15170000 		.4byte	0x1715
 5257 16e6 15       		.uleb128 0x15
 5258 16e7 82020000 		.4byte	.LASF60
 5259 16eb 01       		.byte	0x1
 5260 16ec 2C09     		.2byte	0x92c
 5261 16ee DA150000 		.4byte	0x15da
 5262 16f2 61120000 		.4byte	.LLST99
 5263 16f6 17       		.uleb128 0x17
 5264 16f7 A2080000 		.4byte	.LASF75
 5265 16fb 01       		.byte	0x1
 5266 16fc 2E09     		.2byte	0x92e
 5267 16fe E1000000 		.4byte	0xe1
 5268 1702 01       		.uleb128 0x1
 5269 1703 50       		.byte	0x50
 5270 1704 16       		.uleb128 0x16
 5271 1705 9A080000 		.4byte	.LASF73
 5272 1709 01       		.byte	0x1
 5273 170a 2F09     		.2byte	0x92f
 5274 170c 4C050000 		.4byte	0x54c
 5275 1710 9B120000 		.4byte	.LLST100
 5276 1714 00       		.byte	0
 5277 1715 2B       		.uleb128 0x2b
 5278 1716 48060000 		.4byte	.LASF130
 5279 171a 01       		.byte	0x1
 5280 171b 540A     		.2byte	0xa54
 5281 171d 00000000 		.4byte	.LFB33
 5282 1721 28000000 		.4byte	.LFE33-.LFB33
 5283 1725 01       		.uleb128 0x1
 5284 1726 9C       		.byte	0x9c
 5285 1727 57170000 		.4byte	0x1757
 5286 172b 20       		.uleb128 0x20
 5287 172c 82020000 		.4byte	.LASF60
 5288 1730 01       		.byte	0x1
 5289 1731 540A     		.2byte	0xa54
 5290 1733 31020000 		.4byte	0x231
 5291 1737 01       		.uleb128 0x1
 5292 1738 50       		.byte	0x50
 5293 1739 20       		.uleb128 0x20
 5294 173a F2030000 		.4byte	.LASF65
 5295 173e 01       		.byte	0x1
 5296 173f 540A     		.2byte	0xa54
 5297 1741 AE000000 		.4byte	0xae
 5298 1745 01       		.uleb128 0x1
 5299 1746 51       		.byte	0x51
 5300 1747 2C       		.uleb128 0x2c
 5301 1748 757800   		.ascii	"ux\000"
 5302 174b 01       		.byte	0x1
 5303 174c 560A     		.2byte	0xa56
 5304 174e EC000000 		.4byte	0xec
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 153


 5305 1752 D5120000 		.4byte	.LLST101
 5306 1756 00       		.byte	0
 5307 1757 21       		.uleb128 0x21
 5308 1758 9D070000 		.4byte	.LASF128
 5309 175c 01       		.byte	0x1
 5310 175d 710A     		.2byte	0xa71
 5311 175f AE000000 		.4byte	0xae
 5312 1763 00000000 		.4byte	.LFB34
 5313 1767 28000000 		.4byte	.LFE34-.LFB34
 5314 176b 01       		.uleb128 0x1
 5315 176c 9C       		.byte	0x9c
 5316 176d A1170000 		.4byte	0x17a1
 5317 1771 15       		.uleb128 0x15
 5318 1772 82020000 		.4byte	.LASF60
 5319 1776 01       		.byte	0x1
 5320 1777 710A     		.2byte	0xa71
 5321 1779 31020000 		.4byte	0x231
 5322 177d FF120000 		.4byte	.LLST102
 5323 1781 2C       		.uleb128 0x2c
 5324 1782 757800   		.ascii	"ux\000"
 5325 1785 01       		.byte	0x1
 5326 1786 730A     		.2byte	0xa73
 5327 1788 EC000000 		.4byte	0xec
 5328 178c 39130000 		.4byte	.LLST103
 5329 1790 16       		.uleb128 0x16
 5330 1791 BC070000 		.4byte	.LASF129
 5331 1795 01       		.byte	0x1
 5332 1796 740A     		.2byte	0xa74
 5333 1798 AE000000 		.4byte	0xae
 5334 179c 58130000 		.4byte	.LLST104
 5335 17a0 00       		.byte	0
 5336 17a1 2B       		.uleb128 0x2b
 5337 17a2 02020000 		.4byte	.LASF131
 5338 17a6 01       		.byte	0x1
 5339 17a7 8D0A     		.2byte	0xa8d
 5340 17a9 00000000 		.4byte	.LFB35
 5341 17ad 2C000000 		.4byte	.LFE35-.LFB35
 5342 17b1 01       		.uleb128 0x1
 5343 17b2 9C       		.byte	0x9c
 5344 17b3 D5170000 		.4byte	0x17d5
 5345 17b7 20       		.uleb128 0x20
 5346 17b8 82020000 		.4byte	.LASF60
 5347 17bc 01       		.byte	0x1
 5348 17bd 8D0A     		.2byte	0xa8d
 5349 17bf 31020000 		.4byte	0x231
 5350 17c3 01       		.uleb128 0x1
 5351 17c4 50       		.byte	0x50
 5352 17c5 2C       		.uleb128 0x2c
 5353 17c6 757800   		.ascii	"ux\000"
 5354 17c9 01       		.byte	0x1
 5355 17ca 8F0A     		.2byte	0xa8f
 5356 17cc EC000000 		.4byte	0xec
 5357 17d0 8E130000 		.4byte	.LLST105
 5358 17d4 00       		.byte	0
 5359 17d5 2B       		.uleb128 0x2b
 5360 17d6 EA010000 		.4byte	.LASF132
 5361 17da 01       		.byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 154


 5362 17db B307     		.2byte	0x7b3
 5363 17dd 00000000 		.4byte	.LFB24
 5364 17e1 10000000 		.4byte	.LFE24-.LFB24
 5365 17e5 01       		.uleb128 0x1
 5366 17e6 9C       		.byte	0x9c
 5367 17e7 30180000 		.4byte	0x1830
 5368 17eb 15       		.uleb128 0x15
 5369 17ec 82020000 		.4byte	.LASF60
 5370 17f0 01       		.byte	0x1
 5371 17f1 B307     		.2byte	0x7b3
 5372 17f3 31020000 		.4byte	0x231
 5373 17f7 B8130000 		.4byte	.LLST106
 5374 17fb 16       		.uleb128 0x16
 5375 17fc 9A080000 		.4byte	.LASF73
 5376 1800 01       		.byte	0x1
 5377 1801 B507     		.2byte	0x7b5
 5378 1803 4C050000 		.4byte	0x54c
 5379 1807 D6130000 		.4byte	.LLST107
 5380 180b 1D       		.uleb128 0x1d
 5381 180c 08000000 		.4byte	.LVL327
 5382 1810 A1170000 		.4byte	0x17a1
 5383 1814 1F180000 		.4byte	0x181f
 5384 1818 1B       		.uleb128 0x1b
 5385 1819 01       		.uleb128 0x1
 5386 181a 50       		.byte	0x50
 5387 181b 02       		.uleb128 0x2
 5388 181c 74       		.byte	0x74
 5389 181d 00       		.sleb128 0
 5390 181e 00       		.byte	0
 5391 181f 1A       		.uleb128 0x1a
 5392 1820 0E000000 		.4byte	.LVL328
 5393 1824 B0190000 		.4byte	0x19b0
 5394 1828 1B       		.uleb128 0x1b
 5395 1829 01       		.uleb128 0x1
 5396 182a 50       		.byte	0x50
 5397 182b 02       		.uleb128 0x2
 5398 182c 74       		.byte	0x74
 5399 182d 00       		.sleb128 0
 5400 182e 00       		.byte	0
 5401 182f 00       		.byte	0
 5402 1830 2B       		.uleb128 0x2b
 5403 1831 CE070000 		.4byte	.LASF133
 5404 1835 01       		.byte	0x1
 5405 1836 AD0A     		.2byte	0xaad
 5406 1838 00000000 		.4byte	.LFB36
 5407 183c 4C000000 		.4byte	.LFE36-.LFB36
 5408 1840 01       		.uleb128 0x1
 5409 1841 9C       		.byte	0x9c
 5410 1842 C9180000 		.4byte	0x18c9
 5411 1846 15       		.uleb128 0x15
 5412 1847 82020000 		.4byte	.LASF60
 5413 184b 01       		.byte	0x1
 5414 184c AD0A     		.2byte	0xaad
 5415 184e 31020000 		.4byte	0x231
 5416 1852 F4130000 		.4byte	.LLST108
 5417 1856 15       		.uleb128 0x15
 5418 1857 8D090000 		.4byte	.LASF96
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 155


 5419 185b 01       		.byte	0x1
 5420 185c AD0A     		.2byte	0xaad
 5421 185e F7000000 		.4byte	0xf7
 5422 1862 12140000 		.4byte	.LLST109
 5423 1866 15       		.uleb128 0x15
 5424 1867 0D010000 		.4byte	.LASF134
 5425 186b 01       		.byte	0x1
 5426 186c AD0A     		.2byte	0xaad
 5427 186e 51050000 		.4byte	0x551
 5428 1872 30140000 		.4byte	.LLST110
 5429 1876 16       		.uleb128 0x16
 5430 1877 9A080000 		.4byte	.LASF73
 5431 187b 01       		.byte	0x1
 5432 187c AF0A     		.2byte	0xaaf
 5433 187e 4C050000 		.4byte	0x54c
 5434 1882 4E140000 		.4byte	.LLST111
 5435 1886 18       		.uleb128 0x18
 5436 1887 0C000000 		.4byte	.LVL331
 5437 188b EA180000 		.4byte	0x18ea
 5438 188f 18       		.uleb128 0x18
 5439 1890 34000000 		.4byte	.LVL332
 5440 1894 F5180000 		.4byte	0x18f5
 5441 1898 1D       		.uleb128 0x1d
 5442 1899 44000000 		.4byte	.LVL333
 5443 189d BB190000 		.4byte	0x19bb
 5444 18a1 B8180000 		.4byte	0x18b8
 5445 18a5 1B       		.uleb128 0x1b
 5446 18a6 01       		.uleb128 0x1
 5447 18a7 50       		.byte	0x50
 5448 18a8 02       		.uleb128 0x2
 5449 18a9 74       		.byte	0x74
 5450 18aa 24       		.sleb128 36
 5451 18ab 1B       		.uleb128 0x1b
 5452 18ac 01       		.uleb128 0x1
 5453 18ad 51       		.byte	0x51
 5454 18ae 02       		.uleb128 0x2
 5455 18af 75       		.byte	0x75
 5456 18b0 00       		.sleb128 0
 5457 18b1 1B       		.uleb128 0x1b
 5458 18b2 01       		.uleb128 0x1
 5459 18b3 52       		.byte	0x52
 5460 18b4 02       		.uleb128 0x2
 5461 18b5 76       		.byte	0x76
 5462 18b6 00       		.sleb128 0
 5463 18b7 00       		.byte	0
 5464 18b8 1A       		.uleb128 0x1a
 5465 18b9 4A000000 		.4byte	.LVL334
 5466 18bd A2050000 		.4byte	0x5a2
 5467 18c1 1B       		.uleb128 0x1b
 5468 18c2 01       		.uleb128 0x1
 5469 18c3 50       		.byte	0x50
 5470 18c4 02       		.uleb128 0x2
 5471 18c5 74       		.byte	0x74
 5472 18c6 00       		.sleb128 0
 5473 18c7 00       		.byte	0
 5474 18c8 00       		.byte	0
 5475 18c9 2D       		.uleb128 0x2d
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 156


 5476 18ca 95030000 		.4byte	0x395
 5477 18ce D9180000 		.4byte	0x18d9
 5478 18d2 2E       		.uleb128 0x2e
 5479 18d3 9E000000 		.4byte	0x9e
 5480 18d7 09       		.byte	0x9
 5481 18d8 00       		.byte	0
 5482 18d9 2F       		.uleb128 0x2f
 5483 18da 2E050000 		.4byte	.LASF160
 5484 18de 01       		.byte	0x1
 5485 18df A2       		.byte	0xa2
 5486 18e0 C9180000 		.4byte	0x18c9
 5487 18e4 05       		.uleb128 0x5
 5488 18e5 03       		.byte	0x3
 5489 18e6 00000000 		.4byte	xQueueRegistry
 5490 18ea 30       		.uleb128 0x30
 5491 18eb A4010000 		.4byte	.LASF135
 5492 18ef A4010000 		.4byte	.LASF135
 5493 18f3 02       		.byte	0x2
 5494 18f4 61       		.byte	0x61
 5495 18f5 30       		.uleb128 0x30
 5496 18f6 10000000 		.4byte	.LASF136
 5497 18fa 10000000 		.4byte	.LASF136
 5498 18fe 02       		.byte	0x2
 5499 18ff 62       		.byte	0x62
 5500 1900 31       		.uleb128 0x31
 5501 1901 B0040000 		.4byte	.LASF137
 5502 1905 B0040000 		.4byte	.LASF137
 5503 1909 07       		.byte	0x7
 5504 190a DF08     		.2byte	0x8df
 5505 190c 32       		.uleb128 0x32
 5506 190d 370A0000 		.4byte	.LASF161
 5507 1911 370A0000 		.4byte	.LASF161
 5508 1915 31       		.uleb128 0x31
 5509 1916 640A0000 		.4byte	.LASF138
 5510 191a 640A0000 		.4byte	.LASF138
 5511 191e 07       		.byte	0x7
 5512 191f A608     		.2byte	0x8a6
 5513 1921 31       		.uleb128 0x31
 5514 1922 B3080000 		.4byte	.LASF139
 5515 1926 B3080000 		.4byte	.LASF139
 5516 192a 07       		.byte	0x7
 5517 192b CD08     		.2byte	0x8cd
 5518 192d 31       		.uleb128 0x31
 5519 192e 44090000 		.4byte	.LASF140
 5520 1932 44090000 		.4byte	.LASF140
 5521 1936 06       		.byte	0x6
 5522 1937 5901     		.2byte	0x159
 5523 1939 30       		.uleb128 0x30
 5524 193a 16030000 		.4byte	.LASF141
 5525 193e 16030000 		.4byte	.LASF141
 5526 1942 09       		.byte	0x9
 5527 1943 81       		.byte	0x81
 5528 1944 31       		.uleb128 0x31
 5529 1945 97060000 		.4byte	.LASF142
 5530 1949 97060000 		.4byte	.LASF142
 5531 194d 07       		.byte	0x7
 5532 194e 1A09     		.2byte	0x91a
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 157


 5533 1950 31       		.uleb128 0x31
 5534 1951 23030000 		.4byte	.LASF143
 5535 1955 23030000 		.4byte	.LASF143
 5536 1959 07       		.byte	0x7
 5537 195a FA04     		.2byte	0x4fa
 5538 195c 31       		.uleb128 0x31
 5539 195d 3A080000 		.4byte	.LASF144
 5540 1961 3A080000 		.4byte	.LASF144
 5541 1965 07       		.byte	0x7
 5542 1966 C708     		.2byte	0x8c7
 5543 1968 31       		.uleb128 0x31
 5544 1969 62040000 		.4byte	.LASF145
 5545 196d 62040000 		.4byte	.LASF145
 5546 1971 07       		.byte	0x7
 5547 1972 7E08     		.2byte	0x87e
 5548 1974 31       		.uleb128 0x31
 5549 1975 1D080000 		.4byte	.LASF146
 5550 1979 1D080000 		.4byte	.LASF146
 5551 197d 07       		.byte	0x7
 5552 197e 3005     		.2byte	0x530
 5553 1980 31       		.uleb128 0x31
 5554 1981 A2090000 		.4byte	.LASF147
 5555 1985 A2090000 		.4byte	.LASF147
 5556 1989 07       		.byte	0x7
 5557 198a BC08     		.2byte	0x8bc
 5558 198c 31       		.uleb128 0x31
 5559 198d 78040000 		.4byte	.LASF148
 5560 1991 78040000 		.4byte	.LASF148
 5561 1995 07       		.byte	0x7
 5562 1996 1409     		.2byte	0x914
 5563 1998 31       		.uleb128 0x31
 5564 1999 69090000 		.4byte	.LASF149
 5565 199d 69090000 		.4byte	.LASF149
 5566 19a1 07       		.byte	0x7
 5567 19a2 E908     		.2byte	0x8e9
 5568 19a4 31       		.uleb128 0x31
 5569 19a5 D6080000 		.4byte	.LASF150
 5570 19a9 D6080000 		.4byte	.LASF150
 5571 19ad 07       		.byte	0x7
 5572 19ae D908     		.2byte	0x8d9
 5573 19b0 30       		.uleb128 0x30
 5574 19b1 4F080000 		.4byte	.LASF151
 5575 19b5 4F080000 		.4byte	.LASF151
 5576 19b9 09       		.byte	0x9
 5577 19ba 82       		.byte	0x82
 5578 19bb 31       		.uleb128 0x31
 5579 19bc 81050000 		.4byte	.LASF152
 5580 19c0 81050000 		.4byte	.LASF152
 5581 19c4 07       		.byte	0x7
 5582 19c5 8C08     		.2byte	0x88c
 5583 19c7 00       		.byte	0
 5584              		.section	.debug_abbrev,"",%progbits
 5585              	.Ldebug_abbrev0:
 5586 0000 01       		.uleb128 0x1
 5587 0001 11       		.uleb128 0x11
 5588 0002 01       		.byte	0x1
 5589 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 158


 5590 0004 0E       		.uleb128 0xe
 5591 0005 13       		.uleb128 0x13
 5592 0006 0B       		.uleb128 0xb
 5593 0007 03       		.uleb128 0x3
 5594 0008 0E       		.uleb128 0xe
 5595 0009 1B       		.uleb128 0x1b
 5596 000a 0E       		.uleb128 0xe
 5597 000b 55       		.uleb128 0x55
 5598 000c 17       		.uleb128 0x17
 5599 000d 11       		.uleb128 0x11
 5600 000e 01       		.uleb128 0x1
 5601 000f 10       		.uleb128 0x10
 5602 0010 17       		.uleb128 0x17
 5603 0011 00       		.byte	0
 5604 0012 00       		.byte	0
 5605 0013 02       		.uleb128 0x2
 5606 0014 16       		.uleb128 0x16
 5607 0015 00       		.byte	0
 5608 0016 03       		.uleb128 0x3
 5609 0017 0E       		.uleb128 0xe
 5610 0018 3A       		.uleb128 0x3a
 5611 0019 0B       		.uleb128 0xb
 5612 001a 3B       		.uleb128 0x3b
 5613 001b 0B       		.uleb128 0xb
 5614 001c 49       		.uleb128 0x49
 5615 001d 13       		.uleb128 0x13
 5616 001e 00       		.byte	0
 5617 001f 00       		.byte	0
 5618 0020 03       		.uleb128 0x3
 5619 0021 24       		.uleb128 0x24
 5620 0022 00       		.byte	0
 5621 0023 0B       		.uleb128 0xb
 5622 0024 0B       		.uleb128 0xb
 5623 0025 3E       		.uleb128 0x3e
 5624 0026 0B       		.uleb128 0xb
 5625 0027 03       		.uleb128 0x3
 5626 0028 0E       		.uleb128 0xe
 5627 0029 00       		.byte	0
 5628 002a 00       		.byte	0
 5629 002b 04       		.uleb128 0x4
 5630 002c 24       		.uleb128 0x24
 5631 002d 00       		.byte	0
 5632 002e 0B       		.uleb128 0xb
 5633 002f 0B       		.uleb128 0xb
 5634 0030 3E       		.uleb128 0x3e
 5635 0031 0B       		.uleb128 0xb
 5636 0032 03       		.uleb128 0x3
 5637 0033 08       		.uleb128 0x8
 5638 0034 00       		.byte	0
 5639 0035 00       		.byte	0
 5640 0036 05       		.uleb128 0x5
 5641 0037 0F       		.uleb128 0xf
 5642 0038 00       		.byte	0
 5643 0039 0B       		.uleb128 0xb
 5644 003a 0B       		.uleb128 0xb
 5645 003b 00       		.byte	0
 5646 003c 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 159


 5647 003d 06       		.uleb128 0x6
 5648 003e 0F       		.uleb128 0xf
 5649 003f 00       		.byte	0
 5650 0040 0B       		.uleb128 0xb
 5651 0041 0B       		.uleb128 0xb
 5652 0042 49       		.uleb128 0x49
 5653 0043 13       		.uleb128 0x13
 5654 0044 00       		.byte	0
 5655 0045 00       		.byte	0
 5656 0046 07       		.uleb128 0x7
 5657 0047 26       		.uleb128 0x26
 5658 0048 00       		.byte	0
 5659 0049 49       		.uleb128 0x49
 5660 004a 13       		.uleb128 0x13
 5661 004b 00       		.byte	0
 5662 004c 00       		.byte	0
 5663 004d 08       		.uleb128 0x8
 5664 004e 26       		.uleb128 0x26
 5665 004f 00       		.byte	0
 5666 0050 00       		.byte	0
 5667 0051 00       		.byte	0
 5668 0052 09       		.uleb128 0x9
 5669 0053 13       		.uleb128 0x13
 5670 0054 01       		.byte	0x1
 5671 0055 03       		.uleb128 0x3
 5672 0056 0E       		.uleb128 0xe
 5673 0057 0B       		.uleb128 0xb
 5674 0058 0B       		.uleb128 0xb
 5675 0059 3A       		.uleb128 0x3a
 5676 005a 0B       		.uleb128 0xb
 5677 005b 3B       		.uleb128 0x3b
 5678 005c 0B       		.uleb128 0xb
 5679 005d 01       		.uleb128 0x1
 5680 005e 13       		.uleb128 0x13
 5681 005f 00       		.byte	0
 5682 0060 00       		.byte	0
 5683 0061 0A       		.uleb128 0xa
 5684 0062 0D       		.uleb128 0xd
 5685 0063 00       		.byte	0
 5686 0064 03       		.uleb128 0x3
 5687 0065 0E       		.uleb128 0xe
 5688 0066 3A       		.uleb128 0x3a
 5689 0067 0B       		.uleb128 0xb
 5690 0068 3B       		.uleb128 0x3b
 5691 0069 0B       		.uleb128 0xb
 5692 006a 49       		.uleb128 0x49
 5693 006b 13       		.uleb128 0x13
 5694 006c 38       		.uleb128 0x38
 5695 006d 0B       		.uleb128 0xb
 5696 006e 00       		.byte	0
 5697 006f 00       		.byte	0
 5698 0070 0B       		.uleb128 0xb
 5699 0071 35       		.uleb128 0x35
 5700 0072 00       		.byte	0
 5701 0073 49       		.uleb128 0x49
 5702 0074 13       		.uleb128 0x13
 5703 0075 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 160


 5704 0076 00       		.byte	0
 5705 0077 0C       		.uleb128 0xc
 5706 0078 13       		.uleb128 0x13
 5707 0079 00       		.byte	0
 5708 007a 03       		.uleb128 0x3
 5709 007b 0E       		.uleb128 0xe
 5710 007c 3C       		.uleb128 0x3c
 5711 007d 19       		.uleb128 0x19
 5712 007e 00       		.byte	0
 5713 007f 00       		.byte	0
 5714 0080 0D       		.uleb128 0xd
 5715 0081 0D       		.uleb128 0xd
 5716 0082 00       		.byte	0
 5717 0083 03       		.uleb128 0x3
 5718 0084 08       		.uleb128 0x8
 5719 0085 3A       		.uleb128 0x3a
 5720 0086 0B       		.uleb128 0xb
 5721 0087 3B       		.uleb128 0x3b
 5722 0088 0B       		.uleb128 0xb
 5723 0089 49       		.uleb128 0x49
 5724 008a 13       		.uleb128 0x13
 5725 008b 38       		.uleb128 0x38
 5726 008c 0B       		.uleb128 0xb
 5727 008d 00       		.byte	0
 5728 008e 00       		.byte	0
 5729 008f 0E       		.uleb128 0xe
 5730 0090 17       		.uleb128 0x17
 5731 0091 01       		.byte	0x1
 5732 0092 0B       		.uleb128 0xb
 5733 0093 0B       		.uleb128 0xb
 5734 0094 3A       		.uleb128 0x3a
 5735 0095 0B       		.uleb128 0xb
 5736 0096 3B       		.uleb128 0x3b
 5737 0097 0B       		.uleb128 0xb
 5738 0098 01       		.uleb128 0x1
 5739 0099 13       		.uleb128 0x13
 5740 009a 00       		.byte	0
 5741 009b 00       		.byte	0
 5742 009c 0F       		.uleb128 0xf
 5743 009d 0D       		.uleb128 0xd
 5744 009e 00       		.byte	0
 5745 009f 03       		.uleb128 0x3
 5746 00a0 0E       		.uleb128 0xe
 5747 00a1 3A       		.uleb128 0x3a
 5748 00a2 0B       		.uleb128 0xb
 5749 00a3 3B       		.uleb128 0x3b
 5750 00a4 0B       		.uleb128 0xb
 5751 00a5 49       		.uleb128 0x49
 5752 00a6 13       		.uleb128 0x13
 5753 00a7 00       		.byte	0
 5754 00a8 00       		.byte	0
 5755 00a9 10       		.uleb128 0x10
 5756 00aa 2E       		.uleb128 0x2e
 5757 00ab 01       		.byte	0x1
 5758 00ac 03       		.uleb128 0x3
 5759 00ad 0E       		.uleb128 0xe
 5760 00ae 3A       		.uleb128 0x3a
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 161


 5761 00af 0B       		.uleb128 0xb
 5762 00b0 3B       		.uleb128 0x3b
 5763 00b1 0B       		.uleb128 0xb
 5764 00b2 27       		.uleb128 0x27
 5765 00b3 19       		.uleb128 0x19
 5766 00b4 49       		.uleb128 0x49
 5767 00b5 13       		.uleb128 0x13
 5768 00b6 20       		.uleb128 0x20
 5769 00b7 0B       		.uleb128 0xb
 5770 00b8 01       		.uleb128 0x1
 5771 00b9 13       		.uleb128 0x13
 5772 00ba 00       		.byte	0
 5773 00bb 00       		.byte	0
 5774 00bc 11       		.uleb128 0x11
 5775 00bd 34       		.uleb128 0x34
 5776 00be 00       		.byte	0
 5777 00bf 03       		.uleb128 0x3
 5778 00c0 0E       		.uleb128 0xe
 5779 00c1 3A       		.uleb128 0x3a
 5780 00c2 0B       		.uleb128 0xb
 5781 00c3 3B       		.uleb128 0x3b
 5782 00c4 0B       		.uleb128 0xb
 5783 00c5 49       		.uleb128 0x49
 5784 00c6 13       		.uleb128 0x13
 5785 00c7 00       		.byte	0
 5786 00c8 00       		.byte	0
 5787 00c9 12       		.uleb128 0x12
 5788 00ca 2E       		.uleb128 0x2e
 5789 00cb 01       		.byte	0x1
 5790 00cc 03       		.uleb128 0x3
 5791 00cd 0E       		.uleb128 0xe
 5792 00ce 3A       		.uleb128 0x3a
 5793 00cf 0B       		.uleb128 0xb
 5794 00d0 3B       		.uleb128 0x3b
 5795 00d1 0B       		.uleb128 0xb
 5796 00d2 27       		.uleb128 0x27
 5797 00d3 19       		.uleb128 0x19
 5798 00d4 20       		.uleb128 0x20
 5799 00d5 0B       		.uleb128 0xb
 5800 00d6 01       		.uleb128 0x1
 5801 00d7 13       		.uleb128 0x13
 5802 00d8 00       		.byte	0
 5803 00d9 00       		.byte	0
 5804 00da 13       		.uleb128 0x13
 5805 00db 05       		.uleb128 0x5
 5806 00dc 00       		.byte	0
 5807 00dd 03       		.uleb128 0x3
 5808 00de 0E       		.uleb128 0xe
 5809 00df 3A       		.uleb128 0x3a
 5810 00e0 0B       		.uleb128 0xb
 5811 00e1 3B       		.uleb128 0x3b
 5812 00e2 0B       		.uleb128 0xb
 5813 00e3 49       		.uleb128 0x49
 5814 00e4 13       		.uleb128 0x13
 5815 00e5 00       		.byte	0
 5816 00e6 00       		.byte	0
 5817 00e7 14       		.uleb128 0x14
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 162


 5818 00e8 2E       		.uleb128 0x2e
 5819 00e9 01       		.byte	0x1
 5820 00ea 03       		.uleb128 0x3
 5821 00eb 0E       		.uleb128 0xe
 5822 00ec 3A       		.uleb128 0x3a
 5823 00ed 0B       		.uleb128 0xb
 5824 00ee 3B       		.uleb128 0x3b
 5825 00ef 05       		.uleb128 0x5
 5826 00f0 27       		.uleb128 0x27
 5827 00f1 19       		.uleb128 0x19
 5828 00f2 49       		.uleb128 0x49
 5829 00f3 13       		.uleb128 0x13
 5830 00f4 11       		.uleb128 0x11
 5831 00f5 01       		.uleb128 0x1
 5832 00f6 12       		.uleb128 0x12
 5833 00f7 06       		.uleb128 0x6
 5834 00f8 40       		.uleb128 0x40
 5835 00f9 18       		.uleb128 0x18
 5836 00fa 9742     		.uleb128 0x2117
 5837 00fc 19       		.uleb128 0x19
 5838 00fd 01       		.uleb128 0x1
 5839 00fe 13       		.uleb128 0x13
 5840 00ff 00       		.byte	0
 5841 0100 00       		.byte	0
 5842 0101 15       		.uleb128 0x15
 5843 0102 05       		.uleb128 0x5
 5844 0103 00       		.byte	0
 5845 0104 03       		.uleb128 0x3
 5846 0105 0E       		.uleb128 0xe
 5847 0106 3A       		.uleb128 0x3a
 5848 0107 0B       		.uleb128 0xb
 5849 0108 3B       		.uleb128 0x3b
 5850 0109 05       		.uleb128 0x5
 5851 010a 49       		.uleb128 0x49
 5852 010b 13       		.uleb128 0x13
 5853 010c 02       		.uleb128 0x2
 5854 010d 17       		.uleb128 0x17
 5855 010e 00       		.byte	0
 5856 010f 00       		.byte	0
 5857 0110 16       		.uleb128 0x16
 5858 0111 34       		.uleb128 0x34
 5859 0112 00       		.byte	0
 5860 0113 03       		.uleb128 0x3
 5861 0114 0E       		.uleb128 0xe
 5862 0115 3A       		.uleb128 0x3a
 5863 0116 0B       		.uleb128 0xb
 5864 0117 3B       		.uleb128 0x3b
 5865 0118 05       		.uleb128 0x5
 5866 0119 49       		.uleb128 0x49
 5867 011a 13       		.uleb128 0x13
 5868 011b 02       		.uleb128 0x2
 5869 011c 17       		.uleb128 0x17
 5870 011d 00       		.byte	0
 5871 011e 00       		.byte	0
 5872 011f 17       		.uleb128 0x17
 5873 0120 34       		.uleb128 0x34
 5874 0121 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 163


 5875 0122 03       		.uleb128 0x3
 5876 0123 0E       		.uleb128 0xe
 5877 0124 3A       		.uleb128 0x3a
 5878 0125 0B       		.uleb128 0xb
 5879 0126 3B       		.uleb128 0x3b
 5880 0127 05       		.uleb128 0x5
 5881 0128 49       		.uleb128 0x49
 5882 0129 13       		.uleb128 0x13
 5883 012a 02       		.uleb128 0x2
 5884 012b 18       		.uleb128 0x18
 5885 012c 00       		.byte	0
 5886 012d 00       		.byte	0
 5887 012e 18       		.uleb128 0x18
 5888 012f 898201   		.uleb128 0x4109
 5889 0132 00       		.byte	0
 5890 0133 11       		.uleb128 0x11
 5891 0134 01       		.uleb128 0x1
 5892 0135 31       		.uleb128 0x31
 5893 0136 13       		.uleb128 0x13
 5894 0137 00       		.byte	0
 5895 0138 00       		.byte	0
 5896 0139 19       		.uleb128 0x19
 5897 013a 2E       		.uleb128 0x2e
 5898 013b 01       		.byte	0x1
 5899 013c 03       		.uleb128 0x3
 5900 013d 0E       		.uleb128 0xe
 5901 013e 3A       		.uleb128 0x3a
 5902 013f 0B       		.uleb128 0xb
 5903 0140 3B       		.uleb128 0x3b
 5904 0141 05       		.uleb128 0x5
 5905 0142 27       		.uleb128 0x27
 5906 0143 19       		.uleb128 0x19
 5907 0144 11       		.uleb128 0x11
 5908 0145 01       		.uleb128 0x1
 5909 0146 12       		.uleb128 0x12
 5910 0147 06       		.uleb128 0x6
 5911 0148 40       		.uleb128 0x40
 5912 0149 18       		.uleb128 0x18
 5913 014a 9742     		.uleb128 0x2117
 5914 014c 19       		.uleb128 0x19
 5915 014d 01       		.uleb128 0x1
 5916 014e 13       		.uleb128 0x13
 5917 014f 00       		.byte	0
 5918 0150 00       		.byte	0
 5919 0151 1A       		.uleb128 0x1a
 5920 0152 898201   		.uleb128 0x4109
 5921 0155 01       		.byte	0x1
 5922 0156 11       		.uleb128 0x11
 5923 0157 01       		.uleb128 0x1
 5924 0158 31       		.uleb128 0x31
 5925 0159 13       		.uleb128 0x13
 5926 015a 00       		.byte	0
 5927 015b 00       		.byte	0
 5928 015c 1B       		.uleb128 0x1b
 5929 015d 8A8201   		.uleb128 0x410a
 5930 0160 00       		.byte	0
 5931 0161 02       		.uleb128 0x2
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 164


 5932 0162 18       		.uleb128 0x18
 5933 0163 9142     		.uleb128 0x2111
 5934 0165 18       		.uleb128 0x18
 5935 0166 00       		.byte	0
 5936 0167 00       		.byte	0
 5937 0168 1C       		.uleb128 0x1c
 5938 0169 0B       		.uleb128 0xb
 5939 016a 01       		.byte	0x1
 5940 016b 11       		.uleb128 0x11
 5941 016c 01       		.uleb128 0x1
 5942 016d 12       		.uleb128 0x12
 5943 016e 06       		.uleb128 0x6
 5944 016f 01       		.uleb128 0x1
 5945 0170 13       		.uleb128 0x13
 5946 0171 00       		.byte	0
 5947 0172 00       		.byte	0
 5948 0173 1D       		.uleb128 0x1d
 5949 0174 898201   		.uleb128 0x4109
 5950 0177 01       		.byte	0x1
 5951 0178 11       		.uleb128 0x11
 5952 0179 01       		.uleb128 0x1
 5953 017a 31       		.uleb128 0x31
 5954 017b 13       		.uleb128 0x13
 5955 017c 01       		.uleb128 0x1
 5956 017d 13       		.uleb128 0x13
 5957 017e 00       		.byte	0
 5958 017f 00       		.byte	0
 5959 0180 1E       		.uleb128 0x1e
 5960 0181 2E       		.uleb128 0x2e
 5961 0182 01       		.byte	0x1
 5962 0183 3F       		.uleb128 0x3f
 5963 0184 19       		.uleb128 0x19
 5964 0185 03       		.uleb128 0x3
 5965 0186 0E       		.uleb128 0xe
 5966 0187 3A       		.uleb128 0x3a
 5967 0188 0B       		.uleb128 0xb
 5968 0189 3B       		.uleb128 0x3b
 5969 018a 0B       		.uleb128 0xb
 5970 018b 27       		.uleb128 0x27
 5971 018c 19       		.uleb128 0x19
 5972 018d 49       		.uleb128 0x49
 5973 018e 13       		.uleb128 0x13
 5974 018f 11       		.uleb128 0x11
 5975 0190 01       		.uleb128 0x1
 5976 0191 12       		.uleb128 0x12
 5977 0192 06       		.uleb128 0x6
 5978 0193 40       		.uleb128 0x40
 5979 0194 18       		.uleb128 0x18
 5980 0195 9742     		.uleb128 0x2117
 5981 0197 19       		.uleb128 0x19
 5982 0198 01       		.uleb128 0x1
 5983 0199 13       		.uleb128 0x13
 5984 019a 00       		.byte	0
 5985 019b 00       		.byte	0
 5986 019c 1F       		.uleb128 0x1f
 5987 019d 05       		.uleb128 0x5
 5988 019e 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 165


 5989 019f 03       		.uleb128 0x3
 5990 01a0 0E       		.uleb128 0xe
 5991 01a1 3A       		.uleb128 0x3a
 5992 01a2 0B       		.uleb128 0xb
 5993 01a3 3B       		.uleb128 0x3b
 5994 01a4 0B       		.uleb128 0xb
 5995 01a5 49       		.uleb128 0x49
 5996 01a6 13       		.uleb128 0x13
 5997 01a7 02       		.uleb128 0x2
 5998 01a8 17       		.uleb128 0x17
 5999 01a9 00       		.byte	0
 6000 01aa 00       		.byte	0
 6001 01ab 20       		.uleb128 0x20
 6002 01ac 05       		.uleb128 0x5
 6003 01ad 00       		.byte	0
 6004 01ae 03       		.uleb128 0x3
 6005 01af 0E       		.uleb128 0xe
 6006 01b0 3A       		.uleb128 0x3a
 6007 01b1 0B       		.uleb128 0xb
 6008 01b2 3B       		.uleb128 0x3b
 6009 01b3 05       		.uleb128 0x5
 6010 01b4 49       		.uleb128 0x49
 6011 01b5 13       		.uleb128 0x13
 6012 01b6 02       		.uleb128 0x2
 6013 01b7 18       		.uleb128 0x18
 6014 01b8 00       		.byte	0
 6015 01b9 00       		.byte	0
 6016 01ba 21       		.uleb128 0x21
 6017 01bb 2E       		.uleb128 0x2e
 6018 01bc 01       		.byte	0x1
 6019 01bd 3F       		.uleb128 0x3f
 6020 01be 19       		.uleb128 0x19
 6021 01bf 03       		.uleb128 0x3
 6022 01c0 0E       		.uleb128 0xe
 6023 01c1 3A       		.uleb128 0x3a
 6024 01c2 0B       		.uleb128 0xb
 6025 01c3 3B       		.uleb128 0x3b
 6026 01c4 05       		.uleb128 0x5
 6027 01c5 27       		.uleb128 0x27
 6028 01c6 19       		.uleb128 0x19
 6029 01c7 49       		.uleb128 0x49
 6030 01c8 13       		.uleb128 0x13
 6031 01c9 11       		.uleb128 0x11
 6032 01ca 01       		.uleb128 0x1
 6033 01cb 12       		.uleb128 0x12
 6034 01cc 06       		.uleb128 0x6
 6035 01cd 40       		.uleb128 0x40
 6036 01ce 18       		.uleb128 0x18
 6037 01cf 9742     		.uleb128 0x2117
 6038 01d1 19       		.uleb128 0x19
 6039 01d2 01       		.uleb128 0x1
 6040 01d3 13       		.uleb128 0x13
 6041 01d4 00       		.byte	0
 6042 01d5 00       		.byte	0
 6043 01d6 22       		.uleb128 0x22
 6044 01d7 34       		.uleb128 0x34
 6045 01d8 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 166


 6046 01d9 03       		.uleb128 0x3
 6047 01da 0E       		.uleb128 0xe
 6048 01db 3A       		.uleb128 0x3a
 6049 01dc 0B       		.uleb128 0xb
 6050 01dd 3B       		.uleb128 0x3b
 6051 01de 05       		.uleb128 0x5
 6052 01df 49       		.uleb128 0x49
 6053 01e0 13       		.uleb128 0x13
 6054 01e1 1C       		.uleb128 0x1c
 6055 01e2 0B       		.uleb128 0xb
 6056 01e3 00       		.byte	0
 6057 01e4 00       		.byte	0
 6058 01e5 23       		.uleb128 0x23
 6059 01e6 34       		.uleb128 0x34
 6060 01e7 00       		.byte	0
 6061 01e8 03       		.uleb128 0x3
 6062 01e9 0E       		.uleb128 0xe
 6063 01ea 3A       		.uleb128 0x3a
 6064 01eb 0B       		.uleb128 0xb
 6065 01ec 3B       		.uleb128 0x3b
 6066 01ed 05       		.uleb128 0x5
 6067 01ee 49       		.uleb128 0x49
 6068 01ef 13       		.uleb128 0x13
 6069 01f0 00       		.byte	0
 6070 01f1 00       		.byte	0
 6071 01f2 24       		.uleb128 0x24
 6072 01f3 1D       		.uleb128 0x1d
 6073 01f4 01       		.byte	0x1
 6074 01f5 31       		.uleb128 0x31
 6075 01f6 13       		.uleb128 0x13
 6076 01f7 11       		.uleb128 0x11
 6077 01f8 01       		.uleb128 0x1
 6078 01f9 12       		.uleb128 0x12
 6079 01fa 06       		.uleb128 0x6
 6080 01fb 58       		.uleb128 0x58
 6081 01fc 0B       		.uleb128 0xb
 6082 01fd 59       		.uleb128 0x59
 6083 01fe 05       		.uleb128 0x5
 6084 01ff 01       		.uleb128 0x1
 6085 0200 13       		.uleb128 0x13
 6086 0201 00       		.byte	0
 6087 0202 00       		.byte	0
 6088 0203 25       		.uleb128 0x25
 6089 0204 0B       		.uleb128 0xb
 6090 0205 01       		.byte	0x1
 6091 0206 11       		.uleb128 0x11
 6092 0207 01       		.uleb128 0x1
 6093 0208 12       		.uleb128 0x12
 6094 0209 06       		.uleb128 0x6
 6095 020a 00       		.byte	0
 6096 020b 00       		.byte	0
 6097 020c 26       		.uleb128 0x26
 6098 020d 34       		.uleb128 0x34
 6099 020e 00       		.byte	0
 6100 020f 31       		.uleb128 0x31
 6101 0210 13       		.uleb128 0x13
 6102 0211 00       		.byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 167


 6103 0212 00       		.byte	0
 6104 0213 27       		.uleb128 0x27
 6105 0214 0B       		.uleb128 0xb
 6106 0215 01       		.byte	0x1
 6107 0216 55       		.uleb128 0x55
 6108 0217 17       		.uleb128 0x17
 6109 0218 01       		.uleb128 0x1
 6110 0219 13       		.uleb128 0x13
 6111 021a 00       		.byte	0
 6112 021b 00       		.byte	0
 6113 021c 28       		.uleb128 0x28
 6114 021d 1D       		.uleb128 0x1d
 6115 021e 01       		.byte	0x1
 6116 021f 31       		.uleb128 0x31
 6117 0220 13       		.uleb128 0x13
 6118 0221 11       		.uleb128 0x11
 6119 0222 01       		.uleb128 0x1
 6120 0223 12       		.uleb128 0x12
 6121 0224 06       		.uleb128 0x6
 6122 0225 58       		.uleb128 0x58
 6123 0226 0B       		.uleb128 0xb
 6124 0227 59       		.uleb128 0x59
 6125 0228 05       		.uleb128 0x5
 6126 0229 00       		.byte	0
 6127 022a 00       		.byte	0
 6128 022b 29       		.uleb128 0x29
 6129 022c 05       		.uleb128 0x5
 6130 022d 00       		.byte	0
 6131 022e 31       		.uleb128 0x31
 6132 022f 13       		.uleb128 0x13
 6133 0230 02       		.uleb128 0x2
 6134 0231 17       		.uleb128 0x17
 6135 0232 00       		.byte	0
 6136 0233 00       		.byte	0
 6137 0234 2A       		.uleb128 0x2a
 6138 0235 0B       		.uleb128 0xb
 6139 0236 01       		.byte	0x1
 6140 0237 55       		.uleb128 0x55
 6141 0238 17       		.uleb128 0x17
 6142 0239 00       		.byte	0
 6143 023a 00       		.byte	0
 6144 023b 2B       		.uleb128 0x2b
 6145 023c 2E       		.uleb128 0x2e
 6146 023d 01       		.byte	0x1
 6147 023e 3F       		.uleb128 0x3f
 6148 023f 19       		.uleb128 0x19
 6149 0240 03       		.uleb128 0x3
 6150 0241 0E       		.uleb128 0xe
 6151 0242 3A       		.uleb128 0x3a
 6152 0243 0B       		.uleb128 0xb
 6153 0244 3B       		.uleb128 0x3b
 6154 0245 05       		.uleb128 0x5
 6155 0246 27       		.uleb128 0x27
 6156 0247 19       		.uleb128 0x19
 6157 0248 11       		.uleb128 0x11
 6158 0249 01       		.uleb128 0x1
 6159 024a 12       		.uleb128 0x12
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 168


 6160 024b 06       		.uleb128 0x6
 6161 024c 40       		.uleb128 0x40
 6162 024d 18       		.uleb128 0x18
 6163 024e 9742     		.uleb128 0x2117
 6164 0250 19       		.uleb128 0x19
 6165 0251 01       		.uleb128 0x1
 6166 0252 13       		.uleb128 0x13
 6167 0253 00       		.byte	0
 6168 0254 00       		.byte	0
 6169 0255 2C       		.uleb128 0x2c
 6170 0256 34       		.uleb128 0x34
 6171 0257 00       		.byte	0
 6172 0258 03       		.uleb128 0x3
 6173 0259 08       		.uleb128 0x8
 6174 025a 3A       		.uleb128 0x3a
 6175 025b 0B       		.uleb128 0xb
 6176 025c 3B       		.uleb128 0x3b
 6177 025d 05       		.uleb128 0x5
 6178 025e 49       		.uleb128 0x49
 6179 025f 13       		.uleb128 0x13
 6180 0260 02       		.uleb128 0x2
 6181 0261 17       		.uleb128 0x17
 6182 0262 00       		.byte	0
 6183 0263 00       		.byte	0
 6184 0264 2D       		.uleb128 0x2d
 6185 0265 01       		.uleb128 0x1
 6186 0266 01       		.byte	0x1
 6187 0267 49       		.uleb128 0x49
 6188 0268 13       		.uleb128 0x13
 6189 0269 01       		.uleb128 0x1
 6190 026a 13       		.uleb128 0x13
 6191 026b 00       		.byte	0
 6192 026c 00       		.byte	0
 6193 026d 2E       		.uleb128 0x2e
 6194 026e 21       		.uleb128 0x21
 6195 026f 00       		.byte	0
 6196 0270 49       		.uleb128 0x49
 6197 0271 13       		.uleb128 0x13
 6198 0272 2F       		.uleb128 0x2f
 6199 0273 0B       		.uleb128 0xb
 6200 0274 00       		.byte	0
 6201 0275 00       		.byte	0
 6202 0276 2F       		.uleb128 0x2f
 6203 0277 34       		.uleb128 0x34
 6204 0278 00       		.byte	0
 6205 0279 03       		.uleb128 0x3
 6206 027a 0E       		.uleb128 0xe
 6207 027b 3A       		.uleb128 0x3a
 6208 027c 0B       		.uleb128 0xb
 6209 027d 3B       		.uleb128 0x3b
 6210 027e 0B       		.uleb128 0xb
 6211 027f 49       		.uleb128 0x49
 6212 0280 13       		.uleb128 0x13
 6213 0281 3F       		.uleb128 0x3f
 6214 0282 19       		.uleb128 0x19
 6215 0283 02       		.uleb128 0x2
 6216 0284 18       		.uleb128 0x18
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 169


 6217 0285 00       		.byte	0
 6218 0286 00       		.byte	0
 6219 0287 30       		.uleb128 0x30
 6220 0288 2E       		.uleb128 0x2e
 6221 0289 00       		.byte	0
 6222 028a 3F       		.uleb128 0x3f
 6223 028b 19       		.uleb128 0x19
 6224 028c 3C       		.uleb128 0x3c
 6225 028d 19       		.uleb128 0x19
 6226 028e 6E       		.uleb128 0x6e
 6227 028f 0E       		.uleb128 0xe
 6228 0290 03       		.uleb128 0x3
 6229 0291 0E       		.uleb128 0xe
 6230 0292 3A       		.uleb128 0x3a
 6231 0293 0B       		.uleb128 0xb
 6232 0294 3B       		.uleb128 0x3b
 6233 0295 0B       		.uleb128 0xb
 6234 0296 00       		.byte	0
 6235 0297 00       		.byte	0
 6236 0298 31       		.uleb128 0x31
 6237 0299 2E       		.uleb128 0x2e
 6238 029a 00       		.byte	0
 6239 029b 3F       		.uleb128 0x3f
 6240 029c 19       		.uleb128 0x19
 6241 029d 3C       		.uleb128 0x3c
 6242 029e 19       		.uleb128 0x19
 6243 029f 6E       		.uleb128 0x6e
 6244 02a0 0E       		.uleb128 0xe
 6245 02a1 03       		.uleb128 0x3
 6246 02a2 0E       		.uleb128 0xe
 6247 02a3 3A       		.uleb128 0x3a
 6248 02a4 0B       		.uleb128 0xb
 6249 02a5 3B       		.uleb128 0x3b
 6250 02a6 05       		.uleb128 0x5
 6251 02a7 00       		.byte	0
 6252 02a8 00       		.byte	0
 6253 02a9 32       		.uleb128 0x32
 6254 02aa 2E       		.uleb128 0x2e
 6255 02ab 00       		.byte	0
 6256 02ac 3F       		.uleb128 0x3f
 6257 02ad 19       		.uleb128 0x19
 6258 02ae 3C       		.uleb128 0x3c
 6259 02af 19       		.uleb128 0x19
 6260 02b0 6E       		.uleb128 0x6e
 6261 02b1 0E       		.uleb128 0xe
 6262 02b2 03       		.uleb128 0x3
 6263 02b3 0E       		.uleb128 0xe
 6264 02b4 00       		.byte	0
 6265 02b5 00       		.byte	0
 6266 02b6 00       		.byte	0
 6267              		.section	.debug_loc,"",%progbits
 6268              	.Ldebug_loc0:
 6269              	.LLST0:
 6270 0000 00000000 		.4byte	.LVL0
 6271 0004 08000000 		.4byte	.LVL1
 6272 0008 0100     		.2byte	0x1
 6273 000a 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 170


 6274 000b 08000000 		.4byte	.LVL1
 6275 000f 0E000000 		.4byte	.LVL3
 6276 0013 0400     		.2byte	0x4
 6277 0015 F3       		.byte	0xf3
 6278 0016 01       		.uleb128 0x1
 6279 0017 50       		.byte	0x50
 6280 0018 9F       		.byte	0x9f
 6281 0019 0E000000 		.4byte	.LVL3
 6282 001d 10000000 		.4byte	.LVL4
 6283 0021 0100     		.2byte	0x1
 6284 0023 50       		.byte	0x50
 6285 0024 10000000 		.4byte	.LVL4
 6286 0028 12000000 		.4byte	.LFE25
 6287 002c 0400     		.2byte	0x4
 6288 002e F3       		.byte	0xf3
 6289 002f 01       		.uleb128 0x1
 6290 0030 50       		.byte	0x50
 6291 0031 9F       		.byte	0x9f
 6292 0032 00000000 		.4byte	0
 6293 0036 00000000 		.4byte	0
 6294              	.LLST1:
 6295 003a 0C000000 		.4byte	.LVL2
 6296 003e 0E000000 		.4byte	.LVL3
 6297 0042 0100     		.2byte	0x1
 6298 0044 50       		.byte	0x50
 6299 0045 10000000 		.4byte	.LVL4
 6300 0049 12000000 		.4byte	.LFE25
 6301 004d 0100     		.2byte	0x1
 6302 004f 50       		.byte	0x50
 6303 0050 00000000 		.4byte	0
 6304 0054 00000000 		.4byte	0
 6305              	.LLST2:
 6306 0058 00000000 		.4byte	.LVL5
 6307 005c 07000000 		.4byte	.LVL6-1
 6308 0060 0100     		.2byte	0x1
 6309 0062 50       		.byte	0x50
 6310 0063 07000000 		.4byte	.LVL6-1
 6311 0067 12000000 		.4byte	.LVL7
 6312 006b 0100     		.2byte	0x1
 6313 006d 54       		.byte	0x54
 6314 006e 12000000 		.4byte	.LVL7
 6315 0072 14000000 		.4byte	.LVL8
 6316 0076 0400     		.2byte	0x4
 6317 0078 F3       		.byte	0xf3
 6318 0079 01       		.uleb128 0x1
 6319 007a 50       		.byte	0x50
 6320 007b 9F       		.byte	0x9f
 6321 007c 14000000 		.4byte	.LVL8
 6322 0080 16000000 		.4byte	.LVL9
 6323 0084 0100     		.2byte	0x1
 6324 0086 54       		.byte	0x54
 6325 0087 16000000 		.4byte	.LVL9
 6326 008b 1E000000 		.4byte	.LFE31
 6327 008f 0400     		.2byte	0x4
 6328 0091 F3       		.byte	0xf3
 6329 0092 01       		.uleb128 0x1
 6330 0093 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 171


 6331 0094 9F       		.byte	0x9f
 6332 0095 00000000 		.4byte	0
 6333 0099 00000000 		.4byte	0
 6334              	.LLST3:
 6335 009d 00000000 		.4byte	.LVL11
 6336 00a1 07000000 		.4byte	.LVL12-1
 6337 00a5 0100     		.2byte	0x1
 6338 00a7 50       		.byte	0x50
 6339 00a8 07000000 		.4byte	.LVL12-1
 6340 00ac 0E000000 		.4byte	.LVL13
 6341 00b0 0100     		.2byte	0x1
 6342 00b2 54       		.byte	0x54
 6343 00b3 0E000000 		.4byte	.LVL13
 6344 00b7 10000000 		.4byte	.LVL14
 6345 00bb 0400     		.2byte	0x4
 6346 00bd F3       		.byte	0xf3
 6347 00be 01       		.uleb128 0x1
 6348 00bf 50       		.byte	0x50
 6349 00c0 9F       		.byte	0x9f
 6350 00c1 10000000 		.4byte	.LVL14
 6351 00c5 12000000 		.4byte	.LVL15
 6352 00c9 0100     		.2byte	0x1
 6353 00cb 54       		.byte	0x54
 6354 00cc 12000000 		.4byte	.LVL15
 6355 00d0 1A000000 		.4byte	.LFE29
 6356 00d4 0400     		.2byte	0x4
 6357 00d6 F3       		.byte	0xf3
 6358 00d7 01       		.uleb128 0x1
 6359 00d8 50       		.byte	0x50
 6360 00d9 9F       		.byte	0x9f
 6361 00da 00000000 		.4byte	0
 6362 00de 00000000 		.4byte	0
 6363              	.LLST4:
 6364 00e2 00000000 		.4byte	.LVL17
 6365 00e6 12000000 		.4byte	.LVL21
 6366 00ea 0100     		.2byte	0x1
 6367 00ec 50       		.byte	0x50
 6368 00ed 12000000 		.4byte	.LVL21
 6369 00f1 1C000000 		.4byte	.LVL23
 6370 00f5 0100     		.2byte	0x1
 6371 00f7 54       		.byte	0x54
 6372 00f8 1C000000 		.4byte	.LVL23
 6373 00fc 20000000 		.4byte	.LVL24
 6374 0100 0100     		.2byte	0x1
 6375 0102 50       		.byte	0x50
 6376 0103 20000000 		.4byte	.LVL24
 6377 0107 3A000000 		.4byte	.LVL26
 6378 010b 0100     		.2byte	0x1
 6379 010d 54       		.byte	0x54
 6380 010e 3A000000 		.4byte	.LVL26
 6381 0112 3C000000 		.4byte	.LVL27
 6382 0116 0100     		.2byte	0x1
 6383 0118 50       		.byte	0x50
 6384 0119 3C000000 		.4byte	.LVL27
 6385 011d 62000000 		.4byte	.LVL30
 6386 0121 0100     		.2byte	0x1
 6387 0123 54       		.byte	0x54
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 172


 6388 0124 62000000 		.4byte	.LVL30
 6389 0128 64000000 		.4byte	.LVL31
 6390 012c 0100     		.2byte	0x1
 6391 012e 50       		.byte	0x50
 6392 012f 64000000 		.4byte	.LVL31
 6393 0133 76000000 		.4byte	.LFE26
 6394 0137 0100     		.2byte	0x1
 6395 0139 54       		.byte	0x54
 6396 013a 00000000 		.4byte	0
 6397 013e 00000000 		.4byte	0
 6398              	.LLST5:
 6399 0142 00000000 		.4byte	.LVL17
 6400 0146 15000000 		.4byte	.LVL22-1
 6401 014a 0100     		.2byte	0x1
 6402 014c 51       		.byte	0x51
 6403 014d 15000000 		.4byte	.LVL22-1
 6404 0151 1C000000 		.4byte	.LVL23
 6405 0155 0400     		.2byte	0x4
 6406 0157 F3       		.byte	0xf3
 6407 0158 01       		.uleb128 0x1
 6408 0159 51       		.byte	0x51
 6409 015a 9F       		.byte	0x9f
 6410 015b 1C000000 		.4byte	.LVL23
 6411 015f 23000000 		.4byte	.LVL25-1
 6412 0163 0100     		.2byte	0x1
 6413 0165 51       		.byte	0x51
 6414 0166 23000000 		.4byte	.LVL25-1
 6415 016a 3A000000 		.4byte	.LVL26
 6416 016e 0400     		.2byte	0x4
 6417 0170 F3       		.byte	0xf3
 6418 0171 01       		.uleb128 0x1
 6419 0172 51       		.byte	0x51
 6420 0173 9F       		.byte	0x9f
 6421 0174 3A000000 		.4byte	.LVL26
 6422 0178 3F000000 		.4byte	.LVL28-1
 6423 017c 0100     		.2byte	0x1
 6424 017e 51       		.byte	0x51
 6425 017f 3F000000 		.4byte	.LVL28-1
 6426 0183 62000000 		.4byte	.LVL30
 6427 0187 0400     		.2byte	0x4
 6428 0189 F3       		.byte	0xf3
 6429 018a 01       		.uleb128 0x1
 6430 018b 51       		.byte	0x51
 6431 018c 9F       		.byte	0x9f
 6432 018d 62000000 		.4byte	.LVL30
 6433 0191 66000000 		.4byte	.LVL32
 6434 0195 0100     		.2byte	0x1
 6435 0197 51       		.byte	0x51
 6436 0198 66000000 		.4byte	.LVL32
 6437 019c 76000000 		.4byte	.LFE26
 6438 01a0 0400     		.2byte	0x4
 6439 01a2 F3       		.byte	0xf3
 6440 01a3 01       		.uleb128 0x1
 6441 01a4 51       		.byte	0x51
 6442 01a5 9F       		.byte	0x9f
 6443 01a6 00000000 		.4byte	0
 6444 01aa 00000000 		.4byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 173


 6445              	.LLST6:
 6446 01ae 00000000 		.4byte	.LVL17
 6447 01b2 0A000000 		.4byte	.LVL20
 6448 01b6 0100     		.2byte	0x1
 6449 01b8 52       		.byte	0x52
 6450 01b9 0A000000 		.4byte	.LVL20
 6451 01bd 76000000 		.4byte	.LFE26
 6452 01c1 0100     		.2byte	0x1
 6453 01c3 56       		.byte	0x56
 6454 01c4 00000000 		.4byte	0
 6455 01c8 00000000 		.4byte	0
 6456              	.LLST7:
 6457 01cc 06000000 		.4byte	.LVL18
 6458 01d0 16000000 		.4byte	.LVL22
 6459 01d4 0200     		.2byte	0x2
 6460 01d6 30       		.byte	0x30
 6461 01d7 9F       		.byte	0x9f
 6462 01d8 16000000 		.4byte	.LVL22
 6463 01dc 1C000000 		.4byte	.LVL23
 6464 01e0 0100     		.2byte	0x1
 6465 01e2 50       		.byte	0x50
 6466 01e3 1C000000 		.4byte	.LVL23
 6467 01e7 70000000 		.4byte	.LVL33
 6468 01eb 0200     		.2byte	0x2
 6469 01ed 30       		.byte	0x30
 6470 01ee 9F       		.byte	0x9f
 6471 01ef 70000000 		.4byte	.LVL33
 6472 01f3 76000000 		.4byte	.LFE26
 6473 01f7 0100     		.2byte	0x1
 6474 01f9 50       		.byte	0x50
 6475 01fa 00000000 		.4byte	0
 6476 01fe 00000000 		.4byte	0
 6477              	.LLST8:
 6478 0202 08000000 		.4byte	.LVL19
 6479 0206 72000000 		.4byte	.LVL34
 6480 020a 0100     		.2byte	0x1
 6481 020c 55       		.byte	0x55
 6482 020d 72000000 		.4byte	.LVL34
 6483 0211 76000000 		.4byte	.LFE26
 6484 0215 0300     		.2byte	0x3
 6485 0217 75       		.byte	0x75
 6486 0218 7F       		.sleb128 -1
 6487 0219 9F       		.byte	0x9f
 6488 021a 00000000 		.4byte	0
 6489 021e 00000000 		.4byte	0
 6490              	.LLST9:
 6491 0222 00000000 		.4byte	.LVL35
 6492 0226 1C000000 		.4byte	.LVL37
 6493 022a 0100     		.2byte	0x1
 6494 022c 50       		.byte	0x50
 6495 022d 1C000000 		.4byte	.LVL37
 6496 0231 22000000 		.4byte	.LVL39
 6497 0235 0400     		.2byte	0x4
 6498 0237 F3       		.byte	0xf3
 6499 0238 01       		.uleb128 0x1
 6500 0239 50       		.byte	0x50
 6501 023a 9F       		.byte	0x9f
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 174


 6502 023b 22000000 		.4byte	.LVL39
 6503 023f 24000000 		.4byte	.LFE27
 6504 0243 0100     		.2byte	0x1
 6505 0245 50       		.byte	0x50
 6506 0246 00000000 		.4byte	0
 6507 024a 00000000 		.4byte	0
 6508              	.LLST10:
 6509 024e 00000000 		.4byte	.LVL35
 6510 0252 1A000000 		.4byte	.LVL36
 6511 0256 0100     		.2byte	0x1
 6512 0258 51       		.byte	0x51
 6513 0259 1A000000 		.4byte	.LVL36
 6514 025d 22000000 		.4byte	.LVL39
 6515 0261 0100     		.2byte	0x1
 6516 0263 54       		.byte	0x54
 6517 0264 22000000 		.4byte	.LVL39
 6518 0268 24000000 		.4byte	.LFE27
 6519 026c 0100     		.2byte	0x1
 6520 026e 51       		.byte	0x51
 6521 026f 00000000 		.4byte	0
 6522 0273 00000000 		.4byte	0
 6523              	.LLST11:
 6524 0277 00000000 		.4byte	.LVL40
 6525 027b 07000000 		.4byte	.LVL41-1
 6526 027f 0100     		.2byte	0x1
 6527 0281 50       		.byte	0x50
 6528 0282 07000000 		.4byte	.LVL41-1
 6529 0286 66000000 		.4byte	.LFE28
 6530 028a 0100     		.2byte	0x1
 6531 028c 55       		.byte	0x55
 6532 028d 00000000 		.4byte	0
 6533 0291 00000000 		.4byte	0
 6534              	.LLST12:
 6535 0295 0E000000 		.4byte	.LVL42
 6536 0299 24000000 		.4byte	.LVL45
 6537 029d 0100     		.2byte	0x1
 6538 029f 54       		.byte	0x54
 6539 02a0 26000000 		.4byte	.LVL46
 6540 02a4 3C000000 		.4byte	.LVL49
 6541 02a8 0100     		.2byte	0x1
 6542 02aa 54       		.byte	0x54
 6543 02ab 00000000 		.4byte	0
 6544 02af 00000000 		.4byte	0
 6545              	.LLST13:
 6546 02b3 3E000000 		.4byte	.LVL50
 6547 02b7 54000000 		.4byte	.LVL53
 6548 02bb 0100     		.2byte	0x1
 6549 02bd 54       		.byte	0x54
 6550 02be 56000000 		.4byte	.LVL54
 6551 02c2 66000000 		.4byte	.LFE28
 6552 02c6 0100     		.2byte	0x1
 6553 02c8 54       		.byte	0x54
 6554 02c9 00000000 		.4byte	0
 6555 02cd 00000000 		.4byte	0
 6556              	.LLST14:
 6557 02d1 00000000 		.4byte	.LVL56
 6558 02d5 09000000 		.4byte	.LVL58-1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 175


 6559 02d9 0100     		.2byte	0x1
 6560 02db 50       		.byte	0x50
 6561 02dc 09000000 		.4byte	.LVL58-1
 6562 02e0 68000000 		.4byte	.LVL63
 6563 02e4 0100     		.2byte	0x1
 6564 02e6 54       		.byte	0x54
 6565 02e7 68000000 		.4byte	.LVL63
 6566 02eb 6C000000 		.4byte	.LFE5
 6567 02ef 0400     		.2byte	0x4
 6568 02f1 F3       		.byte	0xf3
 6569 02f2 01       		.uleb128 0x1
 6570 02f3 50       		.byte	0x50
 6571 02f4 9F       		.byte	0x9f
 6572 02f5 00000000 		.4byte	0
 6573 02f9 00000000 		.4byte	0
 6574              	.LLST15:
 6575 02fd 00000000 		.4byte	.LVL56
 6576 0301 09000000 		.4byte	.LVL58-1
 6577 0305 0100     		.2byte	0x1
 6578 0307 51       		.byte	0x51
 6579 0308 09000000 		.4byte	.LVL58-1
 6580 030c 68000000 		.4byte	.LVL63
 6581 0310 0100     		.2byte	0x1
 6582 0312 55       		.byte	0x55
 6583 0313 68000000 		.4byte	.LVL63
 6584 0317 6C000000 		.4byte	.LFE5
 6585 031b 0400     		.2byte	0x4
 6586 031d F3       		.byte	0xf3
 6587 031e 01       		.uleb128 0x1
 6588 031f 51       		.byte	0x51
 6589 0320 9F       		.byte	0x9f
 6590 0321 00000000 		.4byte	0
 6591 0325 00000000 		.4byte	0
 6592              	.LLST16:
 6593 0329 06000000 		.4byte	.LVL57
 6594 032d 09000000 		.4byte	.LVL58-1
 6595 0331 0100     		.2byte	0x1
 6596 0333 50       		.byte	0x50
 6597 0334 09000000 		.4byte	.LVL58-1
 6598 0338 68000000 		.4byte	.LVL63
 6599 033c 0100     		.2byte	0x1
 6600 033e 54       		.byte	0x54
 6601 033f 68000000 		.4byte	.LVL63
 6602 0343 6C000000 		.4byte	.LFE5
 6603 0347 0400     		.2byte	0x4
 6604 0349 F3       		.byte	0xf3
 6605 034a 01       		.uleb128 0x1
 6606 034b 50       		.byte	0x50
 6607 034c 9F       		.byte	0x9f
 6608 034d 00000000 		.4byte	0
 6609 0351 00000000 		.4byte	0
 6610              	.LLST17:
 6611 0355 00000000 		.4byte	.LVL64
 6612 0359 16000000 		.4byte	.LVL67
 6613 035d 0100     		.2byte	0x1
 6614 035f 50       		.byte	0x50
 6615 0360 16000000 		.4byte	.LVL67
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 176


 6616 0364 19000000 		.4byte	.LVL68-1
 6617 0368 0200     		.2byte	0x2
 6618 036a 70       		.byte	0x70
 6619 036b 3C       		.sleb128 60
 6620 036c 19000000 		.4byte	.LVL68-1
 6621 0370 1C000000 		.4byte	.LFE7
 6622 0374 0400     		.2byte	0x4
 6623 0376 F3       		.byte	0xf3
 6624 0377 01       		.uleb128 0x1
 6625 0378 50       		.byte	0x50
 6626 0379 9F       		.byte	0x9f
 6627 037a 00000000 		.4byte	0
 6628 037e 00000000 		.4byte	0
 6629              	.LLST18:
 6630 0382 00000000 		.4byte	.LVL64
 6631 0386 14000000 		.4byte	.LVL66
 6632 038a 0100     		.2byte	0x1
 6633 038c 51       		.byte	0x51
 6634 038d 14000000 		.4byte	.LVL66
 6635 0391 1C000000 		.4byte	.LFE7
 6636 0395 0100     		.2byte	0x1
 6637 0397 54       		.byte	0x54
 6638 0398 00000000 		.4byte	0
 6639 039c 00000000 		.4byte	0
 6640              	.LLST19:
 6641 03a0 00000000 		.4byte	.LVL64
 6642 03a4 19000000 		.4byte	.LVL68-1
 6643 03a8 0100     		.2byte	0x1
 6644 03aa 52       		.byte	0x52
 6645 03ab 19000000 		.4byte	.LVL68-1
 6646 03af 1C000000 		.4byte	.LFE7
 6647 03b3 0400     		.2byte	0x4
 6648 03b5 F3       		.byte	0xf3
 6649 03b6 01       		.uleb128 0x1
 6650 03b7 52       		.byte	0x52
 6651 03b8 9F       		.byte	0x9f
 6652 03b9 00000000 		.4byte	0
 6653 03bd 00000000 		.4byte	0
 6654              	.LLST20:
 6655 03c1 00000000 		.4byte	.LVL64
 6656 03c5 04000000 		.4byte	.LVL65
 6657 03c9 0100     		.2byte	0x1
 6658 03cb 53       		.byte	0x53
 6659 03cc 04000000 		.4byte	.LVL65
 6660 03d0 1C000000 		.4byte	.LFE7
 6661 03d4 0400     		.2byte	0x4
 6662 03d6 F3       		.byte	0xf3
 6663 03d7 01       		.uleb128 0x1
 6664 03d8 53       		.byte	0x53
 6665 03d9 9F       		.byte	0x9f
 6666 03da 00000000 		.4byte	0
 6667 03de 00000000 		.4byte	0
 6668              	.LLST21:
 6669 03e2 00000000 		.4byte	.LVL69
 6670 03e6 10000000 		.4byte	.LVL70
 6671 03ea 0100     		.2byte	0x1
 6672 03ec 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 177


 6673 03ed 10000000 		.4byte	.LVL70
 6674 03f1 12000000 		.4byte	.LVL71
 6675 03f5 0100     		.2byte	0x1
 6676 03f7 55       		.byte	0x55
 6677 03f8 12000000 		.4byte	.LVL71
 6678 03fc 14000000 		.4byte	.LVL72
 6679 0400 0100     		.2byte	0x1
 6680 0402 50       		.byte	0x50
 6681 0403 14000000 		.4byte	.LVL72
 6682 0407 34000000 		.4byte	.LFE6
 6683 040b 0100     		.2byte	0x1
 6684 040d 55       		.byte	0x55
 6685 040e 00000000 		.4byte	0
 6686 0412 00000000 		.4byte	0
 6687              	.LLST22:
 6688 0416 00000000 		.4byte	.LVL69
 6689 041a 19000000 		.4byte	.LVL74-1
 6690 041e 0100     		.2byte	0x1
 6691 0420 51       		.byte	0x51
 6692 0421 19000000 		.4byte	.LVL74-1
 6693 0425 34000000 		.4byte	.LFE6
 6694 0429 0100     		.2byte	0x1
 6695 042b 56       		.byte	0x56
 6696 042c 00000000 		.4byte	0
 6697 0430 00000000 		.4byte	0
 6698              	.LLST23:
 6699 0434 00000000 		.4byte	.LVL69
 6700 0438 19000000 		.4byte	.LVL74-1
 6701 043c 0100     		.2byte	0x1
 6702 043e 52       		.byte	0x52
 6703 043f 19000000 		.4byte	.LVL74-1
 6704 0443 34000000 		.4byte	.LFE6
 6705 0447 0400     		.2byte	0x4
 6706 0449 F3       		.byte	0xf3
 6707 044a 01       		.uleb128 0x1
 6708 044b 52       		.byte	0x52
 6709 044c 9F       		.byte	0x9f
 6710 044d 00000000 		.4byte	0
 6711 0451 00000000 		.4byte	0
 6712              	.LLST24:
 6713 0455 1A000000 		.4byte	.LVL74
 6714 0459 2A000000 		.4byte	.LVL77
 6715 045d 0100     		.2byte	0x1
 6716 045f 50       		.byte	0x50
 6717 0460 2A000000 		.4byte	.LVL77
 6718 0464 34000000 		.4byte	.LFE6
 6719 0468 0100     		.2byte	0x1
 6720 046a 54       		.byte	0x54
 6721 046b 00000000 		.4byte	0
 6722 046f 00000000 		.4byte	0
 6723              	.LLST25:
 6724 0473 10000000 		.4byte	.LVL70
 6725 0477 12000000 		.4byte	.LVL71
 6726 047b 0100     		.2byte	0x1
 6727 047d 50       		.byte	0x50
 6728 047e 14000000 		.4byte	.LVL72
 6729 0482 16000000 		.4byte	.LVL73
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 178


 6730 0486 0100     		.2byte	0x1
 6731 0488 50       		.byte	0x50
 6732 0489 16000000 		.4byte	.LVL73
 6733 048d 19000000 		.4byte	.LVL74-1
 6734 0491 0400     		.2byte	0x4
 6735 0493 70       		.byte	0x70
 6736 0494 B87F     		.sleb128 -72
 6737 0496 9F       		.byte	0x9f
 6738 0497 00000000 		.4byte	0
 6739 049b 00000000 		.4byte	0
 6740              	.LLST26:
 6741 049f 1E000000 		.4byte	.LVL75
 6742 04a3 26000000 		.4byte	.LVL76
 6743 04a7 0400     		.2byte	0x4
 6744 04a9 70       		.byte	0x70
 6745 04aa C800     		.sleb128 72
 6746 04ac 9F       		.byte	0x9f
 6747 04ad 26000000 		.4byte	.LVL76
 6748 04b1 2D000000 		.4byte	.LVL78-1
 6749 04b5 0100     		.2byte	0x1
 6750 04b7 52       		.byte	0x52
 6751 04b8 2D000000 		.4byte	.LVL78-1
 6752 04bc 2E000000 		.4byte	.LVL78
 6753 04c0 0400     		.2byte	0x4
 6754 04c2 74       		.byte	0x74
 6755 04c3 C800     		.sleb128 72
 6756 04c5 9F       		.byte	0x9f
 6757 04c6 00000000 		.4byte	0
 6758 04ca 00000000 		.4byte	0
 6759              	.LLST27:
 6760 04ce 00000000 		.4byte	.LVL79
 6761 04d2 0B000000 		.4byte	.LVL81-1
 6762 04d6 0100     		.2byte	0x1
 6763 04d8 50       		.byte	0x50
 6764 04d9 0B000000 		.4byte	.LVL81-1
 6765 04dd 16000000 		.4byte	.LFE12
 6766 04e1 0400     		.2byte	0x4
 6767 04e3 F3       		.byte	0xf3
 6768 04e4 01       		.uleb128 0x1
 6769 04e5 50       		.byte	0x50
 6770 04e6 9F       		.byte	0x9f
 6771 04e7 00000000 		.4byte	0
 6772 04eb 00000000 		.4byte	0
 6773              	.LLST28:
 6774 04ef 00000000 		.4byte	.LVL79
 6775 04f3 08000000 		.4byte	.LVL80
 6776 04f7 0100     		.2byte	0x1
 6777 04f9 51       		.byte	0x51
 6778 04fa 08000000 		.4byte	.LVL80
 6779 04fe 16000000 		.4byte	.LFE12
 6780 0502 0100     		.2byte	0x1
 6781 0504 54       		.byte	0x54
 6782 0505 00000000 		.4byte	0
 6783 0509 00000000 		.4byte	0
 6784              	.LLST29:
 6785 050d 0C000000 		.4byte	.LVL81
 6786 0511 14000000 		.4byte	.LVL82
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 179


 6787 0515 0100     		.2byte	0x1
 6788 0517 50       		.byte	0x50
 6789 0518 14000000 		.4byte	.LVL82
 6790 051c 16000000 		.4byte	.LFE12
 6791 0520 0100     		.2byte	0x1
 6792 0522 53       		.byte	0x53
 6793 0523 00000000 		.4byte	0
 6794 0527 00000000 		.4byte	0
 6795              	.LLST30:
 6796 052b 00000000 		.4byte	.LVL83
 6797 052f 0E000000 		.4byte	.LVL85
 6798 0533 0100     		.2byte	0x1
 6799 0535 50       		.byte	0x50
 6800 0536 0E000000 		.4byte	.LVL85
 6801 053a 04010000 		.4byte	.LVL110
 6802 053e 0100     		.2byte	0x1
 6803 0540 54       		.byte	0x54
 6804 0541 04010000 		.4byte	.LVL110
 6805 0545 08010000 		.4byte	.LFE13
 6806 0549 0400     		.2byte	0x4
 6807 054b F3       		.byte	0xf3
 6808 054c 01       		.uleb128 0x1
 6809 054d 50       		.byte	0x50
 6810 054e 9F       		.byte	0x9f
 6811 054f 00000000 		.4byte	0
 6812 0553 00000000 		.4byte	0
 6813              	.LLST31:
 6814 0557 00000000 		.4byte	.LVL83
 6815 055b 0E000000 		.4byte	.LVL85
 6816 055f 0100     		.2byte	0x1
 6817 0561 51       		.byte	0x51
 6818 0562 0E000000 		.4byte	.LVL85
 6819 0566 04010000 		.4byte	.LVL110
 6820 056a 0100     		.2byte	0x1
 6821 056c 57       		.byte	0x57
 6822 056d 04010000 		.4byte	.LVL110
 6823 0571 08010000 		.4byte	.LFE13
 6824 0575 0400     		.2byte	0x4
 6825 0577 F3       		.byte	0xf3
 6826 0578 01       		.uleb128 0x1
 6827 0579 51       		.byte	0x51
 6828 057a 9F       		.byte	0x9f
 6829 057b 00000000 		.4byte	0
 6830 057f 00000000 		.4byte	0
 6831              	.LLST32:
 6832 0583 00000000 		.4byte	.LVL83
 6833 0587 0E000000 		.4byte	.LVL85
 6834 058b 0100     		.2byte	0x1
 6835 058d 52       		.byte	0x52
 6836 058e 0E000000 		.4byte	.LVL85
 6837 0592 AE000000 		.4byte	.LVL100
 6838 0596 0200     		.2byte	0x2
 6839 0598 91       		.byte	0x91
 6840 0599 5C       		.sleb128 -36
 6841 059a AE000000 		.4byte	.LVL100
 6842 059e B3000000 		.4byte	.LVL101-1
 6843 05a2 0200     		.2byte	0x2
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 180


 6844 05a4 71       		.byte	0x71
 6845 05a5 00       		.sleb128 0
 6846 05a6 B3000000 		.4byte	.LVL101-1
 6847 05aa 04010000 		.4byte	.LVL110
 6848 05ae 0200     		.2byte	0x2
 6849 05b0 91       		.byte	0x91
 6850 05b1 5C       		.sleb128 -36
 6851 05b2 04010000 		.4byte	.LVL110
 6852 05b6 08010000 		.4byte	.LFE13
 6853 05ba 0200     		.2byte	0x2
 6854 05bc 7D       		.byte	0x7d
 6855 05bd 5C       		.sleb128 -36
 6856 05be 00000000 		.4byte	0
 6857 05c2 00000000 		.4byte	0
 6858              	.LLST33:
 6859 05c6 00000000 		.4byte	.LVL83
 6860 05ca 0E000000 		.4byte	.LVL85
 6861 05ce 0100     		.2byte	0x1
 6862 05d0 53       		.byte	0x53
 6863 05d1 0E000000 		.4byte	.LVL85
 6864 05d5 04010000 		.4byte	.LVL110
 6865 05d9 0100     		.2byte	0x1
 6866 05db 56       		.byte	0x56
 6867 05dc 04010000 		.4byte	.LVL110
 6868 05e0 08010000 		.4byte	.LFE13
 6869 05e4 0400     		.2byte	0x4
 6870 05e6 F3       		.byte	0xf3
 6871 05e7 01       		.uleb128 0x1
 6872 05e8 53       		.byte	0x53
 6873 05e9 9F       		.byte	0x9f
 6874 05ea 00000000 		.4byte	0
 6875 05ee 00000000 		.4byte	0
 6876              	.LLST34:
 6877 05f2 0C000000 		.4byte	.LVL84
 6878 05f6 0E000000 		.4byte	.LVL85
 6879 05fa 0200     		.2byte	0x2
 6880 05fc 30       		.byte	0x30
 6881 05fd 9F       		.byte	0x9f
 6882 05fe 0E000000 		.4byte	.LVL85
 6883 0602 76000000 		.4byte	.LVL94
 6884 0606 0100     		.2byte	0x1
 6885 0608 55       		.byte	0x55
 6886 0609 76000000 		.4byte	.LVL94
 6887 060d 78000000 		.4byte	.LVL95
 6888 0611 0200     		.2byte	0x2
 6889 0613 31       		.byte	0x31
 6890 0614 9F       		.byte	0x9f
 6891 0615 78000000 		.4byte	.LVL95
 6892 0619 04010000 		.4byte	.LVL110
 6893 061d 0100     		.2byte	0x1
 6894 061f 55       		.byte	0x55
 6895 0620 00000000 		.4byte	0
 6896 0624 00000000 		.4byte	0
 6897              	.LLST35:
 6898 0628 28000000 		.4byte	.LVL87
 6899 062c 30000000 		.4byte	.LVL88
 6900 0630 0100     		.2byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 181


 6901 0632 50       		.byte	0x50
 6902 0633 48000000 		.4byte	.LVL90
 6903 0637 5A000000 		.4byte	.LVL91
 6904 063b 0100     		.2byte	0x1
 6905 063d 50       		.byte	0x50
 6906 063e 00000000 		.4byte	0
 6907 0642 00000000 		.4byte	0
 6908              	.LLST36:
 6909 0646 0C000000 		.4byte	.LVL84
 6910 064a 0E000000 		.4byte	.LVL85
 6911 064e 0100     		.2byte	0x1
 6912 0650 50       		.byte	0x50
 6913 0651 0E000000 		.4byte	.LVL85
 6914 0655 04010000 		.4byte	.LVL110
 6915 0659 0100     		.2byte	0x1
 6916 065b 54       		.byte	0x54
 6917 065c 04010000 		.4byte	.LVL110
 6918 0660 08010000 		.4byte	.LFE13
 6919 0664 0400     		.2byte	0x4
 6920 0666 F3       		.byte	0xf3
 6921 0667 01       		.uleb128 0x1
 6922 0668 50       		.byte	0x50
 6923 0669 9F       		.byte	0x9f
 6924 066a 00000000 		.4byte	0
 6925 066e 00000000 		.4byte	0
 6926              	.LLST37:
 6927 0672 00000000 		.4byte	.LVL111
 6928 0676 13000000 		.4byte	.LVL112-1
 6929 067a 0100     		.2byte	0x1
 6930 067c 50       		.byte	0x50
 6931 067d 13000000 		.4byte	.LVL112-1
 6932 0681 16000000 		.4byte	.LVL113
 6933 0685 0400     		.2byte	0x4
 6934 0687 F3       		.byte	0xf3
 6935 0688 01       		.uleb128 0x1
 6936 0689 50       		.byte	0x50
 6937 068a 9F       		.byte	0x9f
 6938 068b 16000000 		.4byte	.LVL113
 6939 068f 18000000 		.4byte	.LFE8
 6940 0693 0100     		.2byte	0x1
 6941 0695 50       		.byte	0x50
 6942 0696 00000000 		.4byte	0
 6943 069a 00000000 		.4byte	0
 6944              	.LLST38:
 6945 069e 00000000 		.4byte	.LVL114
 6946 06a2 08000000 		.4byte	.LVL116
 6947 06a6 0100     		.2byte	0x1
 6948 06a8 50       		.byte	0x50
 6949 06a9 08000000 		.4byte	.LVL116
 6950 06ad 16000000 		.4byte	.LFE9
 6951 06b1 0400     		.2byte	0x4
 6952 06b3 F3       		.byte	0xf3
 6953 06b4 01       		.uleb128 0x1
 6954 06b5 50       		.byte	0x50
 6955 06b6 9F       		.byte	0x9f
 6956 06b7 00000000 		.4byte	0
 6957 06bb 00000000 		.4byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 182


 6958              	.LLST39:
 6959 06bf 0E000000 		.4byte	.LVL118
 6960 06c3 11000000 		.4byte	.LVL119-1
 6961 06c7 0100     		.2byte	0x1
 6962 06c9 50       		.byte	0x50
 6963 06ca 11000000 		.4byte	.LVL119-1
 6964 06ce 16000000 		.4byte	.LFE9
 6965 06d2 0100     		.2byte	0x1
 6966 06d4 54       		.byte	0x54
 6967 06d5 00000000 		.4byte	0
 6968 06d9 00000000 		.4byte	0
 6969              	.LLST40:
 6970 06dd 00000000 		.4byte	.LVL120
 6971 06e1 09000000 		.4byte	.LVL122-1
 6972 06e5 0100     		.2byte	0x1
 6973 06e7 50       		.byte	0x50
 6974 06e8 09000000 		.4byte	.LVL122-1
 6975 06ec 2C000000 		.4byte	.LFE10
 6976 06f0 0100     		.2byte	0x1
 6977 06f2 54       		.byte	0x54
 6978 06f3 00000000 		.4byte	0
 6979 06f7 00000000 		.4byte	0
 6980              	.LLST41:
 6981 06fb 04000000 		.4byte	.LVL121
 6982 06ff 09000000 		.4byte	.LVL122-1
 6983 0703 0100     		.2byte	0x1
 6984 0705 50       		.byte	0x50
 6985 0706 09000000 		.4byte	.LVL122-1
 6986 070a 2C000000 		.4byte	.LFE10
 6987 070e 0100     		.2byte	0x1
 6988 0710 54       		.byte	0x54
 6989 0711 00000000 		.4byte	0
 6990 0715 00000000 		.4byte	0
 6991              	.LLST42:
 6992 0719 00000000 		.4byte	.LVL127
 6993 071d 31000000 		.4byte	.LVL131-1
 6994 0721 0100     		.2byte	0x1
 6995 0723 50       		.byte	0x50
 6996 0724 31000000 		.4byte	.LVL131-1
 6997 0728 5A000000 		.4byte	.LVL135
 6998 072c 0100     		.2byte	0x1
 6999 072e 55       		.byte	0x55
 7000 072f 5A000000 		.4byte	.LVL135
 7001 0733 5C000000 		.4byte	.LVL136
 7002 0737 0100     		.2byte	0x1
 7003 0739 50       		.byte	0x50
 7004 073a 5C000000 		.4byte	.LVL136
 7005 073e 5E000000 		.4byte	.LVL137
 7006 0742 0400     		.2byte	0x4
 7007 0744 F3       		.byte	0xf3
 7008 0745 01       		.uleb128 0x1
 7009 0746 50       		.byte	0x50
 7010 0747 9F       		.byte	0x9f
 7011 0748 5E000000 		.4byte	.LVL137
 7012 074c 68000000 		.4byte	.LVL138
 7013 0750 0100     		.2byte	0x1
 7014 0752 55       		.byte	0x55
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 183


 7015 0753 68000000 		.4byte	.LVL138
 7016 0757 6E000000 		.4byte	.LFE14
 7017 075b 0400     		.2byte	0x4
 7018 075d F3       		.byte	0xf3
 7019 075e 01       		.uleb128 0x1
 7020 075f 50       		.byte	0x50
 7021 0760 9F       		.byte	0x9f
 7022 0761 00000000 		.4byte	0
 7023 0765 00000000 		.4byte	0
 7024              	.LLST43:
 7025 0769 00000000 		.4byte	.LVL127
 7026 076d 31000000 		.4byte	.LVL131-1
 7027 0771 0100     		.2byte	0x1
 7028 0773 51       		.byte	0x51
 7029 0774 31000000 		.4byte	.LVL131-1
 7030 0778 5A000000 		.4byte	.LVL135
 7031 077c 0400     		.2byte	0x4
 7032 077e F3       		.byte	0xf3
 7033 077f 01       		.uleb128 0x1
 7034 0780 51       		.byte	0x51
 7035 0781 9F       		.byte	0x9f
 7036 0782 5A000000 		.4byte	.LVL135
 7037 0786 5E000000 		.4byte	.LVL137
 7038 078a 0100     		.2byte	0x1
 7039 078c 51       		.byte	0x51
 7040 078d 5E000000 		.4byte	.LVL137
 7041 0791 6E000000 		.4byte	.LFE14
 7042 0795 0400     		.2byte	0x4
 7043 0797 F3       		.byte	0xf3
 7044 0798 01       		.uleb128 0x1
 7045 0799 51       		.byte	0x51
 7046 079a 9F       		.byte	0x9f
 7047 079b 00000000 		.4byte	0
 7048 079f 00000000 		.4byte	0
 7049              	.LLST44:
 7050 07a3 00000000 		.4byte	.LVL127
 7051 07a7 2E000000 		.4byte	.LVL130
 7052 07ab 0100     		.2byte	0x1
 7053 07ad 52       		.byte	0x52
 7054 07ae 2E000000 		.4byte	.LVL130
 7055 07b2 5A000000 		.4byte	.LVL135
 7056 07b6 0100     		.2byte	0x1
 7057 07b8 57       		.byte	0x57
 7058 07b9 5A000000 		.4byte	.LVL135
 7059 07bd 5E000000 		.4byte	.LVL137
 7060 07c1 0100     		.2byte	0x1
 7061 07c3 52       		.byte	0x52
 7062 07c4 5E000000 		.4byte	.LVL137
 7063 07c8 68000000 		.4byte	.LVL138
 7064 07cc 0100     		.2byte	0x1
 7065 07ce 57       		.byte	0x57
 7066 07cf 68000000 		.4byte	.LVL138
 7067 07d3 6E000000 		.4byte	.LFE14
 7068 07d7 0400     		.2byte	0x4
 7069 07d9 F3       		.byte	0xf3
 7070 07da 01       		.uleb128 0x1
 7071 07db 52       		.byte	0x52
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 184


 7072 07dc 9F       		.byte	0x9f
 7073 07dd 00000000 		.4byte	0
 7074 07e1 00000000 		.4byte	0
 7075              	.LLST45:
 7076 07e5 00000000 		.4byte	.LVL127
 7077 07e9 31000000 		.4byte	.LVL131-1
 7078 07ed 0100     		.2byte	0x1
 7079 07ef 53       		.byte	0x53
 7080 07f0 31000000 		.4byte	.LVL131-1
 7081 07f4 5A000000 		.4byte	.LVL135
 7082 07f8 0400     		.2byte	0x4
 7083 07fa F3       		.byte	0xf3
 7084 07fb 01       		.uleb128 0x1
 7085 07fc 53       		.byte	0x53
 7086 07fd 9F       		.byte	0x9f
 7087 07fe 5A000000 		.4byte	.LVL135
 7088 0802 5E000000 		.4byte	.LVL137
 7089 0806 0100     		.2byte	0x1
 7090 0808 53       		.byte	0x53
 7091 0809 5E000000 		.4byte	.LVL137
 7092 080d 6E000000 		.4byte	.LFE14
 7093 0811 0400     		.2byte	0x4
 7094 0813 F3       		.byte	0xf3
 7095 0814 01       		.uleb128 0x1
 7096 0815 53       		.byte	0x53
 7097 0816 9F       		.byte	0x9f
 7098 0817 00000000 		.4byte	0
 7099 081b 00000000 		.4byte	0
 7100              	.LLST46:
 7101 081f 02000000 		.4byte	.LVL128
 7102 0823 31000000 		.4byte	.LVL131-1
 7103 0827 0100     		.2byte	0x1
 7104 0829 50       		.byte	0x50
 7105 082a 31000000 		.4byte	.LVL131-1
 7106 082e 5A000000 		.4byte	.LVL135
 7107 0832 0100     		.2byte	0x1
 7108 0834 55       		.byte	0x55
 7109 0835 5A000000 		.4byte	.LVL135
 7110 0839 5C000000 		.4byte	.LVL136
 7111 083d 0100     		.2byte	0x1
 7112 083f 50       		.byte	0x50
 7113 0840 5C000000 		.4byte	.LVL136
 7114 0844 5E000000 		.4byte	.LVL137
 7115 0848 0400     		.2byte	0x4
 7116 084a F3       		.byte	0xf3
 7117 084b 01       		.uleb128 0x1
 7118 084c 50       		.byte	0x50
 7119 084d 9F       		.byte	0x9f
 7120 084e 5E000000 		.4byte	.LVL137
 7121 0852 68000000 		.4byte	.LVL138
 7122 0856 0100     		.2byte	0x1
 7123 0858 55       		.byte	0x55
 7124 0859 68000000 		.4byte	.LVL138
 7125 085d 6E000000 		.4byte	.LFE14
 7126 0861 0400     		.2byte	0x4
 7127 0863 F3       		.byte	0xf3
 7128 0864 01       		.uleb128 0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 185


 7129 0865 50       		.byte	0x50
 7130 0866 9F       		.byte	0x9f
 7131 0867 00000000 		.4byte	0
 7132 086b 00000000 		.4byte	0
 7133              	.LLST47:
 7134 086f 2C000000 		.4byte	.LVL129
 7135 0873 50000000 		.4byte	.LVL133
 7136 0877 0100     		.2byte	0x1
 7137 0879 54       		.byte	0x54
 7138 087a 50000000 		.4byte	.LVL133
 7139 087e 52000000 		.4byte	.LVL134
 7140 0882 0300     		.2byte	0x3
 7141 0884 74       		.byte	0x74
 7142 0885 7F       		.sleb128 -1
 7143 0886 9F       		.byte	0x9f
 7144 0887 5E000000 		.4byte	.LVL137
 7145 088b 68000000 		.4byte	.LVL138
 7146 088f 0100     		.2byte	0x1
 7147 0891 54       		.byte	0x54
 7148 0892 00000000 		.4byte	0
 7149 0896 00000000 		.4byte	0
 7150              	.LLST48:
 7151 089a 68000000 		.4byte	.LVL138
 7152 089e 6C000000 		.4byte	.LVL139
 7153 08a2 0100     		.2byte	0x1
 7154 08a4 56       		.byte	0x56
 7155 08a5 00000000 		.4byte	0
 7156 08a9 00000000 		.4byte	0
 7157              	.LLST49:
 7158 08ad 00000000 		.4byte	.LVL140
 7159 08b1 36000000 		.4byte	.LVL146
 7160 08b5 0100     		.2byte	0x1
 7161 08b7 50       		.byte	0x50
 7162 08b8 36000000 		.4byte	.LVL146
 7163 08bc 39000000 		.4byte	.LVL147-1
 7164 08c0 0300     		.2byte	0x3
 7165 08c2 70       		.byte	0x70
 7166 08c3 5C       		.sleb128 -36
 7167 08c4 9F       		.byte	0x9f
 7168 08c5 39000000 		.4byte	.LVL147-1
 7169 08c9 44000000 		.4byte	.LVL148
 7170 08cd 0400     		.2byte	0x4
 7171 08cf F3       		.byte	0xf3
 7172 08d0 01       		.uleb128 0x1
 7173 08d1 50       		.byte	0x50
 7174 08d2 9F       		.byte	0x9f
 7175 08d3 44000000 		.4byte	.LVL148
 7176 08d7 4E000000 		.4byte	.LVL151
 7177 08db 0100     		.2byte	0x1
 7178 08dd 50       		.byte	0x50
 7179 08de 4E000000 		.4byte	.LVL151
 7180 08e2 50000000 		.4byte	.LVL152
 7181 08e6 0400     		.2byte	0x4
 7182 08e8 F3       		.byte	0xf3
 7183 08e9 01       		.uleb128 0x1
 7184 08ea 50       		.byte	0x50
 7185 08eb 9F       		.byte	0x9f
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 186


 7186 08ec 50000000 		.4byte	.LVL152
 7187 08f0 52000000 		.4byte	.LVL153
 7188 08f4 0100     		.2byte	0x1
 7189 08f6 50       		.byte	0x50
 7190 08f7 52000000 		.4byte	.LVL153
 7191 08fb 54000000 		.4byte	.LVL154
 7192 08ff 0400     		.2byte	0x4
 7193 0901 F3       		.byte	0xf3
 7194 0902 01       		.uleb128 0x1
 7195 0903 50       		.byte	0x50
 7196 0904 9F       		.byte	0x9f
 7197 0905 54000000 		.4byte	.LVL154
 7198 0909 56000000 		.4byte	.LVL155
 7199 090d 0100     		.2byte	0x1
 7200 090f 50       		.byte	0x50
 7201 0910 56000000 		.4byte	.LVL155
 7202 0914 64000000 		.4byte	.LFE15
 7203 0918 0400     		.2byte	0x4
 7204 091a F3       		.byte	0xf3
 7205 091b 01       		.uleb128 0x1
 7206 091c 50       		.byte	0x50
 7207 091d 9F       		.byte	0x9f
 7208 091e 00000000 		.4byte	0
 7209 0922 00000000 		.4byte	0
 7210              	.LLST50:
 7211 0926 00000000 		.4byte	.LVL140
 7212 092a 39000000 		.4byte	.LVL147-1
 7213 092e 0100     		.2byte	0x1
 7214 0930 51       		.byte	0x51
 7215 0931 39000000 		.4byte	.LVL147-1
 7216 0935 44000000 		.4byte	.LVL148
 7217 0939 0100     		.2byte	0x1
 7218 093b 55       		.byte	0x55
 7219 093c 44000000 		.4byte	.LVL148
 7220 0940 58000000 		.4byte	.LVL156
 7221 0944 0100     		.2byte	0x1
 7222 0946 51       		.byte	0x51
 7223 0947 58000000 		.4byte	.LVL156
 7224 094b 5E000000 		.4byte	.LVL157
 7225 094f 0100     		.2byte	0x1
 7226 0951 55       		.byte	0x55
 7227 0952 5E000000 		.4byte	.LVL157
 7228 0956 64000000 		.4byte	.LFE15
 7229 095a 0400     		.2byte	0x4
 7230 095c F3       		.byte	0xf3
 7231 095d 01       		.uleb128 0x1
 7232 095e 51       		.byte	0x51
 7233 095f 9F       		.byte	0x9f
 7234 0960 00000000 		.4byte	0
 7235 0964 00000000 		.4byte	0
 7236              	.LLST51:
 7237 0968 02000000 		.4byte	.LVL141
 7238 096c 36000000 		.4byte	.LVL146
 7239 0970 0100     		.2byte	0x1
 7240 0972 50       		.byte	0x50
 7241 0973 36000000 		.4byte	.LVL146
 7242 0977 39000000 		.4byte	.LVL147-1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 187


 7243 097b 0300     		.2byte	0x3
 7244 097d 70       		.byte	0x70
 7245 097e 5C       		.sleb128 -36
 7246 097f 9F       		.byte	0x9f
 7247 0980 39000000 		.4byte	.LVL147-1
 7248 0984 44000000 		.4byte	.LVL148
 7249 0988 0400     		.2byte	0x4
 7250 098a F3       		.byte	0xf3
 7251 098b 01       		.uleb128 0x1
 7252 098c 50       		.byte	0x50
 7253 098d 9F       		.byte	0x9f
 7254 098e 44000000 		.4byte	.LVL148
 7255 0992 4E000000 		.4byte	.LVL151
 7256 0996 0100     		.2byte	0x1
 7257 0998 50       		.byte	0x50
 7258 0999 4E000000 		.4byte	.LVL151
 7259 099d 50000000 		.4byte	.LVL152
 7260 09a1 0400     		.2byte	0x4
 7261 09a3 F3       		.byte	0xf3
 7262 09a4 01       		.uleb128 0x1
 7263 09a5 50       		.byte	0x50
 7264 09a6 9F       		.byte	0x9f
 7265 09a7 50000000 		.4byte	.LVL152
 7266 09ab 52000000 		.4byte	.LVL153
 7267 09af 0100     		.2byte	0x1
 7268 09b1 50       		.byte	0x50
 7269 09b2 52000000 		.4byte	.LVL153
 7270 09b6 54000000 		.4byte	.LVL154
 7271 09ba 0400     		.2byte	0x4
 7272 09bc F3       		.byte	0xf3
 7273 09bd 01       		.uleb128 0x1
 7274 09be 50       		.byte	0x50
 7275 09bf 9F       		.byte	0x9f
 7276 09c0 54000000 		.4byte	.LVL154
 7277 09c4 56000000 		.4byte	.LVL155
 7278 09c8 0100     		.2byte	0x1
 7279 09ca 50       		.byte	0x50
 7280 09cb 56000000 		.4byte	.LVL155
 7281 09cf 64000000 		.4byte	.LFE15
 7282 09d3 0400     		.2byte	0x4
 7283 09d5 F3       		.byte	0xf3
 7284 09d6 01       		.uleb128 0x1
 7285 09d7 50       		.byte	0x50
 7286 09d8 9F       		.byte	0x9f
 7287 09d9 00000000 		.4byte	0
 7288 09dd 00000000 		.4byte	0
 7289              	.LLST52:
 7290 09e1 18000000 		.4byte	.LVL142
 7291 09e5 26000000 		.4byte	.LVL144
 7292 09e9 0100     		.2byte	0x1
 7293 09eb 52       		.byte	0x52
 7294 09ec 26000000 		.4byte	.LVL144
 7295 09f0 39000000 		.4byte	.LVL147-1
 7296 09f4 0300     		.2byte	0x3
 7297 09f6 72       		.byte	0x72
 7298 09f7 7F       		.sleb128 -1
 7299 09f8 9F       		.byte	0x9f
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 188


 7300 09f9 44000000 		.4byte	.LVL148
 7301 09fd 50000000 		.4byte	.LVL152
 7302 0a01 0300     		.2byte	0x3
 7303 0a03 72       		.byte	0x72
 7304 0a04 7F       		.sleb128 -1
 7305 0a05 9F       		.byte	0x9f
 7306 0a06 50000000 		.4byte	.LVL152
 7307 0a0a 54000000 		.4byte	.LVL154
 7308 0a0e 0100     		.2byte	0x1
 7309 0a10 52       		.byte	0x52
 7310 0a11 54000000 		.4byte	.LVL154
 7311 0a15 58000000 		.4byte	.LVL156
 7312 0a19 0300     		.2byte	0x3
 7313 0a1b 72       		.byte	0x72
 7314 0a1c 7F       		.sleb128 -1
 7315 0a1d 9F       		.byte	0x9f
 7316 0a1e 00000000 		.4byte	0
 7317 0a22 00000000 		.4byte	0
 7318              	.LLST53:
 7319 0a26 24000000 		.4byte	.LVL143
 7320 0a2a 30000000 		.4byte	.LVL145
 7321 0a2e 0100     		.2byte	0x1
 7322 0a30 53       		.byte	0x53
 7323 0a31 44000000 		.4byte	.LVL148
 7324 0a35 46000000 		.4byte	.LVL149
 7325 0a39 0100     		.2byte	0x1
 7326 0a3b 53       		.byte	0x53
 7327 0a3c 46000000 		.4byte	.LVL149
 7328 0a40 48000000 		.4byte	.LVL150
 7329 0a44 0300     		.2byte	0x3
 7330 0a46 73       		.byte	0x73
 7331 0a47 7F       		.sleb128 -1
 7332 0a48 9F       		.byte	0x9f
 7333 0a49 00000000 		.4byte	0
 7334 0a4d 00000000 		.4byte	0
 7335              	.LLST54:
 7336 0a51 5E000000 		.4byte	.LVL157
 7337 0a55 62000000 		.4byte	.LVL158
 7338 0a59 0100     		.2byte	0x1
 7339 0a5b 54       		.byte	0x54
 7340 0a5c 00000000 		.4byte	0
 7341 0a60 00000000 		.4byte	0
 7342              	.LLST55:
 7343 0a64 00000000 		.4byte	.LVL159
 7344 0a68 0C000000 		.4byte	.LVL161
 7345 0a6c 0100     		.2byte	0x1
 7346 0a6e 50       		.byte	0x50
 7347 0a6f 0C000000 		.4byte	.LVL161
 7348 0a73 F2000000 		.4byte	.LVL188
 7349 0a77 0100     		.2byte	0x1
 7350 0a79 54       		.byte	0x54
 7351 0a7a F2000000 		.4byte	.LVL188
 7352 0a7e F8000000 		.4byte	.LFE16
 7353 0a82 0400     		.2byte	0x4
 7354 0a84 F3       		.byte	0xf3
 7355 0a85 01       		.uleb128 0x1
 7356 0a86 50       		.byte	0x50
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 189


 7357 0a87 9F       		.byte	0x9f
 7358 0a88 00000000 		.4byte	0
 7359 0a8c 00000000 		.4byte	0
 7360              	.LLST56:
 7361 0a90 00000000 		.4byte	.LVL159
 7362 0a94 0C000000 		.4byte	.LVL161
 7363 0a98 0100     		.2byte	0x1
 7364 0a9a 51       		.byte	0x51
 7365 0a9b 0C000000 		.4byte	.LVL161
 7366 0a9f F2000000 		.4byte	.LVL188
 7367 0aa3 0100     		.2byte	0x1
 7368 0aa5 57       		.byte	0x57
 7369 0aa6 F2000000 		.4byte	.LVL188
 7370 0aaa F8000000 		.4byte	.LFE16
 7371 0aae 0400     		.2byte	0x4
 7372 0ab0 F3       		.byte	0xf3
 7373 0ab1 01       		.uleb128 0x1
 7374 0ab2 51       		.byte	0x51
 7375 0ab3 9F       		.byte	0x9f
 7376 0ab4 00000000 		.4byte	0
 7377 0ab8 00000000 		.4byte	0
 7378              	.LLST57:
 7379 0abc 00000000 		.4byte	.LVL159
 7380 0ac0 0C000000 		.4byte	.LVL161
 7381 0ac4 0100     		.2byte	0x1
 7382 0ac6 52       		.byte	0x52
 7383 0ac7 0C000000 		.4byte	.LVL161
 7384 0acb 92000000 		.4byte	.LVL176
 7385 0acf 0200     		.2byte	0x2
 7386 0ad1 91       		.byte	0x91
 7387 0ad2 5C       		.sleb128 -36
 7388 0ad3 92000000 		.4byte	.LVL176
 7389 0ad7 97000000 		.4byte	.LVL177-1
 7390 0adb 0200     		.2byte	0x2
 7391 0add 71       		.byte	0x71
 7392 0ade 00       		.sleb128 0
 7393 0adf 97000000 		.4byte	.LVL177-1
 7394 0ae3 F2000000 		.4byte	.LVL188
 7395 0ae7 0200     		.2byte	0x2
 7396 0ae9 91       		.byte	0x91
 7397 0aea 5C       		.sleb128 -36
 7398 0aeb F2000000 		.4byte	.LVL188
 7399 0aef F8000000 		.4byte	.LFE16
 7400 0af3 0200     		.2byte	0x2
 7401 0af5 7D       		.byte	0x7d
 7402 0af6 5C       		.sleb128 -36
 7403 0af7 00000000 		.4byte	0
 7404 0afb 00000000 		.4byte	0
 7405              	.LLST58:
 7406 0aff 0A000000 		.4byte	.LVL160
 7407 0b03 0C000000 		.4byte	.LVL161
 7408 0b07 0200     		.2byte	0x2
 7409 0b09 30       		.byte	0x30
 7410 0b0a 9F       		.byte	0x9f
 7411 0b0b 0C000000 		.4byte	.LVL161
 7412 0b0f 5A000000 		.4byte	.LVL170
 7413 0b13 0100     		.2byte	0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 190


 7414 0b15 56       		.byte	0x56
 7415 0b16 5A000000 		.4byte	.LVL170
 7416 0b1a 5C000000 		.4byte	.LVL171
 7417 0b1e 0200     		.2byte	0x2
 7418 0b20 31       		.byte	0x31
 7419 0b21 9F       		.byte	0x9f
 7420 0b22 5C000000 		.4byte	.LVL171
 7421 0b26 F2000000 		.4byte	.LVL188
 7422 0b2a 0100     		.2byte	0x1
 7423 0b2c 56       		.byte	0x56
 7424 0b2d 00000000 		.4byte	0
 7425 0b31 00000000 		.4byte	0
 7426              	.LLST59:
 7427 0b35 0A000000 		.4byte	.LVL160
 7428 0b39 0C000000 		.4byte	.LVL161
 7429 0b3d 0100     		.2byte	0x1
 7430 0b3f 50       		.byte	0x50
 7431 0b40 0C000000 		.4byte	.LVL161
 7432 0b44 F2000000 		.4byte	.LVL188
 7433 0b48 0100     		.2byte	0x1
 7434 0b4a 54       		.byte	0x54
 7435 0b4b F2000000 		.4byte	.LVL188
 7436 0b4f F8000000 		.4byte	.LFE16
 7437 0b53 0400     		.2byte	0x4
 7438 0b55 F3       		.byte	0xf3
 7439 0b56 01       		.uleb128 0x1
 7440 0b57 50       		.byte	0x50
 7441 0b58 9F       		.byte	0x9f
 7442 0b59 00000000 		.4byte	0
 7443 0b5d 00000000 		.4byte	0
 7444              	.LLST60:
 7445 0b61 12000000 		.4byte	.LVL163
 7446 0b65 1E000000 		.4byte	.LVL165
 7447 0b69 0100     		.2byte	0x1
 7448 0b6b 55       		.byte	0x55
 7449 0b6c 1E000000 		.4byte	.LVL165
 7450 0b70 46000000 		.4byte	.LVL168
 7451 0b74 0300     		.2byte	0x3
 7452 0b76 75       		.byte	0x75
 7453 0b77 01       		.sleb128 1
 7454 0b78 9F       		.byte	0x9f
 7455 0b79 46000000 		.4byte	.LVL168
 7456 0b7d EE000000 		.4byte	.LVL187
 7457 0b81 0100     		.2byte	0x1
 7458 0b83 55       		.byte	0x55
 7459 0b84 00000000 		.4byte	0
 7460 0b88 00000000 		.4byte	0
 7461              	.LLST61:
 7462 0b8c 00000000 		.4byte	.LVL189
 7463 0b90 0C000000 		.4byte	.LVL191
 7464 0b94 0100     		.2byte	0x1
 7465 0b96 50       		.byte	0x50
 7466 0b97 0C000000 		.4byte	.LVL191
 7467 0b9b 24010000 		.4byte	.LVL228
 7468 0b9f 0100     		.2byte	0x1
 7469 0ba1 54       		.byte	0x54
 7470 0ba2 24010000 		.4byte	.LVL228
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 191


 7471 0ba6 28010000 		.4byte	.LFE17
 7472 0baa 0400     		.2byte	0x4
 7473 0bac F3       		.byte	0xf3
 7474 0bad 01       		.uleb128 0x1
 7475 0bae 50       		.byte	0x50
 7476 0baf 9F       		.byte	0x9f
 7477 0bb0 00000000 		.4byte	0
 7478 0bb4 00000000 		.4byte	0
 7479              	.LLST62:
 7480 0bb8 00000000 		.4byte	.LVL189
 7481 0bbc 0C000000 		.4byte	.LVL191
 7482 0bc0 0100     		.2byte	0x1
 7483 0bc2 51       		.byte	0x51
 7484 0bc3 0C000000 		.4byte	.LVL191
 7485 0bc7 94000000 		.4byte	.LVL208
 7486 0bcb 0200     		.2byte	0x2
 7487 0bcd 91       		.byte	0x91
 7488 0bce 64       		.sleb128 -28
 7489 0bcf 94000000 		.4byte	.LVL208
 7490 0bd3 99000000 		.4byte	.LVL209-1
 7491 0bd7 0200     		.2byte	0x2
 7492 0bd9 71       		.byte	0x71
 7493 0bda 00       		.sleb128 0
 7494 0bdb 99000000 		.4byte	.LVL209-1
 7495 0bdf 24010000 		.4byte	.LVL228
 7496 0be3 0200     		.2byte	0x2
 7497 0be5 91       		.byte	0x91
 7498 0be6 64       		.sleb128 -28
 7499 0be7 24010000 		.4byte	.LVL228
 7500 0beb 28010000 		.4byte	.LFE17
 7501 0bef 0200     		.2byte	0x2
 7502 0bf1 7D       		.byte	0x7d
 7503 0bf2 64       		.sleb128 -28
 7504 0bf3 00000000 		.4byte	0
 7505 0bf7 00000000 		.4byte	0
 7506              	.LLST63:
 7507 0bfb 08000000 		.4byte	.LVL190
 7508 0bff 0C000000 		.4byte	.LVL191
 7509 0c03 0200     		.2byte	0x2
 7510 0c05 30       		.byte	0x30
 7511 0c06 9F       		.byte	0x9f
 7512 0c07 0C000000 		.4byte	.LVL191
 7513 0c0b 5C000000 		.4byte	.LVL202
 7514 0c0f 0100     		.2byte	0x1
 7515 0c11 55       		.byte	0x55
 7516 0c12 5C000000 		.4byte	.LVL202
 7517 0c16 5E000000 		.4byte	.LVL203
 7518 0c1a 0200     		.2byte	0x2
 7519 0c1c 31       		.byte	0x31
 7520 0c1d 9F       		.byte	0x9f
 7521 0c1e 5E000000 		.4byte	.LVL203
 7522 0c22 24010000 		.4byte	.LVL228
 7523 0c26 0100     		.2byte	0x1
 7524 0c28 55       		.byte	0x55
 7525 0c29 00000000 		.4byte	0
 7526 0c2d 00000000 		.4byte	0
 7527              	.LLST64:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 192


 7528 0c31 08000000 		.4byte	.LVL190
 7529 0c35 0C000000 		.4byte	.LVL191
 7530 0c39 0100     		.2byte	0x1
 7531 0c3b 50       		.byte	0x50
 7532 0c3c 0C000000 		.4byte	.LVL191
 7533 0c40 24010000 		.4byte	.LVL228
 7534 0c44 0100     		.2byte	0x1
 7535 0c46 54       		.byte	0x54
 7536 0c47 24010000 		.4byte	.LVL228
 7537 0c4b 28010000 		.4byte	.LFE17
 7538 0c4f 0400     		.2byte	0x4
 7539 0c51 F3       		.byte	0xf3
 7540 0c52 01       		.uleb128 0x1
 7541 0c53 50       		.byte	0x50
 7542 0c54 9F       		.byte	0x9f
 7543 0c55 00000000 		.4byte	0
 7544 0c59 00000000 		.4byte	0
 7545              	.LLST65:
 7546 0c5d 08000000 		.4byte	.LVL190
 7547 0c61 0C000000 		.4byte	.LVL191
 7548 0c65 0200     		.2byte	0x2
 7549 0c67 30       		.byte	0x30
 7550 0c68 9F       		.byte	0x9f
 7551 0c69 0C000000 		.4byte	.LVL191
 7552 0c6d B4000000 		.4byte	.LVL213
 7553 0c71 0100     		.2byte	0x1
 7554 0c73 56       		.byte	0x56
 7555 0c74 B4000000 		.4byte	.LVL213
 7556 0c78 B7000000 		.4byte	.LVL214-1
 7557 0c7c 0100     		.2byte	0x1
 7558 0c7e 50       		.byte	0x50
 7559 0c7f B7000000 		.4byte	.LVL214-1
 7560 0c83 24010000 		.4byte	.LVL228
 7561 0c87 0100     		.2byte	0x1
 7562 0c89 56       		.byte	0x56
 7563 0c8a 00000000 		.4byte	0
 7564 0c8e 00000000 		.4byte	0
 7565              	.LLST66:
 7566 0c92 12000000 		.4byte	.LVL193
 7567 0c96 16000000 		.4byte	.LVL194
 7568 0c9a 0100     		.2byte	0x1
 7569 0c9c 53       		.byte	0x53
 7570 0c9d 16000000 		.4byte	.LVL194
 7571 0ca1 1A000000 		.4byte	.LVL195
 7572 0ca5 0300     		.2byte	0x3
 7573 0ca7 73       		.byte	0x73
 7574 0ca8 01       		.sleb128 1
 7575 0ca9 9F       		.byte	0x9f
 7576 0caa 1A000000 		.4byte	.LVL195
 7577 0cae 1F000000 		.4byte	.LVL196-1
 7578 0cb2 0600     		.2byte	0x6
 7579 0cb4 74       		.byte	0x74
 7580 0cb5 38       		.sleb128 56
 7581 0cb6 06       		.byte	0x6
 7582 0cb7 23       		.byte	0x23
 7583 0cb8 01       		.uleb128 0x1
 7584 0cb9 9F       		.byte	0x9f
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 193


 7585 0cba 48000000 		.4byte	.LVL199
 7586 0cbe 4A000000 		.4byte	.LVL200
 7587 0cc2 0100     		.2byte	0x1
 7588 0cc4 53       		.byte	0x53
 7589 0cc5 00000000 		.4byte	0
 7590 0cc9 00000000 		.4byte	0
 7591              	.LLST67:
 7592 0ccd 0E010000 		.4byte	.LVL224
 7593 0cd1 12010000 		.4byte	.LVL225
 7594 0cd5 0100     		.2byte	0x1
 7595 0cd7 50       		.byte	0x50
 7596 0cd8 12010000 		.4byte	.LVL225
 7597 0cdc 15010000 		.4byte	.LVL226-1
 7598 0ce0 0100     		.2byte	0x1
 7599 0ce2 51       		.byte	0x51
 7600 0ce3 00000000 		.4byte	0
 7601 0ce7 00000000 		.4byte	0
 7602              	.LLST68:
 7603 0ceb 00000000 		.4byte	.LVL229
 7604 0cef 0B000000 		.4byte	.LVL231-1
 7605 0cf3 0100     		.2byte	0x1
 7606 0cf5 50       		.byte	0x50
 7607 0cf6 0B000000 		.4byte	.LVL231-1
 7608 0cfa 30000000 		.4byte	.LFE11
 7609 0cfe 0100     		.2byte	0x1
 7610 0d00 54       		.byte	0x54
 7611 0d01 00000000 		.4byte	0
 7612 0d05 00000000 		.4byte	0
 7613              	.LLST69:
 7614 0d09 00000000 		.4byte	.LVL229
 7615 0d0d 0B000000 		.4byte	.LVL231-1
 7616 0d11 0100     		.2byte	0x1
 7617 0d13 51       		.byte	0x51
 7618 0d14 0B000000 		.4byte	.LVL231-1
 7619 0d18 30000000 		.4byte	.LFE11
 7620 0d1c 0100     		.2byte	0x1
 7621 0d1e 56       		.byte	0x56
 7622 0d1f 00000000 		.4byte	0
 7623 0d23 00000000 		.4byte	0
 7624              	.LLST70:
 7625 0d27 16000000 		.4byte	.LVL232
 7626 0d2b 1A000000 		.4byte	.LVL233
 7627 0d2f 0200     		.2byte	0x2
 7628 0d31 31       		.byte	0x31
 7629 0d32 9F       		.byte	0x9f
 7630 0d33 22000000 		.4byte	.LVL234
 7631 0d37 2C000000 		.4byte	.LVL235
 7632 0d3b 0100     		.2byte	0x1
 7633 0d3d 50       		.byte	0x50
 7634 0d3e 2C000000 		.4byte	.LVL235
 7635 0d42 30000000 		.4byte	.LFE11
 7636 0d46 0100     		.2byte	0x1
 7637 0d48 53       		.byte	0x53
 7638 0d49 00000000 		.4byte	0
 7639 0d4d 00000000 		.4byte	0
 7640              	.LLST71:
 7641 0d51 06000000 		.4byte	.LVL230
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 194


 7642 0d55 0B000000 		.4byte	.LVL231-1
 7643 0d59 0100     		.2byte	0x1
 7644 0d5b 50       		.byte	0x50
 7645 0d5c 0B000000 		.4byte	.LVL231-1
 7646 0d60 30000000 		.4byte	.LFE11
 7647 0d64 0100     		.2byte	0x1
 7648 0d66 54       		.byte	0x54
 7649 0d67 00000000 		.4byte	0
 7650 0d6b 00000000 		.4byte	0
 7651              	.LLST72:
 7652 0d6f 00000000 		.4byte	.LVL236
 7653 0d73 0C000000 		.4byte	.LVL238
 7654 0d77 0100     		.2byte	0x1
 7655 0d79 50       		.byte	0x50
 7656 0d7a 0C000000 		.4byte	.LVL238
 7657 0d7e F2000000 		.4byte	.LVL266
 7658 0d82 0100     		.2byte	0x1
 7659 0d84 54       		.byte	0x54
 7660 0d85 F2000000 		.4byte	.LVL266
 7661 0d89 F8000000 		.4byte	.LFE18
 7662 0d8d 0400     		.2byte	0x4
 7663 0d8f F3       		.byte	0xf3
 7664 0d90 01       		.uleb128 0x1
 7665 0d91 50       		.byte	0x50
 7666 0d92 9F       		.byte	0x9f
 7667 0d93 00000000 		.4byte	0
 7668 0d97 00000000 		.4byte	0
 7669              	.LLST73:
 7670 0d9b 00000000 		.4byte	.LVL236
 7671 0d9f 0C000000 		.4byte	.LVL238
 7672 0da3 0100     		.2byte	0x1
 7673 0da5 51       		.byte	0x51
 7674 0da6 0C000000 		.4byte	.LVL238
 7675 0daa F2000000 		.4byte	.LVL266
 7676 0dae 0100     		.2byte	0x1
 7677 0db0 56       		.byte	0x56
 7678 0db1 F2000000 		.4byte	.LVL266
 7679 0db5 F8000000 		.4byte	.LFE18
 7680 0db9 0400     		.2byte	0x4
 7681 0dbb F3       		.byte	0xf3
 7682 0dbc 01       		.uleb128 0x1
 7683 0dbd 51       		.byte	0x51
 7684 0dbe 9F       		.byte	0x9f
 7685 0dbf 00000000 		.4byte	0
 7686 0dc3 00000000 		.4byte	0
 7687              	.LLST74:
 7688 0dc7 00000000 		.4byte	.LVL236
 7689 0dcb 0C000000 		.4byte	.LVL238
 7690 0dcf 0100     		.2byte	0x1
 7691 0dd1 52       		.byte	0x52
 7692 0dd2 0C000000 		.4byte	.LVL238
 7693 0dd6 92000000 		.4byte	.LVL254
 7694 0dda 0200     		.2byte	0x2
 7695 0ddc 91       		.byte	0x91
 7696 0ddd 64       		.sleb128 -28
 7697 0dde 92000000 		.4byte	.LVL254
 7698 0de2 97000000 		.4byte	.LVL255-1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 195


 7699 0de6 0200     		.2byte	0x2
 7700 0de8 71       		.byte	0x71
 7701 0de9 00       		.sleb128 0
 7702 0dea 97000000 		.4byte	.LVL255-1
 7703 0dee F2000000 		.4byte	.LVL266
 7704 0df2 0200     		.2byte	0x2
 7705 0df4 91       		.byte	0x91
 7706 0df5 64       		.sleb128 -28
 7707 0df6 F2000000 		.4byte	.LVL266
 7708 0dfa F8000000 		.4byte	.LFE18
 7709 0dfe 0200     		.2byte	0x2
 7710 0e00 7D       		.byte	0x7d
 7711 0e01 64       		.sleb128 -28
 7712 0e02 00000000 		.4byte	0
 7713 0e06 00000000 		.4byte	0
 7714              	.LLST75:
 7715 0e0a 0A000000 		.4byte	.LVL237
 7716 0e0e 0C000000 		.4byte	.LVL238
 7717 0e12 0200     		.2byte	0x2
 7718 0e14 30       		.byte	0x30
 7719 0e15 9F       		.byte	0x9f
 7720 0e16 0C000000 		.4byte	.LVL238
 7721 0e1a 16000000 		.4byte	.LVL241
 7722 0e1e 0100     		.2byte	0x1
 7723 0e20 55       		.byte	0x55
 7724 0e21 46000000 		.4byte	.LVL245
 7725 0e25 5A000000 		.4byte	.LVL248
 7726 0e29 0100     		.2byte	0x1
 7727 0e2b 55       		.byte	0x55
 7728 0e2c 5A000000 		.4byte	.LVL248
 7729 0e30 5C000000 		.4byte	.LVL249
 7730 0e34 0200     		.2byte	0x2
 7731 0e36 31       		.byte	0x31
 7732 0e37 9F       		.byte	0x9f
 7733 0e38 5C000000 		.4byte	.LVL249
 7734 0e3c EE000000 		.4byte	.LVL265
 7735 0e40 0100     		.2byte	0x1
 7736 0e42 55       		.byte	0x55
 7737 0e43 00000000 		.4byte	0
 7738 0e47 00000000 		.4byte	0
 7739              	.LLST76:
 7740 0e4b 16000000 		.4byte	.LVL241
 7741 0e4f 46000000 		.4byte	.LVL245
 7742 0e53 0100     		.2byte	0x1
 7743 0e55 55       		.byte	0x55
 7744 0e56 00000000 		.4byte	0
 7745 0e5a 00000000 		.4byte	0
 7746              	.LLST77:
 7747 0e5e 0A000000 		.4byte	.LVL237
 7748 0e62 0C000000 		.4byte	.LVL238
 7749 0e66 0100     		.2byte	0x1
 7750 0e68 50       		.byte	0x50
 7751 0e69 0C000000 		.4byte	.LVL238
 7752 0e6d F2000000 		.4byte	.LVL266
 7753 0e71 0100     		.2byte	0x1
 7754 0e73 54       		.byte	0x54
 7755 0e74 F2000000 		.4byte	.LVL266
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 196


 7756 0e78 F8000000 		.4byte	.LFE18
 7757 0e7c 0400     		.2byte	0x4
 7758 0e7e F3       		.byte	0xf3
 7759 0e7f 01       		.uleb128 0x1
 7760 0e80 50       		.byte	0x50
 7761 0e81 9F       		.byte	0x9f
 7762 0e82 00000000 		.4byte	0
 7763 0e86 00000000 		.4byte	0
 7764              	.LLST78:
 7765 0e8a 12000000 		.4byte	.LVL240
 7766 0e8e 1D000000 		.4byte	.LVL242-1
 7767 0e92 0100     		.2byte	0x1
 7768 0e94 53       		.byte	0x53
 7769 0e95 46000000 		.4byte	.LVL245
 7770 0e99 48000000 		.4byte	.LVL246
 7771 0e9d 0100     		.2byte	0x1
 7772 0e9f 53       		.byte	0x53
 7773 0ea0 00000000 		.4byte	0
 7774 0ea4 00000000 		.4byte	0
 7775              	.LLST79:
 7776 0ea8 00000000 		.4byte	.LVL267
 7777 0eac 29000000 		.4byte	.LVL271-1
 7778 0eb0 0100     		.2byte	0x1
 7779 0eb2 50       		.byte	0x50
 7780 0eb3 29000000 		.4byte	.LVL271-1
 7781 0eb7 5C000000 		.4byte	.LVL276
 7782 0ebb 0100     		.2byte	0x1
 7783 0ebd 57       		.byte	0x57
 7784 0ebe 5C000000 		.4byte	.LVL276
 7785 0ec2 5E000000 		.4byte	.LVL277
 7786 0ec6 0100     		.2byte	0x1
 7787 0ec8 50       		.byte	0x50
 7788 0ec9 5E000000 		.4byte	.LVL277
 7789 0ecd 60000000 		.4byte	.LVL278
 7790 0ed1 0400     		.2byte	0x4
 7791 0ed3 F3       		.byte	0xf3
 7792 0ed4 01       		.uleb128 0x1
 7793 0ed5 50       		.byte	0x50
 7794 0ed6 9F       		.byte	0x9f
 7795 0ed7 60000000 		.4byte	.LVL278
 7796 0edb 6A000000 		.4byte	.LVL279
 7797 0edf 0100     		.2byte	0x1
 7798 0ee1 57       		.byte	0x57
 7799 0ee2 6A000000 		.4byte	.LVL279
 7800 0ee6 72000000 		.4byte	.LFE19
 7801 0eea 0400     		.2byte	0x4
 7802 0eec F3       		.byte	0xf3
 7803 0eed 01       		.uleb128 0x1
 7804 0eee 50       		.byte	0x50
 7805 0eef 9F       		.byte	0x9f
 7806 0ef0 00000000 		.4byte	0
 7807 0ef4 00000000 		.4byte	0
 7808              	.LLST80:
 7809 0ef8 00000000 		.4byte	.LVL267
 7810 0efc 29000000 		.4byte	.LVL271-1
 7811 0f00 0100     		.2byte	0x1
 7812 0f02 51       		.byte	0x51
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 197


 7813 0f03 29000000 		.4byte	.LVL271-1
 7814 0f07 5C000000 		.4byte	.LVL276
 7815 0f0b 0400     		.2byte	0x4
 7816 0f0d F3       		.byte	0xf3
 7817 0f0e 01       		.uleb128 0x1
 7818 0f0f 51       		.byte	0x51
 7819 0f10 9F       		.byte	0x9f
 7820 0f11 5C000000 		.4byte	.LVL276
 7821 0f15 60000000 		.4byte	.LVL278
 7822 0f19 0100     		.2byte	0x1
 7823 0f1b 51       		.byte	0x51
 7824 0f1c 60000000 		.4byte	.LVL278
 7825 0f20 72000000 		.4byte	.LFE19
 7826 0f24 0400     		.2byte	0x4
 7827 0f26 F3       		.byte	0xf3
 7828 0f27 01       		.uleb128 0x1
 7829 0f28 51       		.byte	0x51
 7830 0f29 9F       		.byte	0x9f
 7831 0f2a 00000000 		.4byte	0
 7832 0f2e 00000000 		.4byte	0
 7833              	.LLST81:
 7834 0f32 00000000 		.4byte	.LVL267
 7835 0f36 29000000 		.4byte	.LVL271-1
 7836 0f3a 0100     		.2byte	0x1
 7837 0f3c 52       		.byte	0x52
 7838 0f3d 29000000 		.4byte	.LVL271-1
 7839 0f41 5C000000 		.4byte	.LVL276
 7840 0f45 0100     		.2byte	0x1
 7841 0f47 58       		.byte	0x58
 7842 0f48 5C000000 		.4byte	.LVL276
 7843 0f4c 60000000 		.4byte	.LVL278
 7844 0f50 0100     		.2byte	0x1
 7845 0f52 52       		.byte	0x52
 7846 0f53 60000000 		.4byte	.LVL278
 7847 0f57 6A000000 		.4byte	.LVL279
 7848 0f5b 0100     		.2byte	0x1
 7849 0f5d 58       		.byte	0x58
 7850 0f5e 6A000000 		.4byte	.LVL279
 7851 0f62 72000000 		.4byte	.LFE19
 7852 0f66 0400     		.2byte	0x4
 7853 0f68 F3       		.byte	0xf3
 7854 0f69 01       		.uleb128 0x1
 7855 0f6a 52       		.byte	0x52
 7856 0f6b 9F       		.byte	0x9f
 7857 0f6c 00000000 		.4byte	0
 7858 0f70 00000000 		.4byte	0
 7859              	.LLST82:
 7860 0f74 04000000 		.4byte	.LVL268
 7861 0f78 29000000 		.4byte	.LVL271-1
 7862 0f7c 0100     		.2byte	0x1
 7863 0f7e 50       		.byte	0x50
 7864 0f7f 29000000 		.4byte	.LVL271-1
 7865 0f83 5C000000 		.4byte	.LVL276
 7866 0f87 0100     		.2byte	0x1
 7867 0f89 57       		.byte	0x57
 7868 0f8a 5C000000 		.4byte	.LVL276
 7869 0f8e 5E000000 		.4byte	.LVL277
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 198


 7870 0f92 0100     		.2byte	0x1
 7871 0f94 50       		.byte	0x50
 7872 0f95 5E000000 		.4byte	.LVL277
 7873 0f99 60000000 		.4byte	.LVL278
 7874 0f9d 0400     		.2byte	0x4
 7875 0f9f F3       		.byte	0xf3
 7876 0fa0 01       		.uleb128 0x1
 7877 0fa1 50       		.byte	0x50
 7878 0fa2 9F       		.byte	0x9f
 7879 0fa3 60000000 		.4byte	.LVL278
 7880 0fa7 6A000000 		.4byte	.LVL279
 7881 0fab 0100     		.2byte	0x1
 7882 0fad 57       		.byte	0x57
 7883 0fae 6A000000 		.4byte	.LVL279
 7884 0fb2 72000000 		.4byte	.LFE19
 7885 0fb6 0400     		.2byte	0x4
 7886 0fb8 F3       		.byte	0xf3
 7887 0fb9 01       		.uleb128 0x1
 7888 0fba 50       		.byte	0x50
 7889 0fbb 9F       		.byte	0x9f
 7890 0fbc 00000000 		.4byte	0
 7891 0fc0 00000000 		.4byte	0
 7892              	.LLST83:
 7893 0fc4 1A000000 		.4byte	.LVL269
 7894 0fc8 2C000000 		.4byte	.LVL272
 7895 0fcc 0100     		.2byte	0x1
 7896 0fce 54       		.byte	0x54
 7897 0fcf 2C000000 		.4byte	.LVL272
 7898 0fd3 5C000000 		.4byte	.LVL276
 7899 0fd7 0300     		.2byte	0x3
 7900 0fd9 74       		.byte	0x74
 7901 0fda 01       		.sleb128 1
 7902 0fdb 9F       		.byte	0x9f
 7903 0fdc 5C000000 		.4byte	.LVL276
 7904 0fe0 60000000 		.4byte	.LVL278
 7905 0fe4 0100     		.2byte	0x1
 7906 0fe6 54       		.byte	0x54
 7907 0fe7 60000000 		.4byte	.LVL278
 7908 0feb 6A000000 		.4byte	.LVL279
 7909 0fef 0300     		.2byte	0x3
 7910 0ff1 74       		.byte	0x74
 7911 0ff2 01       		.sleb128 1
 7912 0ff3 9F       		.byte	0x9f
 7913 0ff4 00000000 		.4byte	0
 7914 0ff8 00000000 		.4byte	0
 7915              	.LLST84:
 7916 0ffc 26000000 		.4byte	.LVL270
 7917 1000 52000000 		.4byte	.LVL274
 7918 1004 0100     		.2byte	0x1
 7919 1006 55       		.byte	0x55
 7920 1007 52000000 		.4byte	.LVL274
 7921 100b 54000000 		.4byte	.LVL275
 7922 100f 0300     		.2byte	0x3
 7923 1011 75       		.byte	0x75
 7924 1012 7F       		.sleb128 -1
 7925 1013 9F       		.byte	0x9f
 7926 1014 60000000 		.4byte	.LVL278
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 199


 7927 1018 6A000000 		.4byte	.LVL279
 7928 101c 0100     		.2byte	0x1
 7929 101e 55       		.byte	0x55
 7930 101f 00000000 		.4byte	0
 7931 1023 00000000 		.4byte	0
 7932              	.LLST85:
 7933 1027 6A000000 		.4byte	.LVL279
 7934 102b 6E000000 		.4byte	.LVL280
 7935 102f 0100     		.2byte	0x1
 7936 1031 56       		.byte	0x56
 7937 1032 00000000 		.4byte	0
 7938 1036 00000000 		.4byte	0
 7939              	.LLST86:
 7940 103a 00000000 		.4byte	.LVL281
 7941 103e 21000000 		.4byte	.LVL284-1
 7942 1042 0100     		.2byte	0x1
 7943 1044 50       		.byte	0x50
 7944 1045 21000000 		.4byte	.LVL284-1
 7945 1049 28000000 		.4byte	.LVL286
 7946 104d 0100     		.2byte	0x1
 7947 104f 54       		.byte	0x54
 7948 1050 28000000 		.4byte	.LVL286
 7949 1054 2A000000 		.4byte	.LVL287
 7950 1058 0100     		.2byte	0x1
 7951 105a 50       		.byte	0x50
 7952 105b 2A000000 		.4byte	.LVL287
 7953 105f 30000000 		.4byte	.LFE20
 7954 1063 0400     		.2byte	0x4
 7955 1065 F3       		.byte	0xf3
 7956 1066 01       		.uleb128 0x1
 7957 1067 50       		.byte	0x50
 7958 1068 9F       		.byte	0x9f
 7959 1069 00000000 		.4byte	0
 7960 106d 00000000 		.4byte	0
 7961              	.LLST87:
 7962 1071 00000000 		.4byte	.LVL281
 7963 1075 21000000 		.4byte	.LVL284-1
 7964 1079 0100     		.2byte	0x1
 7965 107b 51       		.byte	0x51
 7966 107c 21000000 		.4byte	.LVL284-1
 7967 1080 28000000 		.4byte	.LVL286
 7968 1084 0400     		.2byte	0x4
 7969 1086 F3       		.byte	0xf3
 7970 1087 01       		.uleb128 0x1
 7971 1088 51       		.byte	0x51
 7972 1089 9F       		.byte	0x9f
 7973 108a 28000000 		.4byte	.LVL286
 7974 108e 2A000000 		.4byte	.LVL287
 7975 1092 0100     		.2byte	0x1
 7976 1094 51       		.byte	0x51
 7977 1095 2A000000 		.4byte	.LVL287
 7978 1099 30000000 		.4byte	.LFE20
 7979 109d 0400     		.2byte	0x4
 7980 109f F3       		.byte	0xf3
 7981 10a0 01       		.uleb128 0x1
 7982 10a1 51       		.byte	0x51
 7983 10a2 9F       		.byte	0x9f
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 200


 7984 10a3 00000000 		.4byte	0
 7985 10a7 00000000 		.4byte	0
 7986              	.LLST88:
 7987 10ab 24000000 		.4byte	.LVL285
 7988 10af 28000000 		.4byte	.LVL286
 7989 10b3 0200     		.2byte	0x2
 7990 10b5 31       		.byte	0x31
 7991 10b6 9F       		.byte	0x9f
 7992 10b7 2A000000 		.4byte	.LVL287
 7993 10bb 30000000 		.4byte	.LFE20
 7994 10bf 0100     		.2byte	0x1
 7995 10c1 50       		.byte	0x50
 7996 10c2 00000000 		.4byte	0
 7997 10c6 00000000 		.4byte	0
 7998              	.LLST89:
 7999 10ca 1E000000 		.4byte	.LVL283
 8000 10ce 28000000 		.4byte	.LVL286
 8001 10d2 0100     		.2byte	0x1
 8002 10d4 56       		.byte	0x56
 8003 10d5 00000000 		.4byte	0
 8004 10d9 00000000 		.4byte	0
 8005              	.LLST90:
 8006 10dd 02000000 		.4byte	.LVL282
 8007 10e1 21000000 		.4byte	.LVL284-1
 8008 10e5 0100     		.2byte	0x1
 8009 10e7 50       		.byte	0x50
 8010 10e8 21000000 		.4byte	.LVL284-1
 8011 10ec 28000000 		.4byte	.LVL286
 8012 10f0 0100     		.2byte	0x1
 8013 10f2 54       		.byte	0x54
 8014 10f3 28000000 		.4byte	.LVL286
 8015 10f7 2A000000 		.4byte	.LVL287
 8016 10fb 0100     		.2byte	0x1
 8017 10fd 50       		.byte	0x50
 8018 10fe 2A000000 		.4byte	.LVL287
 8019 1102 30000000 		.4byte	.LFE20
 8020 1106 0400     		.2byte	0x4
 8021 1108 F3       		.byte	0xf3
 8022 1109 01       		.uleb128 0x1
 8023 110a 50       		.byte	0x50
 8024 110b 9F       		.byte	0x9f
 8025 110c 00000000 		.4byte	0
 8026 1110 00000000 		.4byte	0
 8027              	.LLST91:
 8028 1114 2A000000 		.4byte	.LVL287
 8029 1118 2E000000 		.4byte	.LVL288
 8030 111c 0100     		.2byte	0x1
 8031 111e 55       		.byte	0x55
 8032 111f 00000000 		.4byte	0
 8033 1123 00000000 		.4byte	0
 8034              	.LLST92:
 8035 1127 00000000 		.4byte	.LVL289
 8036 112b 07000000 		.4byte	.LVL290-1
 8037 112f 0100     		.2byte	0x1
 8038 1131 50       		.byte	0x50
 8039 1132 07000000 		.4byte	.LVL290-1
 8040 1136 0A000000 		.4byte	.LVL291
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 201


 8041 113a 0100     		.2byte	0x1
 8042 113c 54       		.byte	0x54
 8043 113d 0A000000 		.4byte	.LVL291
 8044 1141 12000000 		.4byte	.LFE21
 8045 1145 0400     		.2byte	0x4
 8046 1147 F3       		.byte	0xf3
 8047 1148 01       		.uleb128 0x1
 8048 1149 50       		.byte	0x50
 8049 114a 9F       		.byte	0x9f
 8050 114b 00000000 		.4byte	0
 8051 114f 00000000 		.4byte	0
 8052              	.LLST93:
 8053 1153 00000000 		.4byte	.LVL293
 8054 1157 07000000 		.4byte	.LVL295-1
 8055 115b 0100     		.2byte	0x1
 8056 115d 50       		.byte	0x50
 8057 115e 07000000 		.4byte	.LVL295-1
 8058 1162 0C000000 		.4byte	.LVL296
 8059 1166 0100     		.2byte	0x1
 8060 1168 54       		.byte	0x54
 8061 1169 0C000000 		.4byte	.LVL296
 8062 116d 16000000 		.4byte	.LFE22
 8063 1171 0400     		.2byte	0x4
 8064 1173 F3       		.byte	0xf3
 8065 1174 01       		.uleb128 0x1
 8066 1175 50       		.byte	0x50
 8067 1176 9F       		.byte	0x9f
 8068 1177 00000000 		.4byte	0
 8069 117b 00000000 		.4byte	0
 8070              	.LLST94:
 8071 117f 04000000 		.4byte	.LVL294
 8072 1183 07000000 		.4byte	.LVL295-1
 8073 1187 0100     		.2byte	0x1
 8074 1189 50       		.byte	0x50
 8075 118a 07000000 		.4byte	.LVL295-1
 8076 118e 0C000000 		.4byte	.LVL296
 8077 1192 0100     		.2byte	0x1
 8078 1194 54       		.byte	0x54
 8079 1195 0C000000 		.4byte	.LVL296
 8080 1199 16000000 		.4byte	.LFE22
 8081 119d 0400     		.2byte	0x4
 8082 119f F3       		.byte	0xf3
 8083 11a0 01       		.uleb128 0x1
 8084 11a1 50       		.byte	0x50
 8085 11a2 9F       		.byte	0x9f
 8086 11a3 00000000 		.4byte	0
 8087 11a7 00000000 		.4byte	0
 8088              	.LLST95:
 8089 11ab 00000000 		.4byte	.LVL299
 8090 11af 02000000 		.4byte	.LVL300
 8091 11b3 0100     		.2byte	0x1
 8092 11b5 50       		.byte	0x50
 8093 11b6 02000000 		.4byte	.LVL300
 8094 11ba 04000000 		.4byte	.LFE23
 8095 11be 0400     		.2byte	0x4
 8096 11c0 F3       		.byte	0xf3
 8097 11c1 01       		.uleb128 0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 202


 8098 11c2 50       		.byte	0x50
 8099 11c3 9F       		.byte	0x9f
 8100 11c4 00000000 		.4byte	0
 8101 11c8 00000000 		.4byte	0
 8102              	.LLST96:
 8103 11cc 00000000 		.4byte	.LVL299
 8104 11d0 02000000 		.4byte	.LVL300
 8105 11d4 0100     		.2byte	0x1
 8106 11d6 50       		.byte	0x50
 8107 11d7 02000000 		.4byte	.LVL300
 8108 11db 04000000 		.4byte	.LFE23
 8109 11df 0400     		.2byte	0x4
 8110 11e1 F3       		.byte	0xf3
 8111 11e2 01       		.uleb128 0x1
 8112 11e3 50       		.byte	0x50
 8113 11e4 9F       		.byte	0x9f
 8114 11e5 00000000 		.4byte	0
 8115 11e9 00000000 		.4byte	0
 8116              	.LLST97:
 8117 11ed 00000000 		.4byte	.LVL301
 8118 11f1 06000000 		.4byte	.LVL302
 8119 11f5 0100     		.2byte	0x1
 8120 11f7 50       		.byte	0x50
 8121 11f8 06000000 		.4byte	.LVL302
 8122 11fc 08000000 		.4byte	.LVL303
 8123 1200 0400     		.2byte	0x4
 8124 1202 F3       		.byte	0xf3
 8125 1203 01       		.uleb128 0x1
 8126 1204 50       		.byte	0x50
 8127 1205 9F       		.byte	0x9f
 8128 1206 08000000 		.4byte	.LVL303
 8129 120a 0A000000 		.4byte	.LVL304
 8130 120e 0100     		.2byte	0x1
 8131 1210 50       		.byte	0x50
 8132 1211 0A000000 		.4byte	.LVL304
 8133 1215 0C000000 		.4byte	.LFE30
 8134 1219 0400     		.2byte	0x4
 8135 121b F3       		.byte	0xf3
 8136 121c 01       		.uleb128 0x1
 8137 121d 50       		.byte	0x50
 8138 121e 9F       		.byte	0x9f
 8139 121f 00000000 		.4byte	0
 8140 1223 00000000 		.4byte	0
 8141              	.LLST98:
 8142 1227 00000000 		.4byte	.LVL301
 8143 122b 06000000 		.4byte	.LVL302
 8144 122f 0100     		.2byte	0x1
 8145 1231 50       		.byte	0x50
 8146 1232 06000000 		.4byte	.LVL302
 8147 1236 08000000 		.4byte	.LVL303
 8148 123a 0400     		.2byte	0x4
 8149 123c F3       		.byte	0xf3
 8150 123d 01       		.uleb128 0x1
 8151 123e 50       		.byte	0x50
 8152 123f 9F       		.byte	0x9f
 8153 1240 08000000 		.4byte	.LVL303
 8154 1244 0A000000 		.4byte	.LVL304
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 203


 8155 1248 0100     		.2byte	0x1
 8156 124a 50       		.byte	0x50
 8157 124b 0A000000 		.4byte	.LVL304
 8158 124f 0C000000 		.4byte	.LFE30
 8159 1253 0400     		.2byte	0x4
 8160 1255 F3       		.byte	0xf3
 8161 1256 01       		.uleb128 0x1
 8162 1257 50       		.byte	0x50
 8163 1258 9F       		.byte	0x9f
 8164 1259 00000000 		.4byte	0
 8165 125d 00000000 		.4byte	0
 8166              	.LLST99:
 8167 1261 00000000 		.4byte	.LVL305
 8168 1265 0A000000 		.4byte	.LVL306
 8169 1269 0100     		.2byte	0x1
 8170 126b 50       		.byte	0x50
 8171 126c 0A000000 		.4byte	.LVL306
 8172 1270 0C000000 		.4byte	.LVL307
 8173 1274 0400     		.2byte	0x4
 8174 1276 F3       		.byte	0xf3
 8175 1277 01       		.uleb128 0x1
 8176 1278 50       		.byte	0x50
 8177 1279 9F       		.byte	0x9f
 8178 127a 0C000000 		.4byte	.LVL307
 8179 127e 0E000000 		.4byte	.LVL308
 8180 1282 0100     		.2byte	0x1
 8181 1284 50       		.byte	0x50
 8182 1285 0E000000 		.4byte	.LVL308
 8183 1289 10000000 		.4byte	.LFE32
 8184 128d 0400     		.2byte	0x4
 8185 128f F3       		.byte	0xf3
 8186 1290 01       		.uleb128 0x1
 8187 1291 50       		.byte	0x50
 8188 1292 9F       		.byte	0x9f
 8189 1293 00000000 		.4byte	0
 8190 1297 00000000 		.4byte	0
 8191              	.LLST100:
 8192 129b 00000000 		.4byte	.LVL305
 8193 129f 0A000000 		.4byte	.LVL306
 8194 12a3 0100     		.2byte	0x1
 8195 12a5 50       		.byte	0x50
 8196 12a6 0A000000 		.4byte	.LVL306
 8197 12aa 0C000000 		.4byte	.LVL307
 8198 12ae 0400     		.2byte	0x4
 8199 12b0 F3       		.byte	0xf3
 8200 12b1 01       		.uleb128 0x1
 8201 12b2 50       		.byte	0x50
 8202 12b3 9F       		.byte	0x9f
 8203 12b4 0C000000 		.4byte	.LVL307
 8204 12b8 0E000000 		.4byte	.LVL308
 8205 12bc 0100     		.2byte	0x1
 8206 12be 50       		.byte	0x50
 8207 12bf 0E000000 		.4byte	.LVL308
 8208 12c3 10000000 		.4byte	.LFE32
 8209 12c7 0400     		.2byte	0x4
 8210 12c9 F3       		.byte	0xf3
 8211 12ca 01       		.uleb128 0x1
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 204


 8212 12cb 50       		.byte	0x50
 8213 12cc 9F       		.byte	0x9f
 8214 12cd 00000000 		.4byte	0
 8215 12d1 00000000 		.4byte	0
 8216              	.LLST101:
 8217 12d5 00000000 		.4byte	.LVL309
 8218 12d9 04000000 		.4byte	.LVL310
 8219 12dd 0200     		.2byte	0x2
 8220 12df 30       		.byte	0x30
 8221 12e0 9F       		.byte	0x9f
 8222 12e1 04000000 		.4byte	.LVL310
 8223 12e5 16000000 		.4byte	.LVL311
 8224 12e9 0100     		.2byte	0x1
 8225 12eb 53       		.byte	0x53
 8226 12ec 1A000000 		.4byte	.LVL312
 8227 12f0 28000000 		.4byte	.LFE33
 8228 12f4 0100     		.2byte	0x1
 8229 12f6 53       		.byte	0x53
 8230 12f7 00000000 		.4byte	0
 8231 12fb 00000000 		.4byte	0
 8232              	.LLST102:
 8233 12ff 00000000 		.4byte	.LVL314
 8234 1303 16000000 		.4byte	.LVL316
 8235 1307 0100     		.2byte	0x1
 8236 1309 50       		.byte	0x50
 8237 130a 16000000 		.4byte	.LVL316
 8238 130e 18000000 		.4byte	.LVL317
 8239 1312 0400     		.2byte	0x4
 8240 1314 F3       		.byte	0xf3
 8241 1315 01       		.uleb128 0x1
 8242 1316 50       		.byte	0x50
 8243 1317 9F       		.byte	0x9f
 8244 1318 18000000 		.4byte	.LVL317
 8245 131c 20000000 		.4byte	.LVL319
 8246 1320 0100     		.2byte	0x1
 8247 1322 50       		.byte	0x50
 8248 1323 20000000 		.4byte	.LVL319
 8249 1327 28000000 		.4byte	.LFE34
 8250 132b 0400     		.2byte	0x4
 8251 132d F3       		.byte	0xf3
 8252 132e 01       		.uleb128 0x1
 8253 132f 50       		.byte	0x50
 8254 1330 9F       		.byte	0x9f
 8255 1331 00000000 		.4byte	0
 8256 1335 00000000 		.4byte	0
 8257              	.LLST103:
 8258 1339 00000000 		.4byte	.LVL314
 8259 133d 04000000 		.4byte	.LVL315
 8260 1341 0200     		.2byte	0x2
 8261 1343 30       		.byte	0x30
 8262 1344 9F       		.byte	0x9f
 8263 1345 04000000 		.4byte	.LVL315
 8264 1349 28000000 		.4byte	.LFE34
 8265 134d 0100     		.2byte	0x1
 8266 134f 53       		.byte	0x53
 8267 1350 00000000 		.4byte	0
 8268 1354 00000000 		.4byte	0
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 205


 8269              	.LLST104:
 8270 1358 00000000 		.4byte	.LVL314
 8271 135c 16000000 		.4byte	.LVL316
 8272 1360 0200     		.2byte	0x2
 8273 1362 30       		.byte	0x30
 8274 1363 9F       		.byte	0x9f
 8275 1364 16000000 		.4byte	.LVL316
 8276 1368 18000000 		.4byte	.LVL317
 8277 136c 0100     		.2byte	0x1
 8278 136e 50       		.byte	0x50
 8279 136f 18000000 		.4byte	.LVL317
 8280 1373 20000000 		.4byte	.LVL319
 8281 1377 0200     		.2byte	0x2
 8282 1379 30       		.byte	0x30
 8283 137a 9F       		.byte	0x9f
 8284 137b 20000000 		.4byte	.LVL319
 8285 137f 28000000 		.4byte	.LFE34
 8286 1383 0100     		.2byte	0x1
 8287 1385 50       		.byte	0x50
 8288 1386 00000000 		.4byte	0
 8289 138a 00000000 		.4byte	0
 8290              	.LLST105:
 8291 138e 00000000 		.4byte	.LVL320
 8292 1392 04000000 		.4byte	.LVL321
 8293 1396 0200     		.2byte	0x2
 8294 1398 30       		.byte	0x30
 8295 1399 9F       		.byte	0x9f
 8296 139a 04000000 		.4byte	.LVL321
 8297 139e 1C000000 		.4byte	.LVL322
 8298 13a2 0100     		.2byte	0x1
 8299 13a4 53       		.byte	0x53
 8300 13a5 20000000 		.4byte	.LVL323
 8301 13a9 2C000000 		.4byte	.LFE35
 8302 13ad 0100     		.2byte	0x1
 8303 13af 53       		.byte	0x53
 8304 13b0 00000000 		.4byte	0
 8305 13b4 00000000 		.4byte	0
 8306              	.LLST106:
 8307 13b8 00000000 		.4byte	.LVL325
 8308 13bc 07000000 		.4byte	.LVL327-1
 8309 13c0 0100     		.2byte	0x1
 8310 13c2 50       		.byte	0x50
 8311 13c3 07000000 		.4byte	.LVL327-1
 8312 13c7 10000000 		.4byte	.LFE24
 8313 13cb 0100     		.2byte	0x1
 8314 13cd 54       		.byte	0x54
 8315 13ce 00000000 		.4byte	0
 8316 13d2 00000000 		.4byte	0
 8317              	.LLST107:
 8318 13d6 04000000 		.4byte	.LVL326
 8319 13da 07000000 		.4byte	.LVL327-1
 8320 13de 0100     		.2byte	0x1
 8321 13e0 50       		.byte	0x50
 8322 13e1 07000000 		.4byte	.LVL327-1
 8323 13e5 10000000 		.4byte	.LFE24
 8324 13e9 0100     		.2byte	0x1
 8325 13eb 54       		.byte	0x54
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 206


 8326 13ec 00000000 		.4byte	0
 8327 13f0 00000000 		.4byte	0
 8328              	.LLST108:
 8329 13f4 00000000 		.4byte	.LVL329
 8330 13f8 0B000000 		.4byte	.LVL331-1
 8331 13fc 0100     		.2byte	0x1
 8332 13fe 50       		.byte	0x50
 8333 13ff 0B000000 		.4byte	.LVL331-1
 8334 1403 4C000000 		.4byte	.LFE36
 8335 1407 0100     		.2byte	0x1
 8336 1409 54       		.byte	0x54
 8337 140a 00000000 		.4byte	0
 8338 140e 00000000 		.4byte	0
 8339              	.LLST109:
 8340 1412 00000000 		.4byte	.LVL329
 8341 1416 0B000000 		.4byte	.LVL331-1
 8342 141a 0100     		.2byte	0x1
 8343 141c 51       		.byte	0x51
 8344 141d 0B000000 		.4byte	.LVL331-1
 8345 1421 4C000000 		.4byte	.LFE36
 8346 1425 0100     		.2byte	0x1
 8347 1427 55       		.byte	0x55
 8348 1428 00000000 		.4byte	0
 8349 142c 00000000 		.4byte	0
 8350              	.LLST110:
 8351 1430 00000000 		.4byte	.LVL329
 8352 1434 0B000000 		.4byte	.LVL331-1
 8353 1438 0100     		.2byte	0x1
 8354 143a 52       		.byte	0x52
 8355 143b 0B000000 		.4byte	.LVL331-1
 8356 143f 4C000000 		.4byte	.LFE36
 8357 1443 0100     		.2byte	0x1
 8358 1445 56       		.byte	0x56
 8359 1446 00000000 		.4byte	0
 8360 144a 00000000 		.4byte	0
 8361              	.LLST111:
 8362 144e 08000000 		.4byte	.LVL330
 8363 1452 0B000000 		.4byte	.LVL331-1
 8364 1456 0100     		.2byte	0x1
 8365 1458 50       		.byte	0x50
 8366 1459 0B000000 		.4byte	.LVL331-1
 8367 145d 4C000000 		.4byte	.LFE36
 8368 1461 0100     		.2byte	0x1
 8369 1463 54       		.byte	0x54
 8370 1464 00000000 		.4byte	0
 8371 1468 00000000 		.4byte	0
 8372              		.section	.debug_aranges,"",%progbits
 8373 0000 14010000 		.4byte	0x114
 8374 0004 0200     		.2byte	0x2
 8375 0006 00000000 		.4byte	.Ldebug_info0
 8376 000a 04       		.byte	0x4
 8377 000b 00       		.byte	0
 8378 000c 0000     		.2byte	0
 8379 000e 0000     		.2byte	0
 8380 0010 00000000 		.4byte	.LFB25
 8381 0014 12000000 		.4byte	.LFE25-.LFB25
 8382 0018 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 207


 8383 001c 1E000000 		.4byte	.LFE31-.LFB31
 8384 0020 00000000 		.4byte	.LFB29
 8385 0024 1A000000 		.4byte	.LFE29-.LFB29
 8386 0028 00000000 		.4byte	.LFB26
 8387 002c 76000000 		.4byte	.LFE26-.LFB26
 8388 0030 00000000 		.4byte	.LFB27
 8389 0034 24000000 		.4byte	.LFE27-.LFB27
 8390 0038 00000000 		.4byte	.LFB28
 8391 003c 66000000 		.4byte	.LFE28-.LFB28
 8392 0040 00000000 		.4byte	.LFB5
 8393 0044 6C000000 		.4byte	.LFE5-.LFB5
 8394 0048 00000000 		.4byte	.LFB7
 8395 004c 1C000000 		.4byte	.LFE7-.LFB7
 8396 0050 00000000 		.4byte	.LFB6
 8397 0054 34000000 		.4byte	.LFE6-.LFB6
 8398 0058 00000000 		.4byte	.LFB12
 8399 005c 16000000 		.4byte	.LFE12-.LFB12
 8400 0060 00000000 		.4byte	.LFB13
 8401 0064 08010000 		.4byte	.LFE13-.LFB13
 8402 0068 00000000 		.4byte	.LFB8
 8403 006c 18000000 		.4byte	.LFE8-.LFB8
 8404 0070 00000000 		.4byte	.LFB9
 8405 0074 16000000 		.4byte	.LFE9-.LFB9
 8406 0078 00000000 		.4byte	.LFB10
 8407 007c 2C000000 		.4byte	.LFE10-.LFB10
 8408 0080 00000000 		.4byte	.LFB14
 8409 0084 6E000000 		.4byte	.LFE14-.LFB14
 8410 0088 00000000 		.4byte	.LFB15
 8411 008c 64000000 		.4byte	.LFE15-.LFB15
 8412 0090 00000000 		.4byte	.LFB16
 8413 0094 F8000000 		.4byte	.LFE16-.LFB16
 8414 0098 00000000 		.4byte	.LFB17
 8415 009c 28010000 		.4byte	.LFE17-.LFB17
 8416 00a0 00000000 		.4byte	.LFB11
 8417 00a4 30000000 		.4byte	.LFE11-.LFB11
 8418 00a8 00000000 		.4byte	.LFB18
 8419 00ac F8000000 		.4byte	.LFE18-.LFB18
 8420 00b0 00000000 		.4byte	.LFB19
 8421 00b4 72000000 		.4byte	.LFE19-.LFB19
 8422 00b8 00000000 		.4byte	.LFB20
 8423 00bc 30000000 		.4byte	.LFE20-.LFB20
 8424 00c0 00000000 		.4byte	.LFB21
 8425 00c4 12000000 		.4byte	.LFE21-.LFB21
 8426 00c8 00000000 		.4byte	.LFB22
 8427 00cc 16000000 		.4byte	.LFE22-.LFB22
 8428 00d0 00000000 		.4byte	.LFB23
 8429 00d4 04000000 		.4byte	.LFE23-.LFB23
 8430 00d8 00000000 		.4byte	.LFB30
 8431 00dc 0C000000 		.4byte	.LFE30-.LFB30
 8432 00e0 00000000 		.4byte	.LFB32
 8433 00e4 10000000 		.4byte	.LFE32-.LFB32
 8434 00e8 00000000 		.4byte	.LFB33
 8435 00ec 28000000 		.4byte	.LFE33-.LFB33
 8436 00f0 00000000 		.4byte	.LFB34
 8437 00f4 28000000 		.4byte	.LFE34-.LFB34
 8438 00f8 00000000 		.4byte	.LFB35
 8439 00fc 2C000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 208


 8440 0100 00000000 		.4byte	.LFB24
 8441 0104 10000000 		.4byte	.LFE24-.LFB24
 8442 0108 00000000 		.4byte	.LFB36
 8443 010c 4C000000 		.4byte	.LFE36-.LFB36
 8444 0110 00000000 		.4byte	0
 8445 0114 00000000 		.4byte	0
 8446              		.section	.debug_ranges,"",%progbits
 8447              	.Ldebug_ranges0:
 8448 0000 26000000 		.4byte	.LBB27
 8449 0004 5A000000 		.4byte	.LBE27
 8450 0008 5E000000 		.4byte	.LBB28
 8451 000c 68000000 		.4byte	.LBE28
 8452 0010 00000000 		.4byte	0
 8453 0014 00000000 		.4byte	0
 8454 0018 1E000000 		.4byte	.LBB34
 8455 001c 50000000 		.4byte	.LBE34
 8456 0020 54000000 		.4byte	.LBB35
 8457 0024 5E000000 		.4byte	.LBE35
 8458 0028 00000000 		.4byte	0
 8459 002c 00000000 		.4byte	0
 8460 0030 20000000 		.4byte	.LBB45
 8461 0034 5C000000 		.4byte	.LBE45
 8462 0038 60000000 		.4byte	.LBB46
 8463 003c 6A000000 		.4byte	.LBE46
 8464 0040 00000000 		.4byte	0
 8465 0044 00000000 		.4byte	0
 8466 0048 00000000 		.4byte	.LFB25
 8467 004c 12000000 		.4byte	.LFE25
 8468 0050 00000000 		.4byte	.LFB31
 8469 0054 1E000000 		.4byte	.LFE31
 8470 0058 00000000 		.4byte	.LFB29
 8471 005c 1A000000 		.4byte	.LFE29
 8472 0060 00000000 		.4byte	.LFB26
 8473 0064 76000000 		.4byte	.LFE26
 8474 0068 00000000 		.4byte	.LFB27
 8475 006c 24000000 		.4byte	.LFE27
 8476 0070 00000000 		.4byte	.LFB28
 8477 0074 66000000 		.4byte	.LFE28
 8478 0078 00000000 		.4byte	.LFB5
 8479 007c 6C000000 		.4byte	.LFE5
 8480 0080 00000000 		.4byte	.LFB7
 8481 0084 1C000000 		.4byte	.LFE7
 8482 0088 00000000 		.4byte	.LFB6
 8483 008c 34000000 		.4byte	.LFE6
 8484 0090 00000000 		.4byte	.LFB12
 8485 0094 16000000 		.4byte	.LFE12
 8486 0098 00000000 		.4byte	.LFB13
 8487 009c 08010000 		.4byte	.LFE13
 8488 00a0 00000000 		.4byte	.LFB8
 8489 00a4 18000000 		.4byte	.LFE8
 8490 00a8 00000000 		.4byte	.LFB9
 8491 00ac 16000000 		.4byte	.LFE9
 8492 00b0 00000000 		.4byte	.LFB10
 8493 00b4 2C000000 		.4byte	.LFE10
 8494 00b8 00000000 		.4byte	.LFB14
 8495 00bc 6E000000 		.4byte	.LFE14
 8496 00c0 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 209


 8497 00c4 64000000 		.4byte	.LFE15
 8498 00c8 00000000 		.4byte	.LFB16
 8499 00cc F8000000 		.4byte	.LFE16
 8500 00d0 00000000 		.4byte	.LFB17
 8501 00d4 28010000 		.4byte	.LFE17
 8502 00d8 00000000 		.4byte	.LFB11
 8503 00dc 30000000 		.4byte	.LFE11
 8504 00e0 00000000 		.4byte	.LFB18
 8505 00e4 F8000000 		.4byte	.LFE18
 8506 00e8 00000000 		.4byte	.LFB19
 8507 00ec 72000000 		.4byte	.LFE19
 8508 00f0 00000000 		.4byte	.LFB20
 8509 00f4 30000000 		.4byte	.LFE20
 8510 00f8 00000000 		.4byte	.LFB21
 8511 00fc 12000000 		.4byte	.LFE21
 8512 0100 00000000 		.4byte	.LFB22
 8513 0104 16000000 		.4byte	.LFE22
 8514 0108 00000000 		.4byte	.LFB23
 8515 010c 04000000 		.4byte	.LFE23
 8516 0110 00000000 		.4byte	.LFB30
 8517 0114 0C000000 		.4byte	.LFE30
 8518 0118 00000000 		.4byte	.LFB32
 8519 011c 10000000 		.4byte	.LFE32
 8520 0120 00000000 		.4byte	.LFB33
 8521 0124 28000000 		.4byte	.LFE33
 8522 0128 00000000 		.4byte	.LFB34
 8523 012c 28000000 		.4byte	.LFE34
 8524 0130 00000000 		.4byte	.LFB35
 8525 0134 2C000000 		.4byte	.LFE35
 8526 0138 00000000 		.4byte	.LFB24
 8527 013c 10000000 		.4byte	.LFE24
 8528 0140 00000000 		.4byte	.LFB36
 8529 0144 4C000000 		.4byte	.LFE36
 8530 0148 00000000 		.4byte	0
 8531 014c 00000000 		.4byte	0
 8532              		.section	.debug_line,"",%progbits
 8533              	.Ldebug_line0:
 8534 0000 A0060000 		.section	.debug_str,"MS",%progbits,1
 8534      0200BD01 
 8534      00000201 
 8534      FB0E0D00 
 8534      01010101 
 8535              	.LASF29:
 8536 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 8536      6D626572 
 8536      4F664974 
 8536      656D7300 
 8537              	.LASF136:
 8538 0010 76506F72 		.ascii	"vPortExitCritical\000"
 8538      74457869 
 8538      74437269 
 8538      74696361 
 8538      6C00
 8539              	.LASF56:
 8540 0022 53656D61 		.ascii	"SemaphoreData\000"
 8540      70686F72 
 8540      65446174 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 210


 8540      6100
 8541              	.LASF156:
 8542 0030 74736B54 		.ascii	"tskTaskControlBlock\000"
 8542      61736B43 
 8542      6F6E7472 
 8542      6F6C426C 
 8542      6F636B00 
 8543              	.LASF59:
 8544 0044 53656D61 		.ascii	"SemaphoreData_t\000"
 8544      70686F72 
 8544      65446174 
 8544      615F7400 
 8545              	.LASF112:
 8546 0054 78517565 		.ascii	"xQueueReceive\000"
 8546      75655265 
 8546      63656976 
 8546      6500
 8547              	.LASF120:
 8548 0062 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8548      75655265 
 8548      63656976 
 8548      6546726F 
 8548      6D495352 
 8549              	.LASF46:
 8550 0077 78546173 		.ascii	"xTasksWaitingToReceive\000"
 8550      6B735761 
 8550      6974696E 
 8550      67546F52 
 8550      65636569 
 8551              	.LASF109:
 8552 008e 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 8552      67686572 
 8552      5072696F 
 8552      72697479 
 8552      5461736B 
 8553              	.LASF107:
 8554 00a8 70784D75 		.ascii	"pxMutex\000"
 8554      74657800 
 8555              	.LASF113:
 8556 00b0 78517565 		.ascii	"xQueueSemaphoreTake\000"
 8556      75655365 
 8556      6D617068 
 8556      6F726554 
 8556      616B6500 
 8557              	.LASF0:
 8558 00c4 756E7369 		.ascii	"unsigned int\000"
 8558      676E6564 
 8558      20696E74 
 8558      00
 8559              	.LASF30:
 8560 00d1 7078496E 		.ascii	"pxIndex\000"
 8560      64657800 
 8561              	.LASF37:
 8562 00d9 7854494D 		.ascii	"xTIME_OUT\000"
 8562      455F4F55 
 8562      5400
 8563              	.LASF88:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 211


 8564 00e3 70784E65 		.ascii	"pxNewQueue\000"
 8564      77517565 
 8564      756500
 8565              	.LASF27:
 8566 00ee 784C4953 		.ascii	"xLIST_ITEM\000"
 8566      545F4954 
 8566      454D00
 8567              	.LASF64:
 8568 00f9 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 8568      455F5245 
 8568      47495354 
 8568      52595F49 
 8568      54454D00 
 8569              	.LASF134:
 8570 010d 78576169 		.ascii	"xWaitIndefinitely\000"
 8570      74496E64 
 8570      6566696E 
 8570      6974656C 
 8570      7900
 8571              	.LASF155:
 8572 011f 443A5C4E 		.ascii	"D:\\Notes 202324\\ELECH410\\Labs\\Lab3\\ex7_priorit"
 8572      6F746573 
 8572      20323032 
 8572      3332345C 
 8572      454C4543 
 8573 014d 6965735C 		.ascii	"ies\\priorities.cydsn\000"
 8573      7072696F 
 8573      72697469 
 8573      65732E63 
 8573      7964736E 
 8574              	.LASF45:
 8575 0162 78546173 		.ascii	"xTasksWaitingToSend\000"
 8575      6B735761 
 8575      6974696E 
 8575      67546F53 
 8575      656E6400 
 8576              	.LASF124:
 8577 0176 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 8577      65756553 
 8577      70616365 
 8577      73417661 
 8577      696C6162 
 8578              	.LASF51:
 8579 018d 6354784C 		.ascii	"cTxLock\000"
 8579      6F636B00 
 8580              	.LASF38:
 8581 0195 784F7665 		.ascii	"xOverflowCount\000"
 8581      72666C6F 
 8581      77436F75 
 8581      6E7400
 8582              	.LASF135:
 8583 01a4 76506F72 		.ascii	"vPortEnterCritical\000"
 8583      74456E74 
 8583      65724372 
 8583      69746963 
 8583      616C00
 8584              	.LASF63:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 212


 8585 01b7 51756575 		.ascii	"Queue_t\000"
 8585      655F7400 
 8586              	.LASF97:
 8587 01bf 78436F70 		.ascii	"xCopyPosition\000"
 8587      79506F73 
 8587      6974696F 
 8587      6E00
 8588              	.LASF123:
 8589 01cd 75785265 		.ascii	"uxReturn\000"
 8589      7475726E 
 8589      00
 8590              	.LASF68:
 8591 01d6 51756575 		.ascii	"QueueRegistryItem_t\000"
 8591      65526567 
 8591      69737472 
 8591      79497465 
 8591      6D5F7400 
 8592              	.LASF132:
 8593 01ea 76517565 		.ascii	"vQueueDelete\000"
 8593      75654465 
 8593      6C657465 
 8593      00
 8594              	.LASF54:
 8595 01f7 70635265 		.ascii	"pcReadFrom\000"
 8595      61644672 
 8595      6F6D00
 8596              	.LASF131:
 8597 0202 76517565 		.ascii	"vQueueUnregisterQueue\000"
 8597      7565556E 
 8597      72656769 
 8597      73746572 
 8597      51756575 
 8598              	.LASF110:
 8599 0218 75785361 		.ascii	"uxSavedInterruptStatus\000"
 8599      76656449 
 8599      6E746572 
 8599      72757074 
 8599      53746174 
 8600              	.LASF84:
 8601 022f 70727649 		.ascii	"prvInitialiseNewQueue\000"
 8601      6E697469 
 8601      616C6973 
 8601      654E6577 
 8601      51756575 
 8602              	.LASF18:
 8603 0245 75696E74 		.ascii	"uint32_t\000"
 8603      33325F74 
 8603      00
 8604              	.LASF16:
 8605 024e 696E7438 		.ascii	"int8_t\000"
 8605      5F7400
 8606              	.LASF104:
 8607 0255 75784D75 		.ascii	"uxMutexSize\000"
 8607      74657853 
 8607      697A6500 
 8608              	.LASF99:
 8609 0261 78596965 		.ascii	"xYieldRequired\000"
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 213


 8609      6C645265 
 8609      71756972 
 8609      656400
 8610              	.LASF69:
 8611 0270 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 8611      6967696E 
 8611      616C4241 
 8611      53455052 
 8611      4900
 8612              	.LASF60:
 8613 0282 78517565 		.ascii	"xQueue\000"
 8613      756500
 8614              	.LASF42:
 8615 0289 51756575 		.ascii	"QueueDefinition\000"
 8615      65446566 
 8615      696E6974 
 8615      696F6E00 
 8616              	.LASF13:
 8617 0299 6C6F6E67 		.ascii	"long long unsigned int\000"
 8617      206C6F6E 
 8617      6720756E 
 8617      7369676E 
 8617      65642069 
 8618              	.LASF76:
 8619 02b0 70727649 		.ascii	"prvIsQueueEmpty\000"
 8619      73517565 
 8619      7565456D 
 8619      70747900 
 8620              	.LASF80:
 8621 02c0 70764275 		.ascii	"pvBuffer\000"
 8621      66666572 
 8621      00
 8622              	.LASF71:
 8623 02c9 70727647 		.ascii	"prvGetDisinheritPriorityAfterTimeout\000"
 8623      65744469 
 8623      73696E68 
 8623      65726974 
 8623      5072696F 
 8624              	.LASF24:
 8625 02ee 70785072 		.ascii	"pxPrevious\000"
 8625      6576696F 
 8625      757300
 8626              	.LASF47:
 8627 02f9 75784D65 		.ascii	"uxMessagesWaiting\000"
 8627      73736167 
 8627      65735761 
 8627      6974696E 
 8627      6700
 8628              	.LASF61:
 8629 030b 7853656D 		.ascii	"xSemaphore\000"
 8629      6170686F 
 8629      726500
 8630              	.LASF141:
 8631 0316 7076506F 		.ascii	"pvPortMalloc\000"
 8631      72744D61 
 8631      6C6C6F63 
 8631      00
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 214


 8632              	.LASF143:
 8633 0323 76546173 		.ascii	"vTaskSuspendAll\000"
 8633      6B537573 
 8633      70656E64 
 8633      416C6C00 
 8634              	.LASF118:
 8635 0333 78517565 		.ascii	"xQueuePeek\000"
 8635      75655065 
 8635      656B00
 8636              	.LASF153:
 8637 033e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8637      43313120 
 8637      352E342E 
 8637      31203230 
 8637      31363036 
 8638 0371 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8638      20726576 
 8638      6973696F 
 8638      6E203233 
 8638      37373135 
 8639 03a4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 8639      66756E63 
 8639      74696F6E 
 8639      2D736563 
 8639      74696F6E 
 8640              	.LASF98:
 8641 03cc 78456E74 		.ascii	"xEntryTimeSet\000"
 8641      72795469 
 8641      6D655365 
 8641      7400
 8642              	.LASF3:
 8643 03da 73697A65 		.ascii	"size_t\000"
 8643      5F7400
 8644              	.LASF100:
 8645 03e1 7854696D 		.ascii	"xTimeOut\000"
 8645      654F7574 
 8645      00
 8646              	.LASF66:
 8647 03ea 7848616E 		.ascii	"xHandle\000"
 8647      646C6500 
 8648              	.LASF65:
 8649 03f2 70635175 		.ascii	"pcQueueName\000"
 8649      6575654E 
 8649      616D6500 
 8650              	.LASF33:
 8651 03fe 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8651      495F4C49 
 8651      53545F49 
 8651      54454D00 
 8652              	.LASF28:
 8653 040e 784C4953 		.ascii	"xLIST\000"
 8653      5400
 8654              	.LASF108:
 8655 0414 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8655      75654765 
 8655      6E657269 
 8655      6353656E 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 215


 8655      6446726F 
 8656              	.LASF158:
 8657 042d 76506F72 		.ascii	"vPortSetBASEPRI\000"
 8657      74536574 
 8657      42415345 
 8657      50524900 
 8658              	.LASF77:
 8659 043d 70727643 		.ascii	"prvCopyDataToQueue\000"
 8659      6F707944 
 8659      61746154 
 8659      6F517565 
 8659      756500
 8660              	.LASF95:
 8661 0450 78517565 		.ascii	"xQueueGenericSend\000"
 8661      75654765 
 8661      6E657269 
 8661      6353656E 
 8661      6400
 8662              	.LASF145:
 8663 0462 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 8663      6B506C61 
 8663      63654F6E 
 8663      4576656E 
 8663      744C6973 
 8664              	.LASF148:
 8665 0478 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 8665      736B496E 
 8665      6372656D 
 8665      656E744D 
 8665      75746578 
 8666              	.LASF49:
 8667 0496 75784974 		.ascii	"uxItemSize\000"
 8667      656D5369 
 8667      7A6500
 8668              	.LASF94:
 8669 04a1 7578496E 		.ascii	"uxInitialCount\000"
 8669      69746961 
 8669      6C436F75 
 8669      6E7400
 8670              	.LASF137:
 8671 04b0 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 8671      6B507269 
 8671      6F726974 
 8671      79446973 
 8671      696E6865 
 8672              	.LASF103:
 8673 04c8 75784D75 		.ascii	"uxMutexLength\000"
 8673      7465784C 
 8673      656E6774 
 8673      6800
 8674              	.LASF15:
 8675 04d6 63686172 		.ascii	"char\000"
 8675      00
 8676              	.LASF32:
 8677 04db 4C697374 		.ascii	"ListItem_t\000"
 8677      4974656D 
 8677      5F7400
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 216


 8678              	.LASF72:
 8679 04e6 70727649 		.ascii	"prvIsQueueFull\000"
 8679      73517565 
 8679      75654675 
 8679      6C6C00
 8680              	.LASF52:
 8681 04f5 51756575 		.ascii	"QueuePointers\000"
 8681      65506F69 
 8681      6E746572 
 8681      7300
 8682              	.LASF70:
 8683 0503 756C4E65 		.ascii	"ulNewBASEPRI\000"
 8683      77424153 
 8683      45505249 
 8683      00
 8684              	.LASF20:
 8685 0510 55426173 		.ascii	"UBaseType_t\000"
 8685      65547970 
 8685      655F7400 
 8686              	.LASF111:
 8687 051c 78517565 		.ascii	"xQueueGiveFromISR\000"
 8687      75654769 
 8687      76654672 
 8687      6F6D4953 
 8687      5200
 8688              	.LASF160:
 8689 052e 78517565 		.ascii	"xQueueRegistry\000"
 8689      75655265 
 8689      67697374 
 8689      727900
 8690              	.LASF41:
 8691 053d 51756575 		.ascii	"QueueHandle_t\000"
 8691      6548616E 
 8691      646C655F 
 8691      7400
 8692              	.LASF31:
 8693 054b 784C6973 		.ascii	"xListEnd\000"
 8693      74456E64 
 8693      00
 8694              	.LASF125:
 8695 0554 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 8695      6575654D 
 8695      65737361 
 8695      67657357 
 8695      61697469 
 8696              	.LASF34:
 8697 0572 4D696E69 		.ascii	"MiniListItem_t\000"
 8697      4C697374 
 8697      4974656D 
 8697      5F7400
 8698              	.LASF152:
 8699 0581 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 8699      6B506C61 
 8699      63654F6E 
 8699      4576656E 
 8699      744C6973 
 8700              	.LASF17:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 217


 8701 05a1 75696E74 		.ascii	"uint8_t\000"
 8701      385F7400 
 8702              	.LASF67:
 8703 05a9 78517565 		.ascii	"xQueueRegistryItem\000"
 8703      75655265 
 8703      67697374 
 8703      72794974 
 8703      656D00
 8704              	.LASF90:
 8705 05bc 78517565 		.ascii	"xQueueGenericCreate\000"
 8705      75654765 
 8705      6E657269 
 8705      63437265 
 8705      61746500 
 8706              	.LASF102:
 8707 05d0 78517565 		.ascii	"xQueueCreateMutex\000"
 8707      75654372 
 8707      65617465 
 8707      4D757465 
 8707      7800
 8708              	.LASF157:
 8709 05e2 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 8709      72745261 
 8709      69736542 
 8709      41534550 
 8709      524900
 8710              	.LASF1:
 8711 05f5 6C6F6E67 		.ascii	"long long int\000"
 8711      206C6F6E 
 8711      6720696E 
 8711      7400
 8712              	.LASF101:
 8713 0603 70727649 		.ascii	"prvInitialiseMutex\000"
 8713      6E697469 
 8713      616C6973 
 8713      654D7574 
 8713      657800
 8714              	.LASF19:
 8715 0616 42617365 		.ascii	"BaseType_t\000"
 8715      54797065 
 8715      5F7400
 8716              	.LASF86:
 8717 0621 70756351 		.ascii	"pucQueueStorage\000"
 8717      75657565 
 8717      53746F72 
 8717      61676500 
 8718              	.LASF106:
 8719 0631 784D7574 		.ascii	"xMutex\000"
 8719      657800
 8720              	.LASF39:
 8721 0638 7854696D 		.ascii	"xTimeOnEntering\000"
 8721      654F6E45 
 8721      6E746572 
 8721      696E6700 
 8722              	.LASF130:
 8723 0648 76517565 		.ascii	"vQueueAddToRegistry\000"
 8723      75654164 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 218


 8723      64546F52 
 8723      65676973 
 8723      74727900 
 8724              	.LASF23:
 8725 065c 70784E65 		.ascii	"pxNext\000"
 8725      787400
 8726              	.LASF83:
 8727 0663 784E6577 		.ascii	"xNewQueue\000"
 8727      51756575 
 8727      6500
 8728              	.LASF154:
 8729 066d 46726565 		.ascii	"FreeRTOS\\src\\queue.c\000"
 8729      52544F53 
 8729      5C737263 
 8729      5C717565 
 8729      75652E63 
 8730              	.LASF93:
 8731 0682 75784D61 		.ascii	"uxMaxCount\000"
 8731      78436F75 
 8731      6E7400
 8732              	.LASF40:
 8733 068d 54696D65 		.ascii	"TimeOut_t\000"
 8733      4F75745F 
 8733      7400
 8734              	.LASF142:
 8735 0697 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 8735      6B496E74 
 8735      65726E61 
 8735      6C536574 
 8735      54696D65 
 8736              	.LASF119:
 8737 06b4 70634F72 		.ascii	"pcOriginalReadPosition\000"
 8737      6967696E 
 8737      616C5265 
 8737      6164506F 
 8737      73697469 
 8738              	.LASF36:
 8739 06cb 5461736B 		.ascii	"TaskHandle_t\000"
 8739      48616E64 
 8739      6C655F74 
 8739      00
 8740              	.LASF159:
 8741 06d8 756C4E65 		.ascii	"ulNewMaskValue\000"
 8741      774D6173 
 8741      6B56616C 
 8741      756500
 8742              	.LASF74:
 8743 06e7 75784869 		.ascii	"uxHighestPriorityOfWaitingTasks\000"
 8743      67686573 
 8743      74507269 
 8743      6F726974 
 8743      794F6657 
 8744              	.LASF87:
 8745 0707 75635175 		.ascii	"ucQueueType\000"
 8745      65756554 
 8745      79706500 
 8746              	.LASF35:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 219


 8747 0713 4C697374 		.ascii	"List_t\000"
 8747      5F7400
 8748              	.LASF115:
 8749 071a 75785365 		.ascii	"uxSemaphoreCount\000"
 8749      6D617068 
 8749      6F726543 
 8749      6F756E74 
 8749      00
 8750              	.LASF44:
 8751 072b 70635772 		.ascii	"pcWriteTo\000"
 8751      69746554 
 8751      6F00
 8752              	.LASF21:
 8753 0735 5469636B 		.ascii	"TickType_t\000"
 8753      54797065 
 8753      5F7400
 8754              	.LASF4:
 8755 0740 5F5F696E 		.ascii	"__int8_t\000"
 8755      74385F74 
 8755      00
 8756              	.LASF85:
 8757 0749 75785175 		.ascii	"uxQueueLength\000"
 8757      6575654C 
 8757      656E6774 
 8757      6800
 8758              	.LASF2:
 8759 0757 6C6F6E67 		.ascii	"long double\000"
 8759      20646F75 
 8759      626C6500 
 8760              	.LASF114:
 8761 0763 78496E68 		.ascii	"xInheritanceOccurred\000"
 8761      65726974 
 8761      616E6365 
 8761      4F636375 
 8761      72726564 
 8762              	.LASF117:
 8763 0778 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 8763      75655461 
 8763      6B654D75 
 8763      74657852 
 8763      65637572 
 8764              	.LASF26:
 8765 0791 7076436F 		.ascii	"pvContainer\000"
 8765      6E746169 
 8765      6E657200 
 8766              	.LASF128:
 8767 079d 70635175 		.ascii	"pcQueueGetName\000"
 8767      65756547 
 8767      65744E61 
 8767      6D6500
 8768              	.LASF55:
 8769 07ac 51756575 		.ascii	"QueuePointers_t\000"
 8769      65506F69 
 8769      6E746572 
 8769      735F7400 
 8770              	.LASF129:
 8771 07bc 70635265 		.ascii	"pcReturn\000"
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 220


 8771      7475726E 
 8771      00
 8772              	.LASF48:
 8773 07c5 75784C65 		.ascii	"uxLength\000"
 8773      6E677468 
 8773      00
 8774              	.LASF133:
 8775 07ce 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 8775      75655761 
 8775      6974466F 
 8775      724D6573 
 8775      73616765 
 8776              	.LASF8:
 8777 07ed 73686F72 		.ascii	"short int\000"
 8777      7420696E 
 8777      7400
 8778              	.LASF22:
 8779 07f7 78497465 		.ascii	"xItemValue\000"
 8779      6D56616C 
 8779      756500
 8780              	.LASF10:
 8781 0802 6C6F6E67 		.ascii	"long int\000"
 8781      20696E74 
 8781      00
 8782              	.LASF91:
 8783 080b 78517565 		.ascii	"xQueueSizeInBytes\000"
 8783      75655369 
 8783      7A65496E 
 8783      42797465 
 8783      7300
 8784              	.LASF146:
 8785 081d 78546173 		.ascii	"xTaskResumeAll\000"
 8785      6B526573 
 8785      756D6541 
 8785      6C6C00
 8786              	.LASF78:
 8787 082c 70764974 		.ascii	"pvItemToQueue\000"
 8787      656D546F 
 8787      51756575 
 8787      6500
 8788              	.LASF144:
 8789 083a 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 8789      6B436865 
 8789      636B466F 
 8789      7254696D 
 8789      654F7574 
 8790              	.LASF151:
 8791 084f 76506F72 		.ascii	"vPortFree\000"
 8791      74467265 
 8791      6500
 8792              	.LASF127:
 8793 0859 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8793      75654973 
 8793      51756575 
 8793      6546756C 
 8793      6C46726F 
 8794              	.LASF122:
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 221


 8795 0872 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 8795      6575654D 
 8795      65737361 
 8795      67657357 
 8795      61697469 
 8796              	.LASF53:
 8797 0889 70635461 		.ascii	"pcTail\000"
 8797      696C00
 8798              	.LASF6:
 8799 0890 5F5F7569 		.ascii	"__uint8_t\000"
 8799      6E74385F 
 8799      7400
 8800              	.LASF73:
 8801 089a 70785175 		.ascii	"pxQueue\000"
 8801      65756500 
 8802              	.LASF75:
 8803 08a2 78526574 		.ascii	"xReturn\000"
 8803      75726E00 
 8804              	.LASF14:
 8805 08aa 73697A65 		.ascii	"sizetype\000"
 8805      74797065 
 8805      00
 8806              	.LASF139:
 8807 08b3 76546173 		.ascii	"vTaskMissedYield\000"
 8807      6B4D6973 
 8807      73656459 
 8807      69656C64 
 8807      00
 8808              	.LASF12:
 8809 08c4 6C6F6E67 		.ascii	"long unsigned int\000"
 8809      20756E73 
 8809      69676E65 
 8809      6420696E 
 8809      7400
 8810              	.LASF150:
 8811 08d6 78546173 		.ascii	"xTaskPriorityInherit\000"
 8811      6B507269 
 8811      6F726974 
 8811      79496E68 
 8811      65726974 
 8812              	.LASF58:
 8813 08eb 75785265 		.ascii	"uxRecursiveCallCount\000"
 8813      63757273 
 8813      69766543 
 8813      616C6C43 
 8813      6F756E74 
 8814              	.LASF121:
 8815 0900 78517565 		.ascii	"xQueuePeekFromISR\000"
 8815      75655065 
 8815      656B4672 
 8815      6F6D4953 
 8815      5200
 8816              	.LASF116:
 8817 0912 75784869 		.ascii	"uxHighestWaitingPriority\000"
 8817      67686573 
 8817      74576169 
 8817      74696E67 
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 222


 8817      5072696F 
 8818              	.LASF7:
 8819 092b 756E7369 		.ascii	"unsigned char\000"
 8819      676E6564 
 8819      20636861 
 8819      7200
 8820              	.LASF11:
 8821 0939 5F5F7569 		.ascii	"__uint32_t\000"
 8821      6E743332 
 8821      5F7400
 8822              	.LASF140:
 8823 0944 764C6973 		.ascii	"vListInitialise\000"
 8823      74496E69 
 8823      7469616C 
 8823      69736500 
 8824              	.LASF81:
 8825 0954 70727643 		.ascii	"prvCopyDataFromQueue\000"
 8825      6F707944 
 8825      61746146 
 8825      726F6D51 
 8825      75657565 
 8826              	.LASF149:
 8827 0969 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 8827      6B507269 
 8827      6F726974 
 8827      79446973 
 8827      696E6865 
 8828              	.LASF96:
 8829 098d 78546963 		.ascii	"xTicksToWait\000"
 8829      6B73546F 
 8829      57616974 
 8829      00
 8830              	.LASF25:
 8831 099a 70764F77 		.ascii	"pvOwner\000"
 8831      6E657200 
 8832              	.LASF147:
 8833 09a2 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 8833      6B476574 
 8833      43757272 
 8833      656E7454 
 8833      61736B48 
 8834              	.LASF43:
 8835 09bc 70634865 		.ascii	"pcHead\000"
 8835      616400
 8836              	.LASF105:
 8837 09c3 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8837      75654769 
 8837      76654D75 
 8837      74657852 
 8837      65637572 
 8838              	.LASF82:
 8839 09dc 70727655 		.ascii	"prvUnlockQueue\000"
 8839      6E6C6F63 
 8839      6B517565 
 8839      756500
 8840              	.LASF89:
 8841 09eb 78517565 		.ascii	"xQueueGenericReset\000"
ARM GAS  C:\Users\nicol\AppData\Local\Temp\ccw7oxft.s 			page 223


 8841      75654765 
 8841      6E657269 
 8841      63526573 
 8841      657400
 8842              	.LASF126:
 8843 09fe 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 8843      75654973 
 8843      51756575 
 8843      65456D70 
 8843      74794672 
 8844              	.LASF5:
 8845 0a18 7369676E 		.ascii	"signed char\000"
 8845      65642063 
 8845      68617200 
 8846              	.LASF9:
 8847 0a24 73686F72 		.ascii	"short unsigned int\000"
 8847      7420756E 
 8847      7369676E 
 8847      65642069 
 8847      6E7400
 8848              	.LASF161:
 8849 0a37 6D656D63 		.ascii	"memcpy\000"
 8849      707900
 8850              	.LASF62:
 8851 0a3e 78515545 		.ascii	"xQUEUE\000"
 8851      554500
 8852              	.LASF57:
 8853 0a45 784D7574 		.ascii	"xMutexHolder\000"
 8853      6578486F 
 8853      6C646572 
 8853      00
 8854              	.LASF79:
 8855 0a52 78506F73 		.ascii	"xPosition\000"
 8855      6974696F 
 8855      6E00
 8856              	.LASF50:
 8857 0a5c 6352784C 		.ascii	"cRxLock\000"
 8857      6F636B00 
 8858              	.LASF138:
 8859 0a64 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 8859      6B52656D 
 8859      6F766546 
 8859      726F6D45 
 8859      76656E74 
 8860              	.LASF92:
 8861 0a7d 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8861      75654372 
 8861      65617465 
 8861      436F756E 
 8861      74696E67 
 8862              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
